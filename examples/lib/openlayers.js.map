{
  "version": 3,
  "sources": ["../../node_modules/ol/events/Event.js", "../../node_modules/ol/ObjectEventType.js", "../../node_modules/ol/Disposable.js", "../../node_modules/ol/array.js", "../../node_modules/ol/functions.js", "../../node_modules/ol/obj.js", "../../node_modules/ol/events/Target.js", "../../node_modules/ol/events/EventType.js", "../../node_modules/ol/events.js", "../../node_modules/ol/Observable.js", "../../node_modules/ol/util.js", "../../node_modules/ol/Object.js", "../../node_modules/ol/AssertionError.js", "../../node_modules/ol/CollectionEventType.js", "../../node_modules/ol/Collection.js", "../../node_modules/ol/has.js", "../../node_modules/ol/asserts.js", "../../node_modules/ol/extent/Relationship.js", "../../node_modules/ol/extent.js", "../../node_modules/ol/math.js", "../../node_modules/ol/layer/Property.js", "../../node_modules/ol/layer/Base.js", "../../node_modules/ol/dom.js", "../../node_modules/ol/layer/Group.js", "../../node_modules/ol/MapEventType.js", "../../node_modules/ol/control/Control.js", "../../node_modules/rbush/rbush.min.js", "../../node_modules/ol-layerswitcher/dist/ol-layerswitcher.js", "../../node_modules/ol/Map.js", "../../node_modules/ol/renderer/Map.js", "../../node_modules/ol/transform.js", "../../node_modules/ol/color.js", "../../node_modules/ol/style/IconImageCache.js", "../../node_modules/ol/layer/Layer.js", "../../node_modules/ol/render/EventType.js", "../../node_modules/ol/coordinate.js", "../../node_modules/ol/string.js", "../../node_modules/ol/renderer/Composite.js", "../../node_modules/ol/render/Event.js", "../../node_modules/ol/css.js", "../../node_modules/ol/render/canvas.js", "../../node_modules/ol/MapEvent.js", "../../node_modules/ol/MapBrowserEvent.js", "../../node_modules/ol/MapBrowserEventHandler.js", "../../node_modules/ol/MapBrowserEventType.js", "../../node_modules/ol/pointer/EventType.js", "../../node_modules/ol/MapProperty.js", "../../node_modules/ol/TileQueue.js", "../../node_modules/ol/structs/PriorityQueue.js", "../../node_modules/ol/TileState.js", "../../node_modules/ol/View.js", "../../node_modules/ol/ViewHint.js", "../../node_modules/ol/ViewProperty.js", "../../node_modules/ol/proj.js", "../../node_modules/ol/proj/Units.js", "../../node_modules/ol/proj/Projection.js", "../../node_modules/ol/proj/epsg3857.js", "../../node_modules/ol/proj/epsg4326.js", "../../node_modules/ol/proj/projections.js", "../../node_modules/ol/proj/transforms.js", "../../node_modules/ol/sphere.js", "../../node_modules/ol/centerconstraint.js", "../../node_modules/ol/resolutionconstraint.js", "../../node_modules/ol/rotationconstraint.js", "../../node_modules/ol/easing.js", "../../node_modules/ol/geom/Geometry.js", "../../node_modules/ol/geom/flat/transform.js", "../../node_modules/ol/geom/SimpleGeometry.js", "../../node_modules/ol/geom/flat/closest.js", "../../node_modules/ol/geom/LinearRing.js", "../../node_modules/ol/geom/flat/deflate.js", "../../node_modules/ol/geom/flat/simplify.js", "../../node_modules/ol/geom/flat/inflate.js", "../../node_modules/ol/geom/flat/area.js", "../../node_modules/ol/geom/Point.js", "../../node_modules/ol/geom/Polygon.js", "../../node_modules/ol/geom/flat/contains.js", "../../node_modules/ol/geom/flat/interiorpoint.js", "../../node_modules/ol/geom/flat/intersectsextent.js", "../../node_modules/ol/geom/flat/segments.js", "../../node_modules/ol/geom/flat/reverse.js", "../../node_modules/ol/geom/flat/orient.js", "../../node_modules/ol/control/Attribution.js", "../../node_modules/ol/control/defaults.js", "../../node_modules/ol/control/Rotate.js", "../../node_modules/ol/control/Zoom.js", "../../node_modules/ol/interaction/defaults.js", "../../node_modules/ol/interaction/Interaction.js", "../../node_modules/ol/interaction/Property.js", "../../node_modules/ol/interaction/DoubleClickZoom.js", "../../node_modules/ol/interaction/Pointer.js", "../../node_modules/ol/interaction/DragPan.js", "../../node_modules/ol/events/condition.js", "../../node_modules/ol/interaction/DragRotate.js", "../../node_modules/ol/interaction/DragBox.js", "../../node_modules/ol/render/Box.js", "../../node_modules/ol/interaction/DragZoom.js", "../../node_modules/ol/interaction/KeyboardPan.js", "../../node_modules/ol/events/KeyCode.js", "../../node_modules/ol/interaction/KeyboardZoom.js", "../../node_modules/ol/Kinetic.js", "../../node_modules/ol/interaction/MouseWheelZoom.js", "../../node_modules/ol/interaction/PinchRotate.js", "../../node_modules/ol/interaction/PinchZoom.js", "../../node_modules/ol/size.js", "../../node_modules/ol/layer/TileProperty.js", "../../node_modules/ol/layer/BaseTile.js", "../../node_modules/ol/renderer/Layer.js", "../../node_modules/ol/ImageState.js", "../../node_modules/ol/renderer/canvas/Layer.js", "../../node_modules/ol/Tile.js", "../../node_modules/ol/ImageTile.js", "../../node_modules/ol/Image.js", "../../node_modules/ol/reproj/Tile.js", "../../node_modules/ol/reproj/Triangulation.js", "../../node_modules/ol/reproj.js", "../../node_modules/ol/TileRange.js", "../../node_modules/ol/renderer/canvas/TileLayer.js", "../../node_modules/ol/layer/Tile.js", "../../src/ol.js", "../../node_modules/ol/layer/BaseVector.js", "../../node_modules/ol/style/Image.js", "../../node_modules/ol/colorlike.js", "../../node_modules/ol/style/RegularShape.js", "../../node_modules/ol/style/Circle.js", "../../node_modules/ol/style/Fill.js", "../../node_modules/ol/style/Stroke.js", "../../node_modules/ol/style/Style.js", "../../node_modules/ol/style/Icon.js", "../../node_modules/ol/style/IconImage.js", "../../node_modules/ol/style/Text.js", "../../node_modules/ol/style/flat.js", "../../node_modules/ol/render/canvas/Instruction.js", "../../node_modules/ol/render/canvas/Builder.js", "../../node_modules/ol/render/VectorContext.js", "../../node_modules/ol/render/canvas/ImageBuilder.js", "../../node_modules/ol/render/canvas/LineStringBuilder.js", "../../node_modules/ol/render/canvas/PolygonBuilder.js", "../../node_modules/ol/render/canvas/TextBuilder.js", "../../node_modules/ol/geom/flat/straightchunk.js", "../../node_modules/ol/render/canvas/BuilderGroup.js", "../../node_modules/ol/render/canvas/Executor.js", "../../node_modules/ol/geom/flat/textpath.js", "../../node_modules/ol/geom/flat/length.js", "../../node_modules/ol/render/canvas/ExecutorGroup.js", "../../node_modules/ol/render/canvas/Immediate.js", "../../node_modules/ol/render/canvas/hitdetect.js", "../../node_modules/ol/renderer/canvas/VectorLayer.js", "../../node_modules/ol/renderer/vector.js", "../../node_modules/ol/layer/Vector.js", "../../node_modules/ol/source/TileImage.js", "../../node_modules/ol/structs/LRUCache.js", "../../node_modules/ol/tilecoord.js", "../../node_modules/ol/TileCache.js", "../../node_modules/ol/source/TileEventType.js", "../../node_modules/ol/source/Tile.js", "../../node_modules/ol/source/Source.js", "../../node_modules/ol/tilegrid/TileGrid.js", "../../node_modules/ol/tilegrid.js", "../../node_modules/ol/tileurlfunction.js", "../../node_modules/ol/source/UrlTile.js", "../../node_modules/ol/uri.js", "../../node_modules/ol/source/WMTS.js", "../../node_modules/ol/tilegrid/WMTS.js", "../../node_modules/ol/source/wms.js", "../../node_modules/ol/source/TileWMS.js", "../../node_modules/ol/source/Vector.js", "../../node_modules/ol/structs/RBush.js", "../../node_modules/ol/source/VectorEventType.js", "../../node_modules/ol/loadingstrategy.js", "../../node_modules/ol/featureloader.js", "../../node_modules/ol/xml.js", "../../node_modules/ol/format/XML.js", "../../node_modules/ol/format/xlink.js", "../../node_modules/ol/format/xsd.js", "../../node_modules/ol/format/OWS.js", "../../node_modules/ol/format/WMTSCapabilities.js", "../../node_modules/ol/Feature.js", "../../node_modules/ol/geom/LineString.js", "../../node_modules/ol/geom/flat/interpolate.js", "../../node_modules/ol/geom/MultiLineString.js", "../../node_modules/ol/geom/MultiPoint.js", "../../node_modules/ol/geom/MultiPolygon.js", "../../node_modules/ol/geom/flat/center.js", "../../node_modules/ol/format/Feature.js", "../../node_modules/ol/format/XMLFeature.js", "../../node_modules/ol/format/GMLBase.js", "../../node_modules/ol/format/GML2.js", "../../node_modules/ol/format/GML3.js", "../../node_modules/ol/format/GML32.js", "../../node_modules/ol/format/filter/Filter.js", "../../node_modules/ol/format/filter/LogicalNary.js", "../../node_modules/ol/format/filter/And.js", "../../node_modules/ol/format/filter/Bbox.js", "../../node_modules/ol/format/filter.js", "../../node_modules/ol/format/WFS.js", "../../node_modules/ol/control/ScaleLine.js", "../../node_modules/ol/proj/proj4.js", "../../node_modules/proj4/lib/global.js", "../../node_modules/proj4/lib/constants/values.js", "../../node_modules/proj4/lib/constants/PrimeMeridian.js", "../../node_modules/proj4/lib/constants/units.js", "../../node_modules/proj4/lib/match.js", "../../node_modules/proj4/lib/projString.js", "../../node_modules/wkt-parser/parser.js", "../../node_modules/wkt-parser/process.js", "../../node_modules/wkt-parser/index.js", "../../node_modules/proj4/lib/defs.js", "../../node_modules/proj4/lib/parseCode.js", "../../node_modules/proj4/lib/extend.js", "../../node_modules/proj4/lib/common/msfnz.js", "../../node_modules/proj4/lib/common/sign.js", "../../node_modules/proj4/lib/common/adjust_lon.js", "../../node_modules/proj4/lib/common/tsfnz.js", "../../node_modules/proj4/lib/common/phi2z.js", "../../node_modules/proj4/lib/projections/merc.js", "../../node_modules/proj4/lib/projections/longlat.js", "../../node_modules/proj4/lib/projections.js", "../../node_modules/proj4/lib/constants/Ellipsoid.js", "../../node_modules/proj4/lib/deriveConstants.js", "../../node_modules/proj4/lib/constants/Datum.js", "../../node_modules/proj4/lib/datum.js", "../../node_modules/proj4/lib/nadgrid.js", "../../node_modules/proj4/lib/Proj.js", "../../node_modules/proj4/lib/datumUtils.js", "../../node_modules/proj4/lib/datum_transform.js", "../../node_modules/proj4/lib/adjust_axis.js", "../../node_modules/proj4/lib/common/toPoint.js", "../../node_modules/proj4/lib/checkSanity.js", "../../node_modules/proj4/lib/transform.js", "../../node_modules/proj4/lib/core.js", "../../node_modules/mgrs/mgrs.js", "../../node_modules/proj4/lib/Point.js", "../../node_modules/proj4/lib/common/pj_enfn.js", "../../node_modules/proj4/lib/common/pj_mlfn.js", "../../node_modules/proj4/lib/common/pj_inv_mlfn.js", "../../node_modules/proj4/lib/projections/tmerc.js", "../../node_modules/proj4/lib/common/sinh.js", "../../node_modules/proj4/lib/common/hypot.js", "../../node_modules/proj4/lib/common/log1py.js", "../../node_modules/proj4/lib/common/asinhy.js", "../../node_modules/proj4/lib/common/gatg.js", "../../node_modules/proj4/lib/common/clens.js", "../../node_modules/proj4/lib/common/cosh.js", "../../node_modules/proj4/lib/common/clens_cmplx.js", "../../node_modules/proj4/lib/projections/etmerc.js", "../../node_modules/proj4/lib/common/adjust_zone.js", "../../node_modules/proj4/lib/projections/utm.js", "../../node_modules/proj4/lib/common/srat.js", "../../node_modules/proj4/lib/projections/gauss.js", "../../node_modules/proj4/lib/projections/sterea.js", "../../node_modules/proj4/lib/projections/stere.js", "../../node_modules/proj4/lib/projections/somerc.js", "../../node_modules/proj4/lib/projections/omerc.js", "../../node_modules/proj4/lib/projections/lcc.js", "../../node_modules/proj4/lib/projections/krovak.js", "../../node_modules/proj4/lib/common/mlfn.js", "../../node_modules/proj4/lib/common/e0fn.js", "../../node_modules/proj4/lib/common/e1fn.js", "../../node_modules/proj4/lib/common/e2fn.js", "../../node_modules/proj4/lib/common/e3fn.js", "../../node_modules/proj4/lib/common/gN.js", "../../node_modules/proj4/lib/common/adjust_lat.js", "../../node_modules/proj4/lib/common/imlfn.js", "../../node_modules/proj4/lib/projections/cass.js", "../../node_modules/proj4/lib/common/qsfnz.js", "../../node_modules/proj4/lib/projections/laea.js", "../../node_modules/proj4/lib/common/asinz.js", "../../node_modules/proj4/lib/projections/aea.js", "../../node_modules/proj4/lib/projections/gnom.js", "../../node_modules/proj4/lib/common/iqsfnz.js", "../../node_modules/proj4/lib/projections/cea.js", "../../node_modules/proj4/lib/projections/eqc.js", "../../node_modules/proj4/lib/projections/poly.js", "../../node_modules/proj4/lib/projections/nzmg.js", "../../node_modules/proj4/lib/projections/mill.js", "../../node_modules/proj4/lib/projections/sinu.js", "../../node_modules/proj4/lib/projections/moll.js", "../../node_modules/proj4/lib/projections/eqdc.js", "../../node_modules/proj4/lib/projections/vandg.js", "../../node_modules/proj4/lib/projections/aeqd.js", "../../node_modules/proj4/lib/projections/ortho.js", "../../node_modules/proj4/lib/projections/qsc.js", "../../node_modules/proj4/lib/projections/robin.js", "../../node_modules/proj4/lib/projections/geocent.js", "../../node_modules/proj4/lib/projections/tpers.js", "../../node_modules/proj4/lib/projections/geos.js", "../../node_modules/proj4/projs.js", "../../node_modules/proj4/lib/index.js"],
  "sourcesContent": ["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n", "/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n", "/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n", "/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n", "/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n", "/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n", "/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n", "/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n", "/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n", "/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n", "/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n", "/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n", "/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n", "/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n", "/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n", "/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n", "/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n", "/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n", "/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n", "/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n", "/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n", "/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n", "import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n", "/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n", "/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n", "/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n", "!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n", "(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\r\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\r\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\r\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\r\n\r\nControl = 'default' in Control ? Control['default'] : Control;\r\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\r\n\r\n/**\r\n * @protected\r\n */\r\nconst CSS_PREFIX = 'layer-switcher-';\r\n/**\r\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\r\n * associated with a map which have a `title` property.\r\n *\r\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\r\n * base map layers should have a `type` property set to `base`. Group layers\r\n * (`LayerGroup`) can be used to visually group layers together; a group\r\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\r\n * with a toggle.\r\n *\r\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\r\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\r\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\r\n * LayerSwitcher properties.\r\n *\r\n * Layer and group properties can either be set by adding extra properties\r\n * to their options when they are created or via their set method.\r\n *\r\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\r\n * ```javascript\r\n * var lyr = new ol.layer.Tile({\r\n *   // Specify a title property which will be displayed by the layer switcher\r\n *   title: 'OpenStreetMap',\r\n *   visible: true,\r\n *   source: new ol.source.OSM()\r\n * })\r\n * ```\r\n *\r\n * Alternatively the properties can be set via the `set` method after a layer has been created:\r\n * ```javascript\r\n * var lyr = new ol.layer.Tile({\r\n *   visible: true,\r\n *   source: new ol.source.OSM()\r\n * })\r\n * // Specify a title property which will be displayed by the layer switcher\r\n * lyr.set('title', 'OpenStreetMap');\r\n * ```\r\n *\r\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#addControl).\r\n * ```javascript\r\n * var layerSwitcher = new LayerSwitcher({\r\n *   reverse: true,\r\n *   groupSelectStyle: 'group'\r\n * });\r\n * map.addControl(layerSwitcher);\r\n * ```\r\n *\r\n * @constructor\r\n * @extends {ol/control/Control~Control}\r\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\r\n */\r\nclass LayerSwitcher extends Control {\r\n    constructor(opt_options) {\r\n        const options = Object.assign({}, opt_options);\r\n        const element = document.createElement('div');\r\n        super({ element: element, target: options.target });\r\n        this.activationMode = options.activationMode || 'mouseover';\r\n        this.startActive = options.startActive === true;\r\n        // TODO Next: Rename to showButtonContent\r\n        this.label = options.label !== undefined ? options.label : '';\r\n        // TODO Next: Rename to hideButtonContent\r\n        this.collapseLabel =\r\n            options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\r\n        // TODO Next: Rename to showButtonTitle\r\n        this.tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\r\n        // TODO Next: Rename to hideButtonTitle\r\n        this.collapseTipLabel = options.collapseTipLabel\r\n            ? options.collapseTipLabel\r\n            : 'Collapse legend';\r\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\r\n        this.reverse = options.reverse !== false;\r\n        this.mapListeners = [];\r\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\r\n        if (LayerSwitcher.isTouchDevice_()) {\r\n            this.hiddenClassName += ' touch';\r\n        }\r\n        this.shownClassName = 'shown';\r\n        element.className = this.hiddenClassName;\r\n        this.button = document.createElement('button');\r\n        element.appendChild(this.button);\r\n        this.panel = document.createElement('div');\r\n        this.panel.className = 'panel';\r\n        element.appendChild(this.panel);\r\n        LayerSwitcher.enableTouchScroll_(this.panel);\r\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + this.groupSelectStyle);\r\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + this.activationMode);\r\n        if (this.activationMode === 'click') {\r\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\r\n            element.classList.add('activationModeClick');\r\n            this.button.onclick = (e) => {\r\n                const evt = e || window.event;\r\n                if (this.element.classList.contains(this.shownClassName)) {\r\n                    this.hidePanel();\r\n                }\r\n                else {\r\n                    this.showPanel();\r\n                }\r\n                evt.preventDefault();\r\n            };\r\n        }\r\n        else {\r\n            this.button.onmouseover = () => {\r\n                this.showPanel();\r\n            };\r\n            this.button.onclick = (e) => {\r\n                const evt = e || window.event;\r\n                this.showPanel();\r\n                evt.preventDefault();\r\n            };\r\n            this.panel.onmouseout = (evt) => {\r\n                if (!this.panel.contains(evt.relatedTarget)) {\r\n                    this.hidePanel();\r\n                }\r\n            };\r\n        }\r\n        this.updateButton();\r\n    }\r\n    /**\r\n     * Set the map instance the control is associated with.\r\n     * @param map The map instance.\r\n     */\r\n    setMap(map) {\r\n        // Clean up listeners associated with the previous map\r\n        for (let i = 0; i < this.mapListeners.length; i++) {\r\n            ol_Observable.unByKey(this.mapListeners[i]);\r\n        }\r\n        this.mapListeners.length = 0;\r\n        // Wire up listeners etc. and store reference to new map\r\n        super.setMap(map);\r\n        if (map) {\r\n            if (this.startActive) {\r\n                this.showPanel();\r\n            }\r\n            else {\r\n                this.renderPanel();\r\n            }\r\n            if (this.activationMode !== 'click') {\r\n                this.mapListeners.push(map.on('pointerdown', () => {\r\n                    this.hidePanel();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Show the layer panel. Fires `'show'` event.\r\n     * @fires LayerSwitcher#show\r\n     */\r\n    showPanel() {\r\n        if (!this.element.classList.contains(this.shownClassName)) {\r\n            this.element.classList.add(this.shownClassName);\r\n            this.updateButton();\r\n            this.renderPanel();\r\n        }\r\n        /**\r\n         * Event triggered after the panel has been shown.\r\n         * Listen to the event via the `on` or `once` methods; for example:\r\n         * ```js\r\n         * var layerSwitcher = new LayerSwitcher();\r\n         * map.addControl(layerSwitcher);\r\n         *\r\n         * layerSwitcher.on('show', evt => {\r\n         *   console.log('show', evt);\r\n         * });\r\n         * @event LayerSwitcher#show\r\n         */\r\n        this.dispatchEvent('show');\r\n    }\r\n    /**\r\n     * Hide the layer panel. Fires `'hide'` event.\r\n     * @fires LayerSwitcher#hide\r\n     */\r\n    hidePanel() {\r\n        if (this.element.classList.contains(this.shownClassName)) {\r\n            this.element.classList.remove(this.shownClassName);\r\n            this.updateButton();\r\n        }\r\n        /**\r\n         * Event triggered after the panel has been hidden.\r\n         * @event LayerSwitcher#hide\r\n         */\r\n        this.dispatchEvent('hide');\r\n    }\r\n    /**\r\n     * Update button text content and attributes based on current\r\n     * state\r\n     */\r\n    updateButton() {\r\n        if (this.element.classList.contains(this.shownClassName)) {\r\n            this.button.textContent = this.collapseLabel;\r\n            this.button.setAttribute('title', this.collapseTipLabel);\r\n            this.button.setAttribute('aria-label', this.collapseTipLabel);\r\n        }\r\n        else {\r\n            this.button.textContent = this.label;\r\n            this.button.setAttribute('title', this.tipLabel);\r\n            this.button.setAttribute('aria-label', this.tipLabel);\r\n        }\r\n    }\r\n    /**\r\n     * Re-draw the layer panel to represent the current state of the layers.\r\n     */\r\n    renderPanel() {\r\n        this.dispatchEvent('render');\r\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\r\n            groupSelectStyle: this.groupSelectStyle,\r\n            reverse: this.reverse\r\n        });\r\n        this.dispatchEvent('rendercomplete');\r\n    }\r\n    /**\r\n     * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\r\n     * @param map The OpenLayers Map instance to render layers for\r\n     * @param panel The DOM Element into which the layer tree will be rendered\r\n     * @param options Options for panel, group, and layers\r\n     */\r\n    static renderPanel(map, panel, options) {\r\n        // Create the event.\r\n        const render_event = new Event('render');\r\n        // Dispatch the event.\r\n        panel.dispatchEvent(render_event);\r\n        options = options || {};\r\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\r\n        LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\r\n        while (panel.firstChild) {\r\n            panel.removeChild(panel.firstChild);\r\n        }\r\n        // Reset indeterminate state for all layers and groups before\r\n        // applying based on groupSelectStyle\r\n        LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\r\n            l.set('indeterminate', false);\r\n        });\r\n        if (options.groupSelectStyle === 'children' ||\r\n            options.groupSelectStyle === 'none') {\r\n            // Set visibile and indeterminate state of groups based on\r\n            // their children's visibility\r\n            LayerSwitcher.setGroupVisibility(map);\r\n        }\r\n        else if (options.groupSelectStyle === 'group') {\r\n            // Set child indetermiate state based on their parent's visibility\r\n            LayerSwitcher.setChildVisibility(map);\r\n        }\r\n        const ul = document.createElement('ul');\r\n        panel.appendChild(ul);\r\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\r\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\r\n            LayerSwitcher.renderPanel(map, panel, options);\r\n        });\r\n        // Create the event.\r\n        const rendercomplete_event = new Event('rendercomplete');\r\n        // Dispatch the event.\r\n        panel.dispatchEvent(rendercomplete_event);\r\n    }\r\n    /**\r\n     * **_[static]_** - Determine if a given layer group contains base layers\r\n     * @param grp Group to test\r\n     */\r\n    static isBaseGroup(grp) {\r\n        if (grp instanceof LayerGroup) {\r\n            const lyrs = grp.getLayers().getArray();\r\n            return lyrs.length && lyrs[0].get('type') === 'base';\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    static setGroupVisibility(map) {\r\n        // Get a list of groups, with the deepest first\r\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\r\n            return (l instanceof LayerGroup &&\r\n                !l.get('combine') &&\r\n                !LayerSwitcher.isBaseGroup(l));\r\n        }).reverse();\r\n        // console.log(groups.map(g => g.get('title')));\r\n        groups.forEach(function (grp) {\r\n            // TODO Can we use getLayersArray, is it public in the esm build?\r\n            const descendantVisibility = grp.getLayersArray().map(function (l) {\r\n                const state = l.getVisible();\r\n                // console.log('>', l.get('title'), state);\r\n                return state;\r\n            });\r\n            // console.log(descendantVisibility);\r\n            if (descendantVisibility.every(function (v) {\r\n                return v === true;\r\n            })) {\r\n                grp.setVisible(true);\r\n                grp.set('indeterminate', false);\r\n            }\r\n            else if (descendantVisibility.every(function (v) {\r\n                return v === false;\r\n            })) {\r\n                grp.setVisible(false);\r\n                grp.set('indeterminate', false);\r\n            }\r\n            else {\r\n                grp.setVisible(true);\r\n                grp.set('indeterminate', true);\r\n            }\r\n        });\r\n    }\r\n    static setChildVisibility(map) {\r\n        // console.log('setChildVisibility');\r\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\r\n            return (l instanceof LayerGroup &&\r\n                !l.get('combine') &&\r\n                !LayerSwitcher.isBaseGroup(l));\r\n        });\r\n        groups.forEach(function (grp) {\r\n            const group = grp;\r\n            // console.log(group.get('title'));\r\n            const groupVisible = group.getVisible();\r\n            const groupIndeterminate = group.get('indeterminate');\r\n            group\r\n                .getLayers()\r\n                .getArray()\r\n                .forEach(function (l) {\r\n                l.set('indeterminate', false);\r\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\r\n                    l.set('indeterminate', true);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Ensure only the top-most base layer is visible if more than one is visible.\r\n     * @param map The map instance.\r\n     * @param groupSelectStyle\r\n     * @protected\r\n     */\r\n    static ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\r\n        let lastVisibleBaseLyr;\r\n        LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\r\n            if (lyr.get('type') === 'base' && lyr.getVisible()) {\r\n                lastVisibleBaseLyr = lyr;\r\n            }\r\n        });\r\n        if (lastVisibleBaseLyr)\r\n            LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\r\n    }\r\n    /**\r\n     * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\r\n     * contained by the specified map or layer group; optionally filtering via `filterFn`\r\n     * @param grp The map or layer group for which layers are found.\r\n     * @param filterFn Optional function used to filter the returned layers\r\n     */\r\n    static getGroupsAndLayers(grp, filterFn) {\r\n        const layers = [];\r\n        filterFn =\r\n            filterFn ||\r\n                function (_lyr, _idx, _arr) {\r\n                    return true;\r\n                };\r\n        LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\r\n            if (lyr.get('title')) {\r\n                if (filterFn(lyr, idx, arr)) {\r\n                    layers.push(lyr);\r\n                }\r\n            }\r\n        });\r\n        return layers;\r\n    }\r\n    /**\r\n     * Toggle the visible state of a layer.\r\n     * Takes care of hiding other layers in the same exclusive group if the layer\r\n     * is toggle to visible.\r\n     * @protected\r\n     * @param map The map instance.\r\n     * @param lyr layer whose visibility will be toggled.\r\n     * @param visible Set whether the layer is shown\r\n     * @param groupSelectStyle\r\n     * @protected\r\n     */\r\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\r\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\r\n        lyr.setVisible(visible);\r\n        if (visible && lyr.get('type') === 'base') {\r\n            // Hide all other base layers regardless of grouping\r\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\r\n                if (l != lyr && l.get('type') === 'base') {\r\n                    l.setVisible(false);\r\n                }\r\n            });\r\n        }\r\n        if (lyr instanceof LayerGroup &&\r\n            !lyr.get('combine') &&\r\n            groupSelectStyle === 'children') {\r\n            lyr.getLayers().forEach((l) => {\r\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Render all layers that are children of a group.\r\n     * @param map The map instance.\r\n     * @param lyr Layer to be rendered (should have a title property).\r\n     * @param idx Position in parent group list.\r\n     * @param options Options for groups and layers\r\n     * @protected\r\n     */\r\n    static renderLayer_(map, lyr, idx, options, render) {\r\n        const li = document.createElement('li');\r\n        const lyrTitle = lyr.get('title');\r\n        const checkboxId = LayerSwitcher.uuid();\r\n        const label = document.createElement('label');\r\n        if (lyr instanceof LayerGroup && !lyr.get('combine')) {\r\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\r\n            li.classList.add('group');\r\n            if (isBaseGroup) {\r\n                li.classList.add(CSS_PREFIX + 'base-group');\r\n            }\r\n            // Group folding\r\n            if (lyr.get('fold')) {\r\n                li.classList.add(CSS_PREFIX + 'fold');\r\n                li.classList.add(CSS_PREFIX + lyr.get('fold'));\r\n                const btn = document.createElement('button');\r\n                btn.onclick = function (e) {\r\n                    const evt = e || window.event;\r\n                    LayerSwitcher.toggleFold_(lyr, li);\r\n                    evt.preventDefault();\r\n                };\r\n                li.appendChild(btn);\r\n            }\r\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\r\n                const input = document.createElement('input');\r\n                input.type = 'checkbox';\r\n                input.id = checkboxId;\r\n                input.checked = lyr.getVisible();\r\n                input.indeterminate = lyr.get('indeterminate');\r\n                input.onchange = function (e) {\r\n                    const target = e.target;\r\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\r\n                    render(lyr);\r\n                };\r\n                li.appendChild(input);\r\n                label.htmlFor = checkboxId;\r\n            }\r\n            label.innerHTML = lyrTitle;\r\n            li.appendChild(label);\r\n            const ul = document.createElement('ul');\r\n            li.appendChild(ul);\r\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\r\n        }\r\n        else {\r\n            li.className = 'layer';\r\n            const input = document.createElement('input');\r\n            if (lyr.get('type') === 'base') {\r\n                input.type = 'radio';\r\n            }\r\n            else {\r\n                input.type = 'checkbox';\r\n            }\r\n            input.id = checkboxId;\r\n            input.checked = lyr.get('visible');\r\n            input.indeterminate = lyr.get('indeterminate');\r\n            input.onchange = function (e) {\r\n                const target = e.target;\r\n                LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\r\n                render(lyr);\r\n            };\r\n            li.appendChild(input);\r\n            label.htmlFor = checkboxId;\r\n            label.innerHTML = lyrTitle;\r\n            const rsl = map.getView().getResolution();\r\n            if (rsl >= lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\r\n                label.className += ' disabled';\r\n            }\r\n            else if (lyr.getMinZoom && lyr.getMaxZoom) {\r\n                const zoom = map.getView().getZoom();\r\n                if (zoom <= lyr.getMinZoom() || zoom > lyr.getMaxZoom()) {\r\n                    label.className += ' disabled';\r\n                }\r\n            }\r\n            li.appendChild(label);\r\n        }\r\n        return li;\r\n    }\r\n    /**\r\n     * Render all layers that are children of a group.\r\n     * @param map The map instance.\r\n     * @param lyr Group layer whose children will be rendered.\r\n     * @param elm DOM element that children will be appended to.\r\n     * @param options Options for groups and layers\r\n     * @protected\r\n     */\r\n    static renderLayers_(map, lyr, elm, options, render) {\r\n        let lyrs = lyr.getLayers().getArray().slice();\r\n        if (options.reverse)\r\n            lyrs = lyrs.reverse();\r\n        for (let i = 0, l; i < lyrs.length; i++) {\r\n            l = lyrs[i];\r\n            if (l.get('title')) {\r\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * **_[static]_** - Call the supplied function for each layer in the passed layer group\r\n     * recursing nested groups.\r\n     * @param lyr The layer group to start iterating from.\r\n     * @param fn Callback which will be called for each layer\r\n     * found under `lyr`.\r\n     */\r\n    static forEachRecursive(lyr, fn) {\r\n        lyr.getLayers().forEach(function (lyr, idx, a) {\r\n            fn(lyr, idx, a);\r\n            if (lyr instanceof LayerGroup) {\r\n                LayerSwitcher.forEachRecursive(lyr, fn);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * **_[static]_** - Generate a UUID\r\n     * Adapted from http://stackoverflow.com/a/2117523/526860\r\n     * @returns {String} UUID\r\n     */\r\n    static uuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n            return v.toString(16);\r\n        });\r\n    }\r\n    /**\r\n     * Apply workaround to enable scrolling of overflowing content within an\r\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\r\n     * @param elm Element on which to enable touch scrolling\r\n     * @protected\r\n     */\r\n    static enableTouchScroll_(elm) {\r\n        if (LayerSwitcher.isTouchDevice_()) {\r\n            let scrollStartPos = 0;\r\n            elm.addEventListener('touchstart', function (event) {\r\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\r\n            }, false);\r\n            elm.addEventListener('touchmove', function (event) {\r\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\r\n            }, false);\r\n        }\r\n    }\r\n    /**\r\n     * Determine if the current browser supports touch events. Adapted from\r\n     * https://gist.github.com/chrismbarr/4107472\r\n     * @returns {Boolean} True if client can have 'TouchEvent' event\r\n     * @protected\r\n     */\r\n    static isTouchDevice_() {\r\n        try {\r\n            document.createEvent('TouchEvent');\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Fold/unfold layer group\r\n     * @param lyr Layer group to fold/unfold\r\n     * @param li List item containing layer group\r\n     * @protected\r\n     */\r\n    static toggleFold_(lyr, li) {\r\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\r\n        lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\r\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\r\n    }\r\n    /**\r\n     * If a valid groupSelectStyle value is not provided then return the default\r\n     * @param groupSelectStyle The string to check for validity\r\n     * @returns The value groupSelectStyle, if valid, the default otherwise\r\n     * @protected\r\n     */\r\n    static getGroupSelectStyle(groupSelectStyle) {\r\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\r\n            ? groupSelectStyle\r\n            : 'children';\r\n    }\r\n}\r\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\r\n// OpenLayers\r\nif (window['ol'] && window['ol']['control']) {\r\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\r\n}\r\n\r\nreturn LayerSwitcher;\r\n\r\n})));\r\n", "/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n", "/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n", "/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3\u00D73 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n", "/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n", "/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n", "/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n", "/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n", "/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47\u00B0 58\u2032 60\u2033 N 7\u00B0 50\u2032 60\u2033 E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47\u00B0 58\u2032 60.0\u2033 N 7\u00B0 50\u2032 60.0\u2033 E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n", "/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n", "/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n", "/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n", "/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n", "/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, '\u017Dg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n", "/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n", "/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n", "/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n", "/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n", "/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n", "/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n", "/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n", "/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n", "/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n", "/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n", "/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n", "/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n", "/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n", "/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n", "/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n", "/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n", "/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n", "/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n", "/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n", "/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n", "/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n", "/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n", "/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n", "/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n", "/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n", "/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n", "/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n", "/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n", "/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n", "/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n", "/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n", "/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n", "/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n", "/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n", "/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n", "/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n", "/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n", "/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='\u203A'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n", "/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n", "/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='\u21E7'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n", "/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='\u2013'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n", "/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n", "/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n", "/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n", "/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n", "/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n", "/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n", "/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n", "/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n", "/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n", "/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n", "/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n", "/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n", "/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n", "/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n", "/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n", "/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n", "/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n", "/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n", "/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n", "/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n", "/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n", "/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n", "/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n", "/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n", "/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n", "/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n", "/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n", "/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n", "/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n", "/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n", "/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n", "/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n", "export { default as Map } from 'ol/Map';\nexport { default as View } from 'ol/View';\nexport { default as TileLayer } from 'ol/layer/Tile';\nexport { default as LayerGroup } from 'ol/layer/Group';\nexport { default as VectorLayer } from 'ol/layer/Vector';\nexport { default as WMTS, optionsFromCapabilities } from 'ol/source/WMTS';\nexport { default as TileWMS } from 'ol/source/TileWMS';\nexport { default as VectorSource } from 'ol/source/Vector';\nexport { default as WMTSCapabilities } from 'ol/format/WMTSCapabilities';\nexport { default as WFS } from 'ol/format/WFS';\nexport { default as ScaleLine } from 'ol/control/ScaleLine';\nexport { default as Style } from 'ol/style/Style';\nexport { default as Stroke } from 'ol/style/Stroke';\nexport { default as Fill } from 'ol/style/Fill';\nexport { default as CircleStyle } from 'ol/style/Circle';\nexport * as olLoadingstrategy from 'ol/loadingstrategy';\nexport * as olProj from 'ol/proj';\nexport { register } from 'ol/proj/proj4';\nexport { default as proj4 } from 'proj4';\nexport { default as LayerSwitcher } from 'ol-layerswitcher';\n", "/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n", "/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n", "/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n", "/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |\u03B1                                   .   .\n    //       /                                         .   .\n    //      \u00B0 center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n", "/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n", "/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n", "/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n", "/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n", "/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n", "/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n", "/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45\u00B0 (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n", "/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45\u00B0 (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n", "/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n", "/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n", "/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n", "/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n", "/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n", "/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n", "/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n", "/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n", "/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n", "/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n", "/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n", "/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n", "/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n", "/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n", "/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n", "/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180\u00B0 to +180\u00B0). To support geometries in a coordinate range from -540\u00B0\n      // to +540\u00B0, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n", "/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n", "/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n", "/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n", "/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n", "/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n", "/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n", "/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n", "/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'\u00A9 Acme Inc.'`)\n * * an array of simple strings (e.g. `['\u00A9 Acme Inc.', '\u00A9 Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n", "/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n", "/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n", "/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n", "/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n", "/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n", "/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          Object.assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == 'KVP') {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n", "/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n", "/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n", "/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n", "/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180\u00B0 and 180\u00B0 meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n", "/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n", "/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n", "/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n", "/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n", "/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n", "/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n", "/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n", "/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n", "/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n", "/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n", "/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n", "/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n", "/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n", "/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n", "/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n", "/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n", "/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n", "/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n", "/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n", "/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      const feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      const fid =\n        node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n", "/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n", "/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n", "/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n", "/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n", "/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n", "/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n", "/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n", "/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n", "/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readTransactionResponseFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n", "/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = '\u03BCm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n", "/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = def.units;\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n", "export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n", "export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n", "var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n", "export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n", "var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n", "import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n", "export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n", "\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n", "var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n", "import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n", "import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n", "export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n", "export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}", "export default function(x) {\n  return x<0 ? -1 : 1;\n}", "\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n", "import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n", "import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n", "var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n", "import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n", "var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n", "import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n", "/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n", "import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n", "'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n", "import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n", "export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n", "export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}", "export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n", "import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n", "import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;", "\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100\u00B4k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n", "import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n", "var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}", "export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}", "import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n", "// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}", "export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n", "export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n", "import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n", "export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n", "export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}", "import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n", "// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n", "import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n", "export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}", "import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n", "/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme \u00E0 axe oblique et pour la transformation entre\n    des syst\u00E8mes de r\u00E9f\u00E9rence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}", "export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}", "export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}", "export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}", "export default function(x) {\n  return (x * x * x * (35 / 3072));\n}", "export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}", "import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n", "export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}", "import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}", "\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n", "export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}", "import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n", "// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};", "\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n", "import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}", "import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],
  "mappings": "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",
  "names": ["BaseEvent", "Event_default", "init_Event", "__esmMin", "type", "ObjectEventType_default", "init_ObjectEventType", "__esmMin", "Disposable", "Disposable_default", "init_Disposable", "__esmMin", "binarySearch", "haystack", "needle", "comparator", "mid", "cmp", "numberSafeCompareFunction", "low", "high", "found", "a", "b", "linearFindNearest", "arr", "target", "direction", "i", "reverseSubArray", "begin", "end", "tmp", "extend", "data", "extension", "length", "equals", "arr1", "arr2", "len1", "isSorted", "func", "strict", "compare", "currentVal", "index", "res", "init_array", "__esmMin", "TRUE", "FALSE", "VOID", "memoizeOne", "fn", "called", "lastResult", "lastArgs", "lastThis", "nextArgs", "equals", "init_functions", "__esmMin", "init_array", "clear", "object", "property", "isEmpty", "init_obj", "__esmMin", "Target", "Target_default", "init_Target", "__esmMin", "init_Disposable", "init_Event", "init_functions", "init_obj", "Disposable_default", "target", "type", "listener", "listeners", "listenersForType", "event", "isString", "evt", "Event_default", "dispatching", "pendingRemovals", "propagate", "i", "ii", "pr", "VOID", "clear", "index", "EventType_default", "init_EventType", "__esmMin", "listen", "target", "type", "listener", "thisArg", "once", "originalListener", "eventsKey", "listenOnce", "unlistenByKey", "key", "clear", "init_events", "__esmMin", "init_obj", "Observable_exports", "__export", "Observable_default", "unByKey", "key", "i", "ii", "unlistenByKey", "Observable", "init_Observable", "__esmMin", "init_Target", "init_EventType", "init_events", "Target_default", "EventType_default", "type", "listener", "len", "keys", "listen", "listenOnce", "abstract", "getUid", "obj", "uidCounter_", "init_util", "__esmMin", "ObjectEvent", "BaseObject", "Object_default", "init_Object", "__esmMin", "init_Event", "init_ObjectEventType", "init_Observable", "init_util", "init_obj", "Event_default", "type", "key", "oldValue", "Observable_default", "values", "getUid", "value", "eventType", "ObjectEventType_default", "listener", "silent", "source", "isEmpty", "messages", "AssertionError", "AssertionError_default", "init_AssertionError", "__esmMin", "code", "message", "CollectionEventType_default", "init_CollectionEventType", "__esmMin", "Property", "CollectionEvent", "Collection", "Collection_default", "init_Collection", "__esmMin", "init_AssertionError", "init_Object", "init_CollectionEventType", "init_Event", "Event_default", "type", "element", "index", "Object_default", "array", "options", "i", "ii", "arr", "f", "elem", "CollectionEventType_default", "n", "prev", "except", "AssertionError_default", "ua", "FIREFOX", "SAFARI", "SAFARI_BUG_237906", "WEBKIT", "MAC", "DEVICE_PIXEL_RATIO", "WORKER_OFFSCREEN_CANVAS", "IMAGE_DECODE", "PASSIVE_EVENT_LISTENERS", "init_has", "__esmMin", "passive", "options", "assert", "assertion", "errorCode", "AssertionError_default", "init_asserts", "__esmMin", "init_AssertionError", "Relationship_default", "init_Relationship", "__esmMin", "boundingExtent", "coordinates", "extent", "createEmpty", "i", "ii", "extendCoordinate", "_boundingExtentXYs", "xs", "ys", "dest", "minX", "minY", "maxX", "maxY", "createOrUpdate", "buffer", "value", "clone", "closestSquaredDistanceXY", "x", "y", "dx", "dy", "containsCoordinate", "coordinate", "containsXY", "containsExtent", "extent1", "extent2", "coordinateRelationship", "relationship", "Relationship_default", "createOrUpdateEmpty", "createOrUpdateFromCoordinate", "createOrUpdateFromFlatCoordinates", "flatCoordinates", "offset", "end", "stride", "extendFlatCoordinates", "equals", "extend", "extendXY", "forEachCorner", "callback", "val", "getBottomLeft", "getBottomRight", "getTopRight", "getTopLeft", "getArea", "area", "isEmpty", "getWidth", "getHeight", "getCenter", "getCorner", "corner", "assert", "getForViewAndSize", "center", "resolution", "rotation", "size", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "getRotatedViewport", "cosRotation", "sinRotation", "xCos", "xSin", "yCos", "ySin", "getIntersection", "intersection", "intersects", "returnOrUpdate", "intersectsSegment", "start", "startRel", "endRel", "startX", "startY", "endX", "endY", "slope", "applyTransform", "transformFn", "stops", "width", "height", "wrapX", "projection", "projectionExtent", "worldWidth", "wrapAndSliceX", "init_extent", "__esmMin", "init_Relationship", "init_asserts", "clamp", "value", "min", "max", "squaredSegmentDistance", "x", "y", "x1", "y1", "x2", "y2", "dx", "dy", "t", "squaredDistance", "solveLinearSystem", "mat", "n", "i", "maxRow", "maxEl", "r", "absValue", "tmp", "j", "coef", "k", "l", "m", "toRadians", "angleInDegrees", "modulo", "a", "b", "lerp", "toFixed", "decimals", "factor", "floor", "ceil", "init_math", "__esmMin", "Property_default", "init_Property", "__esmMin", "BaseLayer", "Base_default", "init_Base", "__esmMin", "init_Object", "init_Property", "init_util", "init_asserts", "init_math", "Object_default", "options", "properties", "Property_default", "assert", "managed", "state", "zIndex", "clamp", "array", "abstract", "states", "background", "extent", "maxResolution", "minResolution", "maxZoom", "minZoom", "opacity", "visible", "zindex", "createCanvasContext2D", "width", "height", "canvasPool", "settings", "canvas", "WORKER_OFFSCREEN_CANVAS", "releaseCanvas", "context", "replaceNode", "newNode", "oldNode", "parent", "removeNode", "node", "removeChildren", "replaceChildren", "children", "oldChildren", "i", "oldChild", "newChild", "init_dom", "__esmMin", "init_has", "Group_exports", "__export", "GroupEvent", "Group_default", "Property", "LayerGroup", "init_Group", "__esmMin", "init_Base", "init_Collection", "init_CollectionEventType", "init_Event", "init_EventType", "init_ObjectEventType", "init_asserts", "init_obj", "init_extent", "init_util", "init_events", "Event_default", "type", "layer", "Base_default", "options", "baseOptions", "layers", "Collection_default", "assert", "unlistenByKey", "listen", "CollectionEventType_default", "id", "clear", "layersArray", "i", "ii", "listenerKeys", "ObjectEventType_default", "EventType_default", "getUid", "event", "collectionEvent", "key", "collection", "currentLayers", "array", "dest", "states", "pos", "ownLayerState", "defaultZIndex", "layerState", "getIntersection", "MapEventType_default", "init_MapEventType", "__esmMin", "Control_exports", "__export", "Control_default", "Control", "init_Control", "__esmMin", "init_Object", "init_MapEventType", "init_functions", "init_events", "init_dom", "Object_default", "options", "element", "removeNode", "map", "i", "ii", "unlistenByKey", "VOID", "listen", "MapEventType_default", "mapEvent", "target", "require_rbush_min", "__commonJSMin", "exports", "module", "t", "i", "r", "e", "a", "h", "n", "o", "s", "l", "f", "u", "m", "c", "p", "d", "x", "v", "M", "require_ol_layerswitcher", "__commonJSMin", "exports", "module", "global", "factory", "Control", "ol_Observable", "LayerGroup", "CSS_PREFIX", "LayerSwitcher", "opt_options", "options", "element", "e", "evt", "map", "i", "panel", "render_event", "l", "_idx", "_a", "ul", "_changedLyr", "rendercomplete_event", "grp", "lyrs", "descendantVisibility", "v", "group", "groupVisible", "groupIndeterminate", "groupSelectStyle", "lastVisibleBaseLyr", "lyr", "_arr", "filterFn", "layers", "_lyr", "idx", "arr", "visible", "render", "li", "lyrTitle", "checkboxId", "label", "isBaseGroup", "btn", "input", "target", "rsl", "zoom", "elm", "fn", "a", "c", "r", "scrollStartPos", "event", "init_Object", "init_Collection", "init_CollectionEventType", "init_Disposable", "init_functions", "init_util", "init_has", "init_asserts", "tmp_", "create", "set", "transform", "a", "b", "c", "d", "e", "f", "setFromArray", "transform1", "transform2", "apply", "coordinate", "x", "y", "makeScale", "target", "x", "y", "set", "compose", "transform", "dx1", "dy1", "sx", "sy", "angle", "dx2", "dy2", "sin", "cos", "makeInverse", "target", "source", "det", "determinant", "assert", "a", "b", "c", "d", "e", "f", "mat", "transformStringDiv", "toString", "transformString", "WORKER_OFFSCREEN_CANVAS", "node", "init_extent", "init_asserts", "init_math", "HEX_COLOR_RE_", "NAMED_COLOR_RE_", "asString", "color", "toString", "fromNamed", "el", "rgb", "fromString", "cache", "cacheSize", "s", "i", "key", "fromStringInternal_", "asArray", "r", "g", "b", "a", "n", "d", "hasAlpha", "normalize", "assert", "clamp", "IconImageCache", "i", "key", "iconImage", "src", "crossOrigin", "color", "getKey", "maxCacheSize", "colorString", "asString", "shared", "IconImageCache", "init_Base", "init_EventType", "init_Property", "EventType_default", "init_asserts", "init_events", "Layer", "Base_default", "options", "baseOptions", "Property_default", "source", "array", "states", "unlistenByKey", "listen", "EventType_default", "pixel", "resolve", "frameState", "target", "layerRenderer", "map", "evt", "layerStatesArray", "layerState", "assert", "arrayLayerState", "inView", "viewState", "resolution", "zoom", "Layer_default", "init_extent", "compareVersions", "v1", "v2", "s1", "s2", "i", "n1", "n2", "add", "coordinate", "delta", "equals", "coordinate1", "coordinate2", "i", "rotate", "coordinate", "angle", "cosAngle", "sinAngle", "x", "y", "scale", "wrapX", "coordinate", "projection", "worldWidth", "getWidth", "worldsAway", "getWorldsAway", "sourceExtentWidth", "projectionExtent", "MapRenderer", "Disposable_default", "map", "type", "frameState", "abstract", "viewState", "coordinateToPixelTransform", "pixelToCoordinateTransform", "compose", "makeInverse", "coordinate", "hitTolerance", "checkWrapped", "callback", "thisArg", "layerFilter", "thisArg2", "result", "forEachFeatureAtCoordinate", "managed", "feature", "layer", "geometry", "projection", "translatedCoordinate", "wrapX", "offsets", "projectionExtent", "worldWidth", "getWidth", "layerStates", "numLayers", "matches", "tmpCoord", "i", "j", "layerState", "inView", "layerRenderer", "source", "coordinates", "order", "m", "a", "b", "TRUE", "shared", "expireIconCache", "Map_default", "init_ObjectEventType", "init_Event", "RenderEvent", "Event_default", "type", "inversePixelTransform", "frameState", "context", "CLASS_HIDDEN", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "CLASS_COLLAPSED", "fontRegEx", "fontRegExMatchIndex", "getFontParameters", "fontSpec", "match", "style", "i", "ii", "value", "init_Object", "init_has", "init_obj", "init_dom", "defaultFont", "defaultFillStyle", "defaultLineCap", "defaultLineDash", "defaultLineDashOffset", "defaultLineJoin", "defaultMiterLimit", "defaultStrokeStyle", "defaultTextAlign", "defaultTextBaseline", "defaultPadding", "defaultLineWidth", "checkedFonts", "Object_default", "measureContext", "measureFont", "textHeights", "registerFont", "size", "referenceFonts", "len", "text", "interval", "referenceWidth", "isAvailable", "fontStyle", "fontWeight", "fontFamily", "available", "i", "referenceFont", "measureTextWidth", "width", "check", "done", "fonts", "ii", "font", "clear", "fontSpec", "getFontParameters", "families", "family", "key", "measureTextHeight", "measureElement", "height", "WORKER_OFFSCREEN_CANVAS", "metrics", "measureText", "createCanvasContext2D", "measureAndCacheTextWidth", "cache", "prev", "curr", "getTextDimensions", "baseStyle", "chunks", "widths", "heights", "lineWidths", "lineWidth", "lineHeight", "currentWidth", "currentHeight", "drawImageOrLabel", "context", "transform", "opacity", "labelOrImage", "originX", "originY", "w", "h", "x", "y", "scale", "executeLabelInstructions", "label", "contextInstructions", "i", "ii", "init_events", "init_dom", "CompositeMapRenderer", "Map_default", "map", "listen", "checkedFonts", "ObjectEventType_default", "style", "CLASS_UNSELECTABLE", "container", "type", "frameState", "event", "Event_default", "unlistenByKey", "EventType_default", "layerStatesArray", "a", "b", "viewState", "declutterLayers", "previousElement", "i", "ii", "layerState", "layer", "sourceState", "inView", "element", "replaceChildren", "Composite_default", "init_EventType", "init_Group", "init_Event", "MapEvent", "Event_default", "type", "map", "frameState", "MapEvent_default", "MapBrowserEvent", "MapEvent_default", "type", "map", "originalEvent", "dragging", "frameState", "activePointers", "pixel", "coordinate", "MapBrowserEvent_default", "init_EventType", "init_EventType", "MapBrowserEventType_default", "EventType_default", "EventType_default", "init_Target", "init_has", "init_functions", "init_events", "MapBrowserEventHandler", "Target_default", "map", "moveTolerance", "element", "listen", "EventType_default", "PASSIVE_EVENT_LISTENERS", "pointerEvent", "newEvent", "MapBrowserEvent_default", "MapBrowserEventType_default", "event", "id", "pointerId", "unlistenByKey", "property", "value", "VOID", "doc", "dragging", "originalEvent", "MapBrowserEventHandler_default", "init_MapEventType", "MapProperty_default", "init_ObjectEventType", "init_EventType", "init_asserts", "init_obj", "DROP", "PriorityQueue", "priorityFunction", "keyFunction", "clear", "elements", "priorities", "element", "elementKey", "assert", "priority", "index", "i", "key", "count", "startIndex", "lIndex", "rIndex", "smallerChildIndex", "parentIndex", "n", "PriorityQueue_default", "TileState_default", "TileQueue", "PriorityQueue_default", "tilePriorityFunction", "tileChangeCallback", "element", "added", "EventType_default", "event", "tile", "state", "TileState_default", "tileKey", "maxTotalLoading", "maxNewLoads", "newLoads", "TileQueue_default", "getTilePriority", "frameState", "tileSourceKey", "tileCenter", "tileResolution", "DROP", "center", "deltaX", "deltaY", "init_Object", "ViewHint_default", "ViewProperty_default", "proj_exports", "__export", "METERS_PER_UNIT", "Projection_default", "addCommon", "addCoordinateTransforms", "addEquivalentProjections", "addEquivalentTransforms", "addProjection", "addProjections", "clearAllProjections", "clearUserProjection", "cloneTransform", "createProjection", "createSafeCoordinateTransform", "createTransformFromCoordinateTransform", "disableCoordinateWarning", "equivalent", "fromLonLat", "fromUserCoordinate", "fromUserExtent", "fromUserResolution", "get", "getPointResolution", "getTransform", "getTransformFromProjections", "getUserProjection", "identityTransform", "setUserProjection", "toLonLat", "toUserCoordinate", "toUserExtent", "toUserResolution", "transform", "transformExtent", "transformWithProjections", "useGeographic", "METERS_PER_UNIT", "Projection", "options", "METERS_PER_UNIT", "global", "tileGrid", "extent", "worldExtent", "func", "Projection_default", "RADIUS", "HALF_SIZE", "EXTENT", "WORLD_EXTENT", "MAX_SAFE_Y", "EPSG3857Projection", "Projection_default", "code", "resolution", "point", "PROJECTIONS", "fromEPSG4326", "input", "output", "dimension", "length", "i", "y", "toEPSG4326", "RADIUS", "EXTENT", "METERS_PER_UNIT", "EPSG4326Projection", "Projection_default", "code", "axisOrientation", "PROJECTIONS", "cache", "clear", "get", "code", "add", "projection", "transforms", "clear", "add", "source", "destination", "transformFn", "sourceCode", "destinationCode", "get", "sourceCode", "destinationCode", "transform", "transforms", "init_extent", "init_math", "init_math", "DEFAULT_RADIUS", "getDistance", "c1", "c2", "radius", "lat1", "toRadians", "lat2", "deltaLatBy2", "deltaLonBy2", "showCoordinateWarning", "disableCoordinateWarning", "disable", "cloneTransform", "input", "output", "dimension", "i", "ii", "identityTransform", "addProjection", "projection", "add", "addProjections", "projections", "get", "projectionLike", "getPointResolution", "resolution", "point", "units", "pointResolution", "getter", "metersPerUnit", "METERS_PER_UNIT", "projUnits", "toEPSG4326", "getTransformFromProjections", "vertices", "width", "getDistance", "height", "addEquivalentProjections", "source", "destination", "addEquivalentTransforms", "projections1", "projections2", "forwardTransform", "inverseTransform", "projection1", "projection2", "clearAllProjections", "clear", "createProjection", "defaultCode", "createTransformFromCoordinateTransform", "coordTransform", "length", "pointLength", "j", "jj", "addCoordinateTransforms", "forward", "inverse", "sourceProj", "destProj", "fromLonLat", "coordinate", "transform", "toLonLat", "lonLat", "lon", "modulo", "equivalent", "equalUnits", "sourceProjection", "destinationProjection", "sourceCode", "destinationCode", "transformFunc", "getTransform", "transformExtent", "extent", "stops", "applyTransform", "transformWithProjections", "userProjection", "setUserProjection", "clearUserProjection", "getUserProjection", "useGeographic", "toUserCoordinate", "fromUserCoordinate", "destProjection", "equals", "toUserExtent", "fromUserExtent", "toUserResolution", "sourceUnits", "userUnits", "fromUserResolution", "createSafeCoordinateTransform", "coord", "transformed", "worldsAway", "sourceExtent", "sourceExtentWidth", "getWidth", "getWorldsAway", "clamp", "addCommon", "PROJECTIONS", "fromEPSG4326", "init_functions", "init_asserts", "init_math", "createExtent", "extent", "onlyCenter", "smooth", "center", "resolution", "size", "isMoving", "centerShift", "viewWidth", "viewHeight", "shiftX", "shiftY", "minX", "maxX", "minY", "maxY", "x", "clamp", "y", "ratio", "none", "init_math", "init_math", "init_extent", "init_array", "getViewportClampedResolution", "resolution", "maxExtent", "viewportSize", "showFullExtent", "xResolution", "getWidth", "yResolution", "getHeight", "getSmoothClampedResolution", "maxResolution", "minResolution", "result", "ratio", "clamp", "createSnapToResolutions", "resolutions", "smooth", "direction", "size", "isMoving", "cappedMaxRes", "capped", "z", "linearFindNearest", "createSnapToPower", "power", "tolerance", "minZoomLevel", "offset", "cappedZoomLevel", "zoomLevel", "newResolution", "createMinMaxResolution", "init_math", "disable", "rotation", "none", "createSnapToN", "n", "theta", "isMoving", "createSnapToZero", "tolerance", "toRadians", "easeIn", "t", "easeOut", "inAndOut", "linear", "init_extent", "init_array", "init_Object", "init_util", "init_extent", "init_functions", "transform2D", "flatCoordinates", "offset", "end", "stride", "transform", "dest", "i", "j", "x", "y", "rotate", "angle", "anchor", "cos", "sin", "anchorX", "anchorY", "deltaX", "deltaY", "k", "scale", "sx", "sy", "translate", "tmpTransform", "create", "Geometry", "Object_default", "createEmpty", "memoizeOne", "revision", "squaredTolerance", "transform", "clone", "abstract", "x", "y", "closestPoint", "minSquaredDistance", "coord", "point", "coordinate", "extent", "createOrUpdateEmpty", "returnOrUpdate", "angle", "anchor", "sx", "sy", "tolerance", "transformFn", "deltaX", "deltaY", "source", "destination", "sourceProj", "get", "inCoordinates", "outCoordinates", "stride", "pixelExtent", "projectedExtent", "scale", "getHeight", "compose", "transform2D", "getTransform", "Geometry_default", "init_util", "init_extent", "SimpleGeometry", "Geometry_default", "extent", "createOrUpdateFromFlatCoordinates", "abstract", "squaredTolerance", "simplifiedGeometry", "layout", "flatCoordinates", "getStrideForLayout", "coordinates", "nesting", "stride", "i", "getLayoutForStride", "transformFn", "angle", "anchor", "rotate", "sx", "sy", "getCenter", "scale", "deltaX", "deltaY", "translate", "transformGeom2D", "simpleGeometry", "transform", "dest", "transform2D", "SimpleGeometry_default", "init_math", "assignClosest", "flatCoordinates", "offset1", "offset2", "stride", "x", "y", "closestPoint", "x1", "y1", "dx", "dy", "offset", "t", "i", "lerp", "maxSquaredDelta", "end", "max", "x2", "y2", "squaredDelta", "squaredDistance", "arrayMaxSquaredDelta", "ends", "ii", "multiArrayMaxSquaredDelta", "endss", "assignClosestPoint", "maxDelta", "isRing", "minSquaredDistance", "tmpPoint", "index", "assignClosestArrayPoint", "assignClosestMultiArrayPoint", "init_extent", "deflateCoordinate", "flatCoordinates", "offset", "coordinate", "stride", "i", "ii", "deflateCoordinates", "coordinates", "j", "deflateCoordinatesArray", "coordinatess", "ends", "jj", "end", "deflateMultiCoordinatesArray", "coordinatesss", "endss", "init_math", "douglasPeucker", "flatCoordinates", "offset", "end", "stride", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedOffset", "n", "markers", "stack", "index", "last", "first", "maxSquaredDistance", "x1", "y1", "x2", "y2", "i", "x", "y", "squaredDistance", "squaredSegmentDistance", "douglasPeuckerArray", "ends", "simplifiedEnds", "ii", "snap", "value", "tolerance", "quantize", "flatCoordinates", "offset", "end", "stride", "simplifiedFlatCoordinates", "simplifiedOffset", "x1", "y1", "x2", "y2", "x3", "y3", "dx1", "dy1", "dx2", "dy2", "quantizeArray", "ends", "simplifiedEnds", "i", "ii", "quantizeMultiArray", "endss", "simplifiedEndss", "inflateCoordinates", "flatCoordinates", "offset", "end", "stride", "coordinates", "i", "j", "inflateCoordinatesArray", "ends", "coordinatess", "jj", "inflateMultiCoordinatesArray", "endss", "coordinatesss", "linearRing", "flatCoordinates", "offset", "end", "stride", "twiceArea", "x1", "y1", "x2", "y2", "linearRings", "ends", "area", "i", "ii", "linearRingss", "endss", "LinearRing", "SimpleGeometry_default", "coordinates", "layout", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "maxSquaredDelta", "assignClosestPoint", "linearRing", "inflateCoordinates", "squaredTolerance", "simplifiedFlatCoordinates", "douglasPeucker", "extent", "deflateCoordinates", "LinearRing_default", "init_extent", "init_math", "Point", "SimpleGeometry_default", "coordinates", "layout", "point", "x", "y", "closestPoint", "minSquaredDistance", "flatCoordinates", "squaredDistance", "stride", "i", "extent", "createOrUpdateFromCoordinate", "containsXY", "deflateCoordinate", "Point_default", "init_extent", "init_array", "init_extent", "linearRingContainsExtent", "flatCoordinates", "offset", "end", "stride", "extent", "forEachCorner", "coordinate", "linearRingContainsXY", "x", "y", "wn", "x1", "y1", "x2", "y2", "linearRingsContainsXY", "ends", "i", "ii", "linearRingssContainsXY", "endss", "init_array", "getInteriorPointOfArray", "flatCoordinates", "offset", "ends", "stride", "flatCenters", "flatCentersOffset", "dest", "i", "ii", "x", "x1", "x2", "y1", "y2", "y", "intersections", "r", "rr", "end", "pointX", "maxSegmentLength", "numberSafeCompareFunction", "segmentLength", "linearRingsContainsXY", "getInteriorPointsOfMultiArray", "endss", "interiorPoints", "init_extent", "forEach", "flatCoordinates", "offset", "end", "stride", "callback", "ret", "intersectsLineString", "flatCoordinates", "offset", "end", "stride", "extent", "coordinatesExtent", "extendFlatCoordinates", "createEmpty", "intersects", "containsExtent", "forEach", "point1", "point2", "intersectsSegment", "intersectsLineStringArray", "ends", "i", "ii", "intersectsLinearRing", "linearRingContainsXY", "intersectsLinearRingArray", "linearRingContainsExtent", "intersectsLinearRingMultiArray", "endss", "coordinates", "flatCoordinates", "offset", "end", "stride", "i", "tmp", "linearRingIsClockwise", "flatCoordinates", "offset", "end", "stride", "edge", "x1", "y1", "x2", "y2", "linearRingsAreOriented", "ends", "right", "i", "ii", "isClockwise", "linearRingssAreOriented", "endss", "orientLinearRings", "coordinates", "orientLinearRingsArray", "Polygon", "SimpleGeometry_default", "coordinates", "layout", "ends", "linearRing", "extend", "polygon", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "arrayMaxSquaredDelta", "assignClosestArrayPoint", "linearRingsContainsXY", "linearRings", "right", "flatCoordinates", "orientLinearRings", "inflateCoordinatesArray", "flatCenter", "getCenter", "getInteriorPointOfArray", "Point_default", "index", "LinearRing_default", "offset", "i", "ii", "end", "linearRingsAreOriented", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedEnds", "quantizeArray", "extent", "intersectsLinearRingArray", "deflateCoordinatesArray", "Polygon_default", "fromExtent", "extent", "minX", "minY", "maxX", "maxY", "flatCoordinates", "Polygon", "DEFAULT_MIN_ZOOM", "View", "Object_default", "options", "createProjection", "disableCoordinateWarning", "fromUserCoordinate", "fromUserExtent", "properties", "key", "ViewProperty_default", "resolutionConstraintInfo", "createResolutionConstraint", "centerConstraint", "createCenterConstraint", "resolutionConstraint", "rotationConstraint", "createRotationConstraint", "padding", "oldPadding", "center", "newPadding", "resolution", "offsetX", "offsetY", "newOptions", "var_args", "args", "i", "animationCount", "callback", "state", "animationCallback", "start", "rotation", "series", "animation", "inAndOut", "delta", "modulo", "isNoopAnimation", "ViewHint_default", "anchor", "ii", "j", "jj", "now", "more", "seriesComplete", "elapsed", "fraction", "progress", "x0", "y0", "x1", "y1", "x", "y", "size", "constrainedResolution", "constrainedRotation", "currentCenter", "rotate", "add", "currentResolution", "w", "h", "toUserCoordinate", "hints", "extent", "toUserExtent", "assert", "getForViewAndSize", "zoom", "enabled", "xResolution", "getWidth", "yResolution", "getHeight", "power", "maxResolution", "minResolution", "max", "value", "logPower", "projection", "reducedSize", "calculateCenterOn", "offset", "zoomFactor", "nearest", "linearFindNearest", "baseLevel", "clamp", "geometryOrExtent", "geometry", "isEmpty", "fromExtent", "getCenter", "userProjection", "getUserProjection", "cosAngle", "sinAngle", "coords", "stride", "minRotX", "minRotY", "maxRotX", "maxRotY", "rotX", "rotY", "rotatedExtent", "centerRot", "centerX", "centerY", "VOID", "coordinate", "position", "centerShift", "shiftedCenter", "deltaCoordinates", "ratio", "isMoving", "newResolution", "newRotation", "hint", "doNotCancelAnims", "forceMoving", "newCenter", "equals", "duration", "resolutionDirection", "direction", "easeOut", "targetCenter", "targetResolution", "targetZoom", "targetRes", "returnValue", "smooth", "createExtent", "none", "minZoom", "maxZoom", "multiWorld", "showFullExtent", "projExtent", "constrainOnlyCenter", "resolutions", "createSnapToResolutions", "createMinMaxResolution", "defaultMaxResolution", "METERS_PER_UNIT", "defaultMinResolution", "createSnapToPower", "constrainRotation", "createSnapToZero", "createSnapToN", "disable", "View_default", "init_has", "init_functions", "init_asserts", "init_extent", "init_Control", "init_EventType", "init_array", "init_dom", "Attribution", "Control_default", "options", "className", "tipLabel", "expandClassName", "collapseLabel", "collapseClassName", "label", "activeLabel", "EventType_default", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "CLASS_COLLAPSED", "element", "frameState", "lookup", "visibleAttributions", "collapsible", "layerStatesArray", "i", "ii", "layerState", "inView", "source", "attributionGetter", "attributions", "j", "jj", "visible", "equals", "removeChildren", "event", "replaceNode", "collapsed", "mapEvent", "Attribution_default", "init_Collection", "init_Control", "init_EventType", "Rotate", "Control_default", "options", "className", "label", "compassClassName", "tipLabel", "button", "EventType_default", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "element", "CLASS_HIDDEN", "event", "view", "rotation", "easeOut", "mapEvent", "frameState", "transform", "contains", "Rotate_default", "init_Control", "init_EventType", "Zoom", "Control_default", "options", "className", "delta", "zoomInClassName", "zoomOutClassName", "zoomInLabel", "zoomOutLabel", "zoomInTipLabel", "zoomOutTipLabel", "inElement", "EventType_default", "outElement", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "element", "event", "view", "currentZoom", "newZoom", "easeOut", "Zoom_default", "defaults", "options", "controls", "Collection_default", "Zoom_default", "Rotate_default", "Attribution_default", "init_Collection", "init_Object", "Property_default", "Interaction", "Object_default", "options", "Property_default", "mapBrowserEvent", "active", "map", "pan", "view", "delta", "duration", "currentCenter", "center", "linear", "zoomByDelta", "anchor", "currentZoom", "newZoom", "newResolution", "easeOut", "Interaction_default", "DoubleClickZoom", "Interaction_default", "options", "mapBrowserEvent", "stopEvent", "MapBrowserEventType_default", "browserEvent", "map", "anchor", "delta", "view", "zoomByDelta", "DoubleClickZoom_default", "PointerInteraction", "Interaction_default", "options", "mapBrowserEvent", "stopEvent", "MapBrowserEventType_default", "handledUp", "handled", "centroid", "pointerEvents", "length", "clientX", "clientY", "i", "Pointer_default", "init_functions", "init_functions", "init_has", "init_asserts", "all", "var_args", "conditions", "event", "pass", "i", "ii", "altShiftKeysOnly", "mapBrowserEvent", "originalEvent", "focus", "event", "targetElement", "activeElement", "focusWithTabindex", "always", "TRUE", "mouseActionButton", "mapBrowserEvent", "originalEvent", "WEBKIT", "MAC", "noModifierKeys", "mapBrowserEvent", "originalEvent", "shiftKeyOnly", "mapBrowserEvent", "originalEvent", "targetNotEditable", "tagName", "mouseOnly", "pointerEvent", "assert", "primaryAction", "mapBrowserEvent", "pointerEvent", "assert", "DragPan", "Pointer_default", "options", "FALSE", "condition", "all", "noModifierKeys", "primaryAction", "focusWithTabindex", "mapBrowserEvent", "targetPointers", "centroid", "delta", "view", "scale", "rotate", "map", "distance", "angle", "center", "centerpx", "dest", "easeOut", "DragPan_default", "init_functions", "DragRotate", "Pointer_default", "options", "FALSE", "altShiftKeysOnly", "mapBrowserEvent", "mouseOnly", "map", "view", "disable", "size", "offset", "theta", "delta", "mouseActionButton", "DragRotate_default", "init_Event", "init_Disposable", "RenderBox", "Disposable_default", "className", "startPixel", "endPixel", "px", "style", "map", "coordinates", "Polygon_default", "Box_default", "DragBoxEventType", "DragBoxEvent", "Event_default", "type", "coordinate", "mapBrowserEvent", "DragBox", "Pointer_default", "options", "Box_default", "mouseActionButton", "startPixel", "endPixel", "width", "height", "completeBox", "event", "DragBox_default", "DragZoom", "DragBox_default", "options", "condition", "shiftKeyOnly", "event", "view", "geometry", "rotatedExtent", "resolution", "factor", "easeOut", "DragZoom_default", "init_EventType", "KeyCode_default", "KeyboardPan", "Interaction_default", "options", "mapBrowserEvent", "noModifierKeys", "targetNotEditable", "stopEvent", "EventType_default", "keyEvent", "keyCode", "KeyCode_default", "view", "mapUnitsDelta", "deltaX", "deltaY", "delta", "rotate", "pan", "KeyboardPan_default", "init_EventType", "KeyboardZoom", "Interaction_default", "options", "targetNotEditable", "mapBrowserEvent", "stopEvent", "EventType_default", "keyEvent", "charCode", "map", "delta", "view", "zoomByDelta", "KeyboardZoom_default", "Kinetic", "decay", "minVelocity", "delay", "x", "y", "lastIndex", "firstIndex", "duration", "dx", "dy", "Kinetic_default", "init_EventType", "init_has", "init_math", "MouseWheelZoom", "Interaction_default", "options", "condition", "always", "all", "focusWithTabindex", "map", "mapBrowserEvent", "EventType_default", "wheelEvent", "delta", "FIREFOX", "DEVICE_PIXEL_RATIO", "now", "view", "timeLeft", "clamp", "zoomByDelta", "useAnchor", "MouseWheelZoom_default", "init_functions", "PinchRotate", "Pointer_default", "options", "pointerOptions", "FALSE", "mapBrowserEvent", "rotationDelta", "touch0", "touch1", "angle", "delta", "map", "view", "disable", "viewportPosition", "centroid", "PinchRotate_default", "init_functions", "PinchZoom", "Pointer_default", "options", "pointerOptions", "FALSE", "mapBrowserEvent", "scaleDelta", "touch0", "touch1", "dx", "dy", "distance", "map", "view", "viewportPosition", "centroid", "direction", "PinchZoom_default", "defaults", "options", "interactions", "Collection_default", "kinetic", "Kinetic_default", "DragRotate_default", "DoubleClickZoom_default", "DragPan_default", "PinchRotate_default", "PinchZoom_default", "KeyboardPan_default", "KeyboardZoom_default", "MouseWheelZoom_default", "DragZoom_default", "init_util", "buffer", "size", "num", "dest", "hasArea", "scale", "ratio", "toSize", "init_events", "init_dom", "removeLayerMapProperty", "layer", "Layer_default", "Group_default", "setLayerMapProperty", "map", "layers", "i", "ii", "Map", "Object_default", "options", "optionsInternal", "createOptionsInternal", "DEVICE_PIXEL_RATIO", "create", "defaults", "TileQueue_default", "MapProperty_default", "View_default", "viewOptions", "CollectionEventType_default", "event", "id", "control", "interaction", "overlay", "pixel", "callback", "coordinate", "hitTolerance", "layerFilter", "TRUE", "checkWrapped", "features", "feature", "addLayersFrom", "layerGroup", "viewportPosition", "eventPosition", "target", "toUserCoordinate", "frameState", "apply", "group", "Collection_default", "collection", "layerStatesArray", "state", "renderer", "source", "viewCoordinate", "fromUserCoordinate", "targetElement", "tile", "tileSourceKey", "tileCenter", "tileResolution", "getTilePriority", "browserEvent", "type", "mapBrowserEvent", "MapBrowserEvent_default", "originalEvent", "eventType", "EventType_default", "doc", "rootNode", "interactionsArray", "tileQueue", "maxTotalLoading", "maxNewLoads", "hints", "ViewHint_default", "lowOnFrameBudget", "MapEvent_default", "MapEventType_default", "postRenderFunctions", "unlistenByKey", "removeNode", "Composite_default", "MapBrowserEventHandler_default", "key", "MapBrowserEventType_default", "PASSIVE_EVENT_LISTENERS", "defaultView", "keyboardEventTarget", "listen", "view", "ObjectEventType_default", "GroupEvent", "layerStates", "time", "size", "previousFrameState", "hasArea", "viewHints", "viewState", "getForViewAndSize", "getUid", "rotation", "isEmpty", "equals", "createOrUpdateEmpty", "clone", "oldLayerGroup", "computedStyle", "width", "height", "values", "controls", "assert", "interactions", "overlays", "Map_default", "TileProperty_default", "BaseTileLayer", "Layer_default", "options", "baseOptions", "TileProperty_default", "preload", "useInterimTilesOnError", "pixel", "BaseTile_default", "init_EventType", "ImageState_default", "init_Observable", "init_util", "LayerRenderer", "Observable_default", "layer", "pixel", "abstract", "frameState", "target", "tiles", "zoom", "tile", "source", "projection", "tileRange", "callback", "coordinate", "hitTolerance", "matches", "event", "ImageState_default", "image", "imageState", "EventType_default", "Layer_default", "init_dom", "init_array", "init_extent", "canvasPool", "pixelContext", "createPixelContext", "canvas", "CanvasLayerRenderer", "Layer_default", "layer", "create", "image", "col", "row", "data", "frameState", "background", "target", "transform", "backgroundColor", "layerClassName", "container", "context", "equals", "asArray", "style", "createCanvasContext2D", "extent", "topLeft", "getTopLeft", "topRight", "getTopRight", "bottomRight", "getBottomRight", "bottomLeft", "getBottomLeft", "apply", "inverted", "type", "event", "Event_default", "EventType_default", "center", "resolution", "rotation", "pixelRatio", "width", "height", "offsetX", "dx1", "dy1", "sx", "sy", "dx2", "dy2", "compose", "init_Target", "init_EventType", "init_util", "Tile", "Target_default", "tileCoord", "state", "options", "EventType_default", "TileState_default", "tile", "prev", "abstract", "id", "time", "start", "delta", "easeIn", "Tile_default", "init_dom", "init_EventType", "init_has", "init_events", "listenImage", "image", "loadHandler", "errorHandler", "img", "listening", "decoding", "loaded", "listenerKeys", "listenOnce", "EventType_default", "IMAGE_DECODE", "error", "unlistenByKey", "ImageTile", "Tile_default", "tileCoord", "state", "src", "crossOrigin", "tileLoadFunction", "options", "element", "TileState_default", "getBlankImage", "image", "listenImage", "ctx", "createCanvasContext2D", "ImageTile_default", "init_EventType", "init_extent", "init_math", "MAX_SUBDIVISION", "MAX_TRIANGLE_WIDTH", "Triangulation", "sourceProj", "targetProj", "targetExtent", "maxSourceExtent", "errorThreshold", "destinationResolution", "transformInvCache", "transformInv", "getTransform", "c", "key", "getWidth", "destinationTopLeft", "getTopLeft", "destinationTopRight", "getTopRight", "destinationBottomRight", "getBottomRight", "destinationBottomLeft", "getBottomLeft", "sourceTopLeft", "sourceTopRight", "sourceBottomRight", "sourceBottomLeft", "maxSubdivision", "getArea", "leftBound", "triangle", "i", "arr", "newTriangle", "minX", "a", "b", "aSrc", "bSrc", "cSrc", "d", "dSrc", "sourceQuadExtent", "boundingExtent", "sourceCoverageX", "sourceWorldWidth", "wrapsX", "needsSubdivision", "targetQuadExtent", "intersects", "isNotFinite", "center", "centerSrc", "dx", "modulo", "dy", "bc", "bcSrc", "da", "daSrc", "ab", "abSrc", "cd", "cdSrc", "extent", "createEmpty", "src", "extendCoordinate", "Triangulation_default", "init_extent", "init_dom", "init_math", "brokenDiagonalRendering_", "canvasPool", "drawTestTriangle", "ctx", "u1", "v1", "u2", "v2", "verifyBrokenDiagonalRendering", "data", "offset", "isBrokenDiagonalRendering", "calculateSourceResolution", "sourceProj", "targetProj", "targetCenter", "targetResolution", "sourceCenter", "transform", "sourceResolution", "getPointResolution", "targetMetersPerUnit", "sourceMetersPerUnit", "sourceExtent", "containsCoordinate", "compensationFactor", "calculateSourceExtentResolution", "targetExtent", "getCenter", "forEachCorner", "corner", "render", "width", "height", "pixelRatio", "triangulation", "sources", "gutter", "renderEdges", "interpolate", "context", "createCanvasContext2D", "pixelRound", "value", "sourceDataExtent", "createEmpty", "src", "i", "arr", "extend", "canvasWidthInUnits", "getWidth", "canvasHeightInUnits", "getHeight", "stitchContext", "stitchScale", "xPos", "yPos", "srcWidth", "srcHeight", "targetTopLeft", "getTopLeft", "triangle", "source", "target", "x0", "y0", "x1", "y1", "x2", "y2", "u0", "v0", "sourceNumericalShiftX", "sourceNumericalShiftY", "augmentedMatrix", "affineCoefs", "solveLinearSystem", "steps", "ud", "vd", "step", "init_math", "init_extent", "init_events", "init_dom", "ReprojTile", "Tile_default", "sourceProj", "sourceTileGrid", "targetProj", "targetTileGrid", "tileCoord", "wrappedTileCoord", "pixelRatio", "gutter", "getTileFunction", "errorThreshold", "renderEdges", "interpolate", "TileState_default", "targetExtent", "maxTargetExtent", "maxSourceExtent", "limitedTargetExtent", "getIntersection", "getArea", "sourceProjExtent", "targetResolution", "sourceResolution", "calculateSourceExtentResolution", "errorThresholdInPixels", "Triangulation_default", "sourceExtent", "clamp", "sourceRange", "srcX", "srcY", "tile", "sources", "i", "arr", "z", "size", "width", "height", "render", "leftToLoad", "state", "sourceListenKey", "listen", "EventType_default", "e", "unlistenByKey", "releaseCanvas", "canvasPool", "TileRange", "minX", "maxX", "minY", "maxY", "tileCoord", "tileRange", "x", "y", "createOrUpdate", "TileRange_default", "init_extent", "init_util", "init_array", "CanvasTileLayerRenderer", "Layer_default", "tileLayer", "createEmpty", "TileRange_default", "tile", "tileState", "useInterimTilesOnError", "TileState_default", "z", "x", "y", "frameState", "pixelRatio", "projection", "pixel", "layer", "coordinate", "apply", "layerExtent", "containsCoordinate", "viewState", "source", "tileGrid", "tilePixelRatio", "tileCoord", "ImageTile_default", "Tile_default", "tileOrigin", "tileSize", "toSize", "tileResolution", "col", "row", "gutter", "tiles", "zoom", "target", "layerState", "viewResolution", "viewCenter", "rotation", "tileSource", "sourceRevision", "extent", "resolution", "width", "getWidth", "height", "getHeight", "fromUserExtent", "getIntersection", "dx", "dy", "canvasExtent", "tileRange", "tilesToDrawByZ", "findLoadedTiles", "tmpExtent", "tmpTileRange", "viewport", "getRotatedViewport", "uid", "getUid", "inTransition", "childTileRange", "covered", "canvasScale", "compose", "canvasTransform", "toString", "context", "canvas", "makeInverse", "zs", "numberSafeCompareFunction", "clips", "clipZs", "currentClip", "i", "currentZ", "currentTilePixelSize", "currentScale", "originTileCoord", "getTopLeft", "originTileExtent", "origin", "tileGutter", "tilesToDraw", "tileCoordKey", "xIndex", "nextX", "yIndex", "nextY", "w", "h", "transition", "contextSaved", "ii", "clip", "intersects", "equals", "image", "alpha", "alphaChanged", "postRenderFunction", "map", "tileSourceKey", "usedTiles", "preload", "tileCallback", "wantedTiles", "tileQueue", "minZoom", "tileCount", "TileLayer_default", "TileLayer", "BaseTile_default", "options", "TileLayer_default", "Tile_default", "init_Group", "import_rbush", "init_util", "ImageStyle", "options", "toSize", "scale", "abstract", "pixelRatio", "displacement", "opacity", "rotateWithView", "rotation", "listener", "Image_default", "asColorLike", "color", "toString", "init_dom", "RegularShape", "Image_default", "options", "rotateWithView", "scale", "style", "size", "displacement", "fill", "pixelRatio", "image", "renderOptions", "context", "createCanvasContext2D", "ImageState_default", "stroke", "listener", "lineJoin", "strokeWidth", "miterLimit", "r1", "r2", "tmp", "points", "alpha", "a", "b", "d", "e", "miterRatio", "k", "l", "bevelAdd", "aa", "bb", "dd", "innerMiterRatio", "innerLength", "defaultLineJoin", "lineDash", "lineDashOffset", "strokeStyle", "defaultStrokeStyle", "asColorLike", "defaultLineWidth", "defaultMiterLimit", "add", "maxRadius", "color", "defaultFillStyle", "opacity", "asArray", "radius", "radius2", "startAngle", "step", "i", "angle0", "radiusC", "RegularShape_default", "CircleStyle", "RegularShape_default", "options", "scale", "style", "radius", "Circle_default", "Fill", "options", "color", "Fill_default", "Stroke", "options", "color", "lineCap", "lineDash", "lineDashOffset", "lineJoin", "miterLimit", "width", "Stroke_default", "init_asserts", "Style", "options", "defaultGeometryFunction", "geometry", "renderer", "fill", "image", "stroke", "text", "feature", "zIndex", "toFunction", "obj", "styleFunction", "styles", "assert", "defaultStyles", "createDefaultStyle", "resolution", "Fill_default", "Stroke_default", "Circle_default", "defaultGeometryFunction", "feature", "Style_default", "Style", "init_EventType", "init_asserts", "init_Target", "init_EventType", "init_dom", "taintedTestContext", "IconImage", "Target_default", "image", "src", "size", "crossOrigin", "imageState", "color", "ImageState_default", "createCanvasContext2D", "EventType_default", "pixelRatio", "width", "height", "context", "listenImage", "canvas", "ctx", "asString", "get", "iconImage", "shared", "init_util", "Icon", "Image_default", "options", "opacity", "rotation", "scale", "rotateWithView", "image", "src", "assert", "getUid", "imageState", "ImageState_default", "asArray", "get", "anchor", "size", "displacement", "pixelRatio", "offset", "iconImageSize", "listener", "EventType_default", "Icon_default", "DEFAULT_FILL_COLOR", "Text", "options", "toSize", "Fill_default", "scale", "overflow", "font", "maxAngle", "offsetX", "offsetY", "placement", "rotateWithView", "fill", "rotation", "stroke", "text", "textAlign", "justify", "textBaseline", "padding", "Text_default", "toStyle", "flatStyle", "Style_default", "getFill", "getStroke", "getText", "getImage", "prefix", "color", "Fill_default", "width", "Stroke_default", "value", "Text_default", "iconSrc", "iconImg", "Icon_default", "shapePoints", "RegularShape_default", "circleRadius", "Circle_default", "Property", "BaseVectorLayer", "Layer_default", "options", "baseOptions", "pixel", "frameState", "RBush", "renderOrder", "style", "styleLike", "createDefaultStyle", "Style_default", "len", "styles", "i", "s", "toStyle", "toFunction", "BaseVector_default", "Instruction", "fillInstruction", "strokeInstruction", "beginPathInstruction", "closePathInstruction", "Instruction_default", "init_Relationship", "VectorContext", "geometry", "feature", "renderer", "hitDetectionRenderer", "style", "circleGeometry", "geometryCollectionGeometry", "lineStringGeometry", "multiLineStringGeometry", "multiPointGeometry", "multiPolygonGeometry", "pointGeometry", "polygonGeometry", "fillStyle", "strokeStyle", "imageStyle", "declutterImageWithText", "textStyle", "VectorContext_default", "init_extent", "init_array", "CanvasBuilder", "VectorContext_default", "tolerance", "maxExtent", "resolution", "pixelRatio", "dashArray", "dash", "flatCoordinates", "stride", "extent", "tmpCoord", "coordinates", "myEnd", "i", "ii", "containsCoordinate", "offset", "end", "closed", "skipFirst", "lastXCoord", "lastYCoord", "nextCoord", "skipped", "lastRel", "nextRel", "coordinateRelationship", "Relationship_default", "ends", "builderEnds", "builderEnd", "geometry", "feature", "renderer", "hitDetectionRenderer", "type", "builderBegin", "builderEndss", "endss", "myEnds", "Instruction_default", "inflateMultiCoordinatesArray", "inflateCoordinatesArray", "inflateCoordinates", "hitDetectionInstructions", "instruction", "begin", "reverseSubArray", "fillStyle", "strokeStyle", "state", "fillStyleColor", "asColorLike", "defaultFillStyle", "strokeStyleColor", "defaultStrokeStyle", "strokeStyleLineCap", "defaultLineCap", "strokeStyleLineDash", "defaultLineDash", "strokeStyleLineDashOffset", "defaultLineDashOffset", "strokeStyleLineJoin", "defaultLineJoin", "strokeStyleWidth", "defaultLineWidth", "strokeStyleMiterLimit", "defaultMiterLimit", "fillInstruction", "createFill", "applyStroke", "lineCap", "lineDash", "lineDashOffset", "lineJoin", "lineWidth", "miterLimit", "equals", "endGeometryInstruction", "clone", "width", "buffer", "Builder_default", "CanvasImageBuilder", "Builder_default", "tolerance", "maxExtent", "resolution", "pixelRatio", "pointGeometry", "feature", "flatCoordinates", "stride", "myBegin", "myEnd", "Instruction_default", "multiPointGeometry", "imageStyle", "sharedData", "anchor", "size", "origin", "ImageBuilder_default", "CanvasLineStringBuilder", "Builder_default", "tolerance", "maxExtent", "resolution", "pixelRatio", "flatCoordinates", "offset", "end", "stride", "myBegin", "myEnd", "moveToLineToInstruction", "Instruction_default", "lineStringGeometry", "feature", "state", "strokeStyle", "lineWidth", "defaultLineDash", "defaultLineDashOffset", "beginPathInstruction", "strokeInstruction", "multiLineStringGeometry", "ends", "i", "ii", "LineStringBuilder_default", "CanvasPolygonBuilder", "Builder_default", "tolerance", "maxExtent", "resolution", "pixelRatio", "flatCoordinates", "offset", "ends", "stride", "state", "fill", "stroke", "numEnds", "beginPathInstruction", "i", "end", "myBegin", "myEnd", "moveToLineToInstruction", "Instruction_default", "closePathInstruction", "fillInstruction", "strokeInstruction", "circleGeometry", "feature", "fillStyle", "strokeStyle", "defaultFillStyle", "circleInstruction", "polygonGeometry", "multiPolygonGeometry", "endss", "ii", "coordinates", "snap", "PolygonBuilder_default", "init_util", "init_extent", "matchingChunk", "maxAngle", "flatCoordinates", "offset", "end", "stride", "chunkStart", "chunkEnd", "chunkM", "m", "start", "acos", "i", "m12", "m23", "x1", "y1", "x12", "y12", "x23", "y23", "x2", "y2", "TEXT_ALIGN", "CanvasTextBuilder", "Builder_default", "tolerance", "maxExtent", "resolution", "pixelRatio", "instructions", "geometry", "feature", "fillState", "strokeState", "textState", "coordinates", "begin", "geometryType", "flatCoordinates", "stride", "intersects", "ends", "endss", "i", "ii", "textAlign", "flatOffset", "flatEnd", "o", "oo", "range", "matchingChunk", "end", "geometryWidths", "interiorPoints", "beg", "w", "keep", "padding", "defaultPadding", "p0", "p1", "p2", "p3", "Instruction_default", "p", "scale", "strokeKey", "textKey", "defaultTextAlign", "defaultTextBaseline", "fillKey", "baseline", "offsetY", "text", "strokeWidth", "textStyle", "sharedData", "textFillStyle", "asColorLike", "defaultFillStyle", "textStrokeStyle", "lineDash", "lineDashOffset", "lineWidth", "miterLimit", "defaultLineCap", "defaultLineDash", "defaultLineDashOffset", "defaultLineJoin", "defaultLineWidth", "defaultMiterLimit", "defaultStrokeStyle", "font", "defaultFont", "registerFont", "textScale", "textOffsetX", "textOffsetY", "textRotateWithView", "textRotation", "getUid", "TextBuilder_default", "BATCH_CONSTRUCTORS", "PolygonBuilder_default", "Builder_default", "ImageBuilder_default", "LineStringBuilder_default", "TextBuilder_default", "BuilderGroup", "tolerance", "maxExtent", "resolution", "pixelRatio", "builderInstructions", "zKey", "builders", "builderKey", "builderInstruction", "zIndex", "builderType", "zIndexKey", "replays", "replay", "Constructor", "BuilderGroup_default", "init_extent", "init_math", "drawTextOnPath", "flatCoordinates", "offset", "end", "stride", "text", "startM", "maxAngle", "scale", "measureAndCacheTextWidth", "font", "cache", "rotation", "x2", "y2", "x1", "y1", "segmentLength", "segmentM", "advance", "interpolate", "beginX", "lerp", "beginY", "startOffset", "startLength", "endM", "endX", "endY", "reverse", "flat", "rotate", "PI", "result", "singleSegment", "previousAngle", "x", "y", "i", "ii", "angle", "delta", "iStart", "charLength", "index", "len", "chars", "init_array", "lineStringLength", "flatCoordinates", "offset", "end", "stride", "x1", "y1", "length", "i", "x2", "y2", "tmpExtent", "createEmpty", "p1", "p2", "p3", "p4", "getDeclutterBox", "replayImageOrLabelArgs", "rtlRegEx", "horizontalTextAlign", "text", "align", "TEXT_ALIGN", "createTextChunks", "acc", "line", "i", "Executor", "resolution", "pixelRatio", "overlaps", "instructions", "create", "textKey", "fillKey", "strokeKey", "key", "strokeState", "fillState", "textState", "scale", "textIsArray", "defaultTextAlign", "strokeWidth", "chunks", "width", "height", "widths", "heights", "lineWidths", "getTextDimensions", "renderWidth", "contextInstructions", "w", "h", "label", "leftRight", "x", "strokeInstructions", "fillInstructions", "lineHeight", "lineOffset", "widthHeightIndex", "lineWidthIndex", "previousFont", "ii", "font", "fillStrokeArgs", "context", "fillInstruction", "strokeInstruction", "sheetWidth", "sheetHeight", "centerX", "centerY", "anchorX", "anchorY", "originX", "originY", "rotation", "snapToPixel", "padding", "fillStroke", "feature", "y", "boxW", "boxH", "boxX", "boxY", "transform", "compose", "apply", "createOrUpdate", "contextScale", "imageOrLabel", "dimensions", "opacity", "box", "canvas", "strokePadding", "drawImageOrLabel", "origin", "repeatSize", "instruction", "baseline", "defaultTextBaseline", "featureCallback", "hitExtent", "declutterTree", "pixelCoordinates", "equals", "transform2D", "setFromArray", "d", "dd", "prevX", "prevY", "roundX", "roundY", "image", "pendingFill", "pendingStroke", "lastFillInstruction", "lastStrokeInstruction", "coordinateCache", "viewRotation", "viewRotationFromTransform", "state", "batchSize", "currentGeometry", "Instruction_default", "intersects", "x1", "y1", "x2", "y2", "dx", "dy", "r", "geometry", "renderer", "fn", "coords", "rotateWithView", "declutterMode", "declutterImageWithText", "labelWithAnchor", "textOffsetX", "textOffsetY", "geometryWidths", "backgroundFill", "backgroundStroke", "defaultPadding", "widthIndex", "args", "imageArgs", "imageDeclutterBox", "index", "begin", "end", "overflow", "maxAngle", "measurePixelRatio", "offsetY", "pixelRatioScale", "textScale", "cachedWidths", "pathLength", "lineStringLength", "textLength", "measureAndCacheTextWidth", "textAlign", "startM", "parts", "drawTextOnPath", "drawChars", "c", "cc", "chars", "part", "result", "Executor_default", "init_extent", "init_dom", "init_obj", "init_array", "ORDER", "ExecutorGroup", "maxExtent", "resolution", "pixelRatio", "overlaps", "allInstructions", "renderBuffer", "create", "context", "transform", "flatClipCoords", "zIndex", "executors", "instructionByZindex", "builderType", "instructions", "Executor_default", "candidates", "i", "ii", "coordinate", "rotation", "hitTolerance", "callback", "declutteredFeatures", "contextSize", "compose", "newContext", "createCanvasContext2D", "hitExtent", "createEmpty", "extendCoordinate", "buffer", "indexes", "getPixelIndexArray", "featureCallback", "feature", "geometry", "imageData", "idx", "x", "y", "result", "zs", "numberSafeCompareFunction", "j", "executor", "zIndexKey", "minX", "minY", "maxX", "maxY", "transform2D", "isEmpty", "contextScale", "viewRotation", "snapToPixel", "builderTypes", "declutterTree", "jj", "replays", "replay", "circlePixelIndexArrayCache", "radius", "size", "maxDistanceSq", "distances", "distanceSq", "distance", "pixelIndex", "ExecutorGroup_default", "init_array", "init_extent", "CanvasImmediateRenderer", "VectorContext_default", "context", "pixelRatio", "extent", "transform", "viewRotation", "squaredTolerance", "userTransform", "create", "flatCoordinates", "offset", "end", "stride", "pixelCoordinates", "transform2D", "localTransform", "alpha", "rotation", "i", "ii", "x", "y", "centerX", "centerY", "compose", "close", "length", "ends", "geometry", "intersects", "transformGeom2D", "dx", "dy", "radius", "style", "feature", "geometries", "flatMidpoint", "geometryExtent", "flatMidpoints", "flatInteriorPoint", "endss", "flatInteriorPoints", "fillState", "contextFillState", "strokeState", "contextStrokeState", "equals", "textState", "contextTextState", "textAlign", "defaultTextAlign", "fillStyle", "strokeStyle", "fillStyleColor", "asColorLike", "defaultFillStyle", "strokeStyleColor", "strokeStyleLineCap", "strokeStyleLineDash", "strokeStyleLineDashOffset", "strokeStyleLineJoin", "strokeStyleWidth", "strokeStyleMiterLimit", "lineDash", "defaultLineDash", "defaultLineCap", "n", "defaultLineDashOffset", "defaultLineJoin", "defaultLineWidth", "defaultMiterLimit", "defaultStrokeStyle", "imageStyle", "imageSize", "imagePixelRatio", "imageAnchor", "imageOrigin", "imageScale", "textStyle", "textFillStyle", "textFillStyleColor", "textStrokeStyle", "textStrokeStyleColor", "textStrokeStyleLineCap", "textStrokeStyleLineDash", "textStrokeStyleLineDashOffset", "textStrokeStyleLineJoin", "textStrokeStyleWidth", "textStrokeStyleMiterLimit", "textFont", "textOffsetX", "textOffsetY", "textRotateWithView", "textRotation", "textScale", "textText", "textTextAlign", "textTextBaseline", "defaultFont", "defaultTextBaseline", "acc", "t", "Immediate_default", "init_math", "init_dom", "init_extent", "init_array", "HIT_DETECT_RESOLUTION", "createHitDetectionImageData", "size", "transforms", "features", "styleFunction", "extent", "resolution", "rotation", "width", "height", "context", "createCanvasContext2D", "canvas", "renderer", "Immediate_default", "featureCount", "indexFactor", "featuresByZIndex", "i", "feature", "featureStyleFunction", "styles", "color", "j", "jj", "originalStyle", "geometry", "intersects", "style", "fill", "stroke", "image", "imgSize", "imgContext", "img", "Icon_default", "zIndex", "byGeometryType", "zIndexKeys", "numberSafeCompareFunction", "ii", "type", "geomAndStyle", "k", "kk", "hitDetect", "pixel", "imageData", "resultFeatures", "x", "y", "index", "clamp", "r", "g", "init_extent", "init_dom", "init_util", "SIMPLIFY_TOLERANCE", "GEOMETRY_RENDERERS", "renderPointGeometry", "renderLineStringGeometry", "renderPolygonGeometry", "renderMultiPointGeometry", "renderMultiLineStringGeometry", "renderMultiPolygonGeometry", "renderGeometryCollectionGeometry", "renderCircleGeometry", "defaultOrder", "feature1", "feature2", "getUid", "getSquaredTolerance", "resolution", "pixelRatio", "tolerance", "getTolerance", "builderGroup", "geometry", "style", "feature", "declutterBuilderGroup", "fillStyle", "strokeStyle", "circleReplay", "textStyle", "textReplay", "renderFeature", "replayGroup", "squaredTolerance", "listener", "transform", "loading", "imageStyle", "imageState", "ImageState_default", "renderFeatureInternal", "simplifiedGeometry", "renderGeometry", "geometryRenderer", "geometries", "i", "ii", "lineStringReplay", "polygonReplay", "declutterImageWithText", "imageBuilderGroup", "declutterMode", "imageReplay", "textBuilderGroup", "init_array", "init_util", "CanvasVectorLayerRenderer", "Layer_default", "vectorLayer", "createEmpty", "executorGroup", "frameState", "declutterTree", "extent", "viewState", "center", "resolution", "projection", "rotation", "projectionExtent", "vectorSource", "pixelRatio", "viewHints", "snapToPixel", "ViewHint_default", "context", "width", "height", "multiWorld", "worldWidth", "getWidth", "endWorld", "world", "transform", "compositionContext", "createCanvasContext2D", "canvasPool", "alpha", "releaseCanvas", "target", "layerState", "makeScale", "makeInverse", "canvasTransform", "toString", "canvas", "replayGroup", "declutterExecutorGroup", "clipped", "render", "layerExtent", "fromUserExtent", "intersects", "containsExtent", "pixel", "resolve", "size", "apply", "layer", "transforms", "HIT_DETECT_RESOLUTION", "source", "startX", "offsetX", "createHitDetectionImageData", "hitDetect", "coordinate", "hitTolerance", "callback", "matches", "features", "featureCallback", "feature", "geometry", "distanceSq", "key", "getUid", "match", "result", "executorGroups", "item", "event", "animating", "interacting", "updateWhileAnimating", "updateWhileInteracting", "frameStateExtent", "vectorLayerRevision", "vectorLayerRenderBuffer", "vectorLayerRenderOrder", "defaultOrder", "buffer", "renderedExtent", "loadExtents", "gutter", "wrapX", "loadExtent", "equals", "BuilderGroup_default", "getTolerance", "declutterBuilderGroup", "userProjection", "getUserProjection", "userTransform", "i", "ii", "userExtent", "toUserExtent", "toUserResolution", "getTransformFromProjections", "squaredTolerance", "getSquaredTolerance", "ready", "styles", "styleFunction", "dirty", "replayGroupInstructions", "ExecutorGroup_default", "builderGroup", "loading", "renderFeature", "VectorLayer_default", "VectorLayer", "BaseVector_default", "options", "VectorLayer_default", "Vector_default", "init_EventType", "init_asserts", "LRUCache", "highWaterMark", "keep", "key", "f", "entry", "options", "assert", "keys", "i", "values", "value", "size", "LRUCache_default", "createOrUpdate", "z", "x", "y", "tileCoord", "getKeyZXY", "getKey", "fromKey", "key", "hash", "tileCoord", "withinExtentAndZ", "tileGrid", "z", "x", "y", "tileRange", "TileCache", "LRUCache_default", "usedTiles", "key", "z", "fromKey", "tile", "getKey", "TileCache_default", "TileEventType_default", "init_Event", "init_Object", "init_util", "Source", "Object_default", "options", "get", "adaptAttributions", "self", "resolve", "reject", "abstract", "attributions", "state", "attributionLike", "frameState", "Source_default", "init_util", "init_asserts", "init_asserts", "init_math", "init_extent", "init_array", "tmpTileCoord", "DECIMALS", "TileGrid", "options", "assert", "isSorted", "a", "b", "zoomFactor", "i", "ii", "extent", "getTopLeft", "size", "z", "tileRange", "TileRange_default", "restrictedTileRange", "zoom", "callback", "j", "jj", "tileCoord", "tempTileRange", "tempExtent", "x", "y", "tileCoordExtent", "createOrUpdate", "minX", "minY", "tileCoordZ", "tileCoordX", "tileCoordY", "factor", "maxX", "maxY", "origin", "resolution", "tileSize", "toSize", "coordinate", "opt_tileCoord", "reverseIntersectionPolicy", "scale", "ceil", "floor", "opt_direction", "linearFindNearest", "clamp", "viewport", "intersectsLinearRing", "length", "fullTileRanges", "TileGrid_default", "init_extent", "getForProjection", "projection", "tileGrid", "createForProjection", "wrapX", "tileCoord", "z", "center", "projectionExtent", "extentFromProjection", "containsCoordinate", "worldWidth", "getWidth", "worldsAway", "createForExtent", "extent", "maxZoom", "tileSize", "corner", "resolutions", "resolutionsFromExtent", "TileGrid_default", "getCorner", "resolutionsFromExtent", "extent", "maxZoom", "tileSize", "maxResolution", "toSize", "height", "getHeight", "width", "getWidth", "length", "resolutions", "z", "createForProjection", "projection", "corner", "extentFromProjection", "createForExtent", "get", "half", "METERS_PER_UNIT", "createOrUpdate", "TileSource", "Source_default", "options", "tileSize", "toSize", "TileCache_default", "projection", "usedTiles", "tileCache", "z", "tileRange", "callback", "covered", "tile", "tileCoordKey", "loaded", "x", "y", "getKeyZXY", "TileState_default", "key", "pixelRatio", "abstract", "getForProjection", "sourceProjection", "assert", "equivalent", "tileGrid", "tilePixelRatio", "scale", "tileCoord", "wrapX", "withinExtentAndZ", "tileCount", "TileSourceEvent", "Event_default", "type", "Tile_default", "init_asserts", "init_math", "createFromTemplate", "template", "tileGrid", "zRegEx", "xRegEx", "yRegEx", "dashYRegEx", "tileCoord", "pixelRatio", "projection", "z", "range", "assert", "createFromTemplates", "templates", "len", "tileUrlFunctions", "i", "createFromTileUrlFunctions", "h", "hash", "index", "modulo", "expandUrl", "url", "urls", "match", "startCharCode", "stopCharCode", "charCode", "stop", "i", "init_util", "UrlTile", "Tile_default", "options", "event", "tile", "uid", "getUid", "tileState", "type", "TileState_default", "TileEventType_default", "TileSourceEvent", "tileLoadFunction", "tileUrlFunction", "key", "url", "urls", "expandUrl", "createFromTemplates", "tileCoord", "pixelRatio", "projection", "z", "x", "y", "tileCoordKey", "getKeyZXY", "UrlTile_default", "init_util", "TileImage", "UrlTile_default", "options", "defaultTileLoadFunction", "ImageTile_default", "key", "projection", "usedTiles", "usedTileCache", "id", "tileCache", "equivalent", "thisProj", "projKey", "getUid", "getForProjection", "TileCache_default", "z", "x", "y", "pixelRatio", "tileCoord", "urlTileCoord", "tileUrl", "tile", "TileState_default", "EventType_default", "sourceProjection", "cache", "tileCoordKey", "getKey", "sourceTileGrid", "targetTileGrid", "wrappedTileCoord", "newTile", "Tile_default", "getKeyZXY", "interimTile", "render", "tilegrid", "proj", "get", "imageTile", "src", "TileImage_default", "appendParams", "uri", "params", "keyParams", "k", "qs", "init_extent", "WMTSTileGrid", "TileGrid_default", "options", "z", "createFromCapabilitiesMatrixSet", "matrixSet", "extent", "matrixLimits", "resolutions", "matrixIds", "origins", "tileSizes", "sizes", "supportedCRSPropName", "matrixIdsPropName", "identifierPropName", "scaleDenominatorPropName", "topLeftCornerPropName", "tileWidthPropName", "tileHeightPropName", "code", "projection", "get", "metersPerUnit", "switchOriginXY", "a", "b", "elt", "matrixAvailable", "elt_ml", "resolution", "tileWidth", "tileHeight", "WMTSTileGrid", "WMTS", "TileImage_default", "options", "requestEncoding", "tileGrid", "urls", "expandUrl", "createFromTileUrlFunctions", "key", "i", "res", "dimensions", "template", "context", "appendParams", "m", "p", "tileCoord", "pixelRatio", "projection", "localContext", "url", "WMTS_default", "optionsFromCapabilities", "wmtsCap", "config", "l", "elt", "tileMatrixSets", "idx", "supportedCRS", "el", "proj1", "get", "proj2", "equivalent", "matrixSet", "matrixLimits", "format", "style", "index", "array", "value", "matrixSetObj", "code", "projConfig", "wrapX", "switchXY", "matrix", "selectedMatrixLimit", "tileMatrixValue", "resolution", "origin", "tileSpanX", "tileSpanY", "matrixSetExtent", "extent", "containsExtent", "wgs84BoundingBox", "wgs84ProjectionExtent", "wgs84MatrixSetExtent", "transformExtent", "createFromCapabilitiesMatrixSet", "gets", "ii", "encodings", "element", "DEFAULT_VERSION", "init_asserts", "init_extent", "init_math", "TileWMS", "TileImage_default", "options", "params", "transparent", "createEmpty", "coordinate", "resolution", "projection", "projectionObj", "get", "sourceProjectionObj", "tileGrid", "z", "tileCoord", "tileResolution", "tileExtent", "tileSize", "toSize", "gutter", "buffer", "calculateSourceResolution", "transformExtent", "transform", "baseParams", "DEFAULT_VERSION", "x", "y", "layers", "mpu", "pixelSize", "appendParams", "pixelRatio", "urls", "dpi", "assert", "axisOrientation", "bbox", "tmp", "url", "index", "modulo", "hash", "i", "res", "key", "version", "compareVersions", "scale", "TileWMS_default", "init_Collection", "init_CollectionEventType", "init_Event", "init_EventType", "init_ObjectEventType", "import_rbush", "init_extent", "init_util", "init_obj", "RBush", "maxEntries", "RBush_", "extent", "value", "item", "getUid", "extents", "values", "items", "i", "l", "uid", "bbox", "equals", "callback", "result", "isEmpty", "data", "createOrUpdate", "rbush", "RBush_default", "VectorEventType_default", "init_functions", "loadingstrategy_exports", "__export", "all", "bbox", "tile", "all", "extent", "resolution", "bbox", "tile", "tileGrid", "projection", "z", "fromUserResolution", "tileRange", "fromUserExtent", "extents", "tileCoord", "toUserExtent", "init_asserts", "init_extent", "init_array", "init_util", "init_obj", "init_events", "init_functions", "withCredentials", "loadFeaturesXhr", "url", "format", "extent", "resolution", "projection", "success", "failure", "xhr", "event", "type", "source", "features", "dataProjection", "VOID", "VectorSourceEvent", "Event_default", "type", "feature", "features", "VectorSource", "Source_default", "options", "VOID", "assert", "xhr", "all", "useSpatialIndex", "RBush_default", "collection", "Collection_default", "featureKey", "getUid", "geometry", "extent", "VectorEventType_default", "listen", "EventType_default", "ObjectEventType_default", "valid", "id", "extents", "newFeatures", "geometryFeatures", "i", "length", "modifyingCollection", "evt", "CollectionEventType_default", "fast", "featureId", "unlistenByKey", "removeAndIgnoreReturn", "clearEvent", "callback", "coordinate", "result", "isEmpty", "extend", "projection", "wrapAndSliceX", "anExtent", "filter", "x", "y", "closestFeature", "closestPoint", "minSquaredDistance", "TRUE", "previousMinSquaredDistance", "minDistance", "uid", "event", "sid", "resolution", "loadedExtentsRtree", "extentsToLoad", "ii", "extentToLoad", "object", "containsExtent", "obj", "equals", "featureChangeKeys", "removed", "loader", "url", "Vector_default", "init_array", "XML_SCHEMA_INSTANCE_URI", "createElementNS", "namespaceURI", "qualifiedName", "getDocument", "getAllTextContent", "node", "normalizeWhitespace", "getAllTextContent_", "accumulator", "isDocument", "object", "getAttributeNS", "name", "parse", "xml", "makeArrayExtender", "valueReader", "thisArg", "objectStack", "value", "array", "extend", "makeArrayPusher", "makeReplacer", "makeObjectPropertyPusher", "property", "makeObjectPropertySetter", "makeChildAppender", "nodeWriter", "makeSimpleNodeFactory", "fixedNodeName", "fixedNamespaceURI", "value", "objectStack", "newNodeName", "node", "nodeName", "namespaceURI", "createElementNS", "OBJECT_PROPERTY_NODE_FACTORY", "makeStructureNS", "namespaceURIs", "structure", "structureNS", "i", "ii", "parseNode", "parsersNS", "node", "objectStack", "thisArg", "n", "parsers", "parser", "pushParseAndPop", "object", "serialize", "serializersNS", "nodeFactory", "values", "keys", "length", "value", "pushSerializeAndPop", "xmlSerializer_", "getXMLSerializer", "xmlSerializer_", "document_", "getDocument", "document_", "XML", "source", "doc", "parse", "isDocument", "n", "node", "XML_default", "NAMESPACE_URI", "readHref", "node", "readDecimal", "node", "s", "getAllTextContent", "readDecimalString", "string", "m", "readPositiveInteger", "readNonNegativeIntegerString", "readString", "writeStringTextNode", "node", "string", "getDocument", "NAMESPACE_URIS", "PARSERS", "makeStructureNS", "makeObjectPropertySetter", "readServiceIdentification", "readServiceProvider", "readOperationsMetadata", "OWS", "XML_default", "node", "owsObject", "pushParseAndPop", "ADDRESS_PARSERS", "readString", "ALLOWED_VALUES_PARSERS", "makeObjectPropertyPusher", "readValue", "CONSTRAINT_PARSERS", "readAllowedValues", "CONTACT_INFO_PARSERS", "readPhone", "readAddress", "DCP_PARSERS", "readHttp", "HTTP_PARSERS", "readGet", "OPERATION_PARSERS", "readDcp", "OPERATIONS_METADATA_PARSERS", "readOperation", "PHONE_PARSERS", "REQUEST_METHOD_PARSERS", "readConstraint", "SERVICE_CONTACT_PARSERS", "readContactInfo", "SERVICE_IDENTIFICATION_PARSERS", "SERVICE_PROVIDER_PARSERS", "readHref", "readServiceContact", "objectStack", "name", "href", "value", "object", "OWS_default", "init_extent", "NAMESPACE_URIS", "OWS_NAMESPACE_URIS", "PARSERS", "makeStructureNS", "makeObjectPropertySetter", "readContents", "WMTSCapabilities", "XML_default", "OWS_default", "node", "version", "WMTSCapabilityObject", "pushParseAndPop", "CONTENTS_PARSERS", "makeObjectPropertyPusher", "readLayer", "readTileMatrixSet", "LAYER_PARSERS", "readStyle", "readString", "readTileMatrixSetLink", "readDimensions", "readResourceUrl", "readBoundingBox", "STYLE_PARSERS", "readLegendUrl", "TMS_LINKS_PARSERS", "readTileMatrixLimitsList", "TMS_LIMITS_LIST_PARSERS", "makeArrayPusher", "readTileMatrixLimits", "TMS_LIMITS_PARSERS", "readPositiveInteger", "DIMENSION_PARSERS", "WGS84_BBOX_READERS", "readCoordinates", "TMS_PARSERS", "readTileMatrix", "TM_PARSERS", "readDecimal", "objectStack", "style", "isDefault", "format", "template", "resourceType", "resource", "coordinates", "boundingExtent", "legend", "readHref", "x", "y", "WMTSCapabilities_default", "init_Object", "init_EventType", "init_asserts", "init_events", "Feature", "Object_default", "geometryOrProperties", "geometry", "properties", "clone", "style", "unlistenByKey", "listen", "EventType_default", "createStyleFunction", "id", "name", "obj", "styles", "assert", "Feature_default", "init_extent", "init_array", "init_array", "init_math", "interpolatePoint", "flatCoordinates", "offset", "end", "stride", "fraction", "dest", "dimension", "o", "t", "n", "x1", "y1", "length", "cumulativeLengths", "i", "x2", "y2", "target", "index", "binarySearch", "lerp", "lineStringCoordinateAtM", "m", "extrapolate", "coordinate", "lo", "hi", "mid", "m0", "m1", "lineStringsCoordinateAtM", "ends", "interpolate", "ii", "LineString", "SimpleGeometry_default", "coordinates", "layout", "coordinate", "extend", "lineString", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "maxSquaredDelta", "assignClosestPoint", "callback", "forEach", "m", "extrapolate", "lineStringCoordinateAtM", "inflateCoordinates", "fraction", "dest", "interpolatePoint", "lineStringLength", "squaredTolerance", "simplifiedFlatCoordinates", "douglasPeucker", "extent", "intersectsLineString", "deflateCoordinates", "LineString_default", "init_extent", "init_array", "MultiLineString", "SimpleGeometry_default", "coordinates", "layout", "ends", "lineStrings", "flatCoordinates", "i", "ii", "lineString", "extend", "multiLineString", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "arrayMaxSquaredDelta", "assignClosestArrayPoint", "m", "extrapolate", "interpolate", "lineStringsCoordinateAtM", "inflateCoordinatesArray", "index", "LineString_default", "offset", "end", "midpoints", "stride", "midpoint", "interpolatePoint", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedEnds", "douglasPeuckerArray", "extent", "intersectsLineStringArray", "deflateCoordinatesArray", "MultiLineString_default", "init_extent", "init_array", "init_math", "MultiPoint", "SimpleGeometry_default", "coordinates", "layout", "point", "extend", "multiPoint", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "flatCoordinates", "stride", "i", "ii", "squaredDistance", "j", "inflateCoordinates", "index", "n", "Point_default", "points", "extent", "containsXY", "deflateCoordinates", "MultiPoint_default", "init_extent", "init_array", "init_extent", "linearRingss", "flatCoordinates", "offset", "endss", "stride", "flatCenters", "extent", "createEmpty", "i", "ii", "ends", "createOrUpdateFromFlatCoordinates", "MultiPolygon", "SimpleGeometry_default", "coordinates", "layout", "endss", "thisLayout", "polygons", "flatCoordinates", "thisEndss", "i", "ii", "polygon", "offset", "ends", "j", "jj", "extend", "len", "newEndss", "multiPolygon", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "multiArrayMaxSquaredDelta", "assignClosestMultiArrayPoint", "linearRingssContainsXY", "linearRingss", "right", "orientLinearRingsArray", "inflateMultiCoordinatesArray", "flatCenters", "getInteriorPointsOfMultiArray", "MultiPoint_default", "linearRingssAreOriented", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedEndss", "quantizeMultiArray", "index", "prevEnds", "end", "Polygon_default", "extent", "intersectsLinearRingMultiArray", "deflateMultiCoordinatesArray", "lastEnds", "MultiPolygon_default", "init_util", "FeatureFormat", "source", "options", "dataProjection", "get", "abstract", "feature", "features", "geometry", "Feature_default", "transformGeometryWithOptions", "write", "featureProjection", "transformed", "equivalent", "power", "transform", "coordinates", "i", "ii", "transformExtentWithOptions", "extent", "transformExtent", "init_util", "init_array", "XMLFeature", "Feature_default", "getXMLSerializer", "source", "options", "doc", "parse", "isDocument", "features", "node", "n", "extend", "abstract", "feature", "geometry", "XMLFeature_default", "init_array", "GMLNS", "ONLY_WHITESPACE_RE", "GMLBase", "XMLFeature_default", "options", "makeArrayPusher", "makeReplacer", "node", "objectStack", "localName", "features", "pushParseAndPop", "context", "featureType", "featureNS", "prefix", "defaultPrefix", "i", "ii", "child", "ft", "key", "count", "uri", "candidate", "ns", "parsersNS", "featureTypes", "p", "parsers", "extent", "transformExtentWithOptions", "geometry", "transformGeometryWithOptions", "asFeature", "geometryName", "values", "n", "value", "getAllTextContent", "len", "attName", "feature", "Feature_default", "fid", "getAttributeNS", "flatCoordinates", "Point_default", "coordinates", "MultiPoint_default", "lineStrings", "MultiLineString_default", "polygons", "MultiPolygon_default", "parseNode", "LineString_default", "ring", "LinearRing_default", "flatLinearRings", "ends", "extend", "Polygon_default", "internalOptions", "get", "GMLBase_default", "init_extent", "schemaLocation", "GMLNS", "MULTIGEOMETRY_TO_MEMBER_NODENAME", "GML2", "GMLBase_default", "options", "makeArrayPusher", "node", "objectStack", "s", "getAllTextContent", "containerSrs", "axisOrientation", "proj", "get", "coordsGroups", "flatCoordinates", "i", "ii", "coords", "x", "y", "z", "pushParseAndPop", "createOrUpdate", "flatLinearRing", "flatLinearRings", "value", "nodeName", "context", "multiSurface", "surface", "multiCurve", "createElementNS", "feature", "fid", "featureNS", "geometryName", "keys", "values", "properties", "key", "makeChildAppender", "writeStringTextNode", "item", "pushSerializeAndPop", "makeSimpleNodeFactory", "geometry", "srsName", "coordinates", "segments", "line", "child", "hasZ", "curve", "lines", "transformExtentWithOptions", "transformGeometryWithOptions", "namespaceURI", "points", "len", "parts", "point", "rings", "patches", "parentNode", "exteriorWritten", "polygon", "ring", "linearRing", "coord", "polygons", "extent", "OBJECT_PROPERTY_NODE_FACTORY", "makeReplacer", "GML2_default", "init_extent", "init_array", "schemaLocation", "GMLNS", "MULTIGEOMETRY_TO_MEMBER_NODENAME", "GML3", "GMLBase_default", "options", "node", "objectStack", "lineStrings", "pushParseAndPop", "MultiLineString_default", "flatCoordinates", "i", "ii", "extend", "polygons", "MultiPolygon_default", "parseNode", "flatLinearRing", "flatLinearRings", "ends", "Polygon_default", "LineString_default", "createOrUpdate", "s", "getAllTextContent", "re", "m", "containerSrs", "axisOrientation", "get", "y", "x", "len", "context", "contextDimension", "coords", "dim", "readNonNegativeIntegerString", "z", "value", "hasZ", "srsDimension", "srsName", "point", "writeStringTextNode", "points", "parts", "geometry", "pos", "createElementNS", "extent", "keys", "values", "pushSerializeAndPop", "OBJECT_PROPERTY_NODE_FACTORY", "posList", "nodeName", "parentNode", "exteriorWritten", "rings", "patches", "segments", "surface", "makeSimpleNodeFactory", "curve", "lines", "ring", "linearRing", "polygon", "child", "line", "item", "transformExtentWithOptions", "transformGeometryWithOptions", "feature", "fid", "featureNS", "geometryName", "properties", "key", "makeChildAppender", "features", "featureType", "serializers", "multiSurface", "multiCurve", "geom", "XML_SCHEMA_INSTANCE_URI", "makeReplacer", "GML2_default", "makeArrayPusher", "makeArrayExtender", "GML3_default", "GML32", "GML3_default", "options", "makeReplacer", "GML2_default", "GMLBase_default", "makeArrayPusher", "makeArrayExtender", "makeChildAppender", "writeStringTextNode", "GML32_default", "Filter", "tagName", "Filter_default", "init_asserts", "LogicalNary", "Filter_default", "tagName", "conditions", "assert", "LogicalNary_default", "And", "LogicalNary_default", "conditions", "And_default", "Bbox", "Filter_default", "geometryName", "extent", "srsName", "Bbox_default", "and", "conditions", "params", "And_default", "bbox", "geometryName", "extent", "srsName", "Bbox_default", "init_asserts", "FEATURE_COLLECTION_PARSERS", "makeObjectPropertySetter", "GMLBase_default", "makeArrayPusher", "TRANSACTION_SUMMARY_PARSERS", "readPositiveInteger", "TRANSACTION_RESPONSE_PARSERS", "readTransactionSummary", "readInsertResults", "QUERY_SERIALIZERS", "makeChildAppender", "writeStringTextNode", "TRANSACTION_SERIALIZERS", "writeFeature", "writeUpdate", "writeDelete", "writeProperty", "writeNative", "FEATURE_PREFIX", "XMLNS", "OGCNS", "WFSNS", "FESNS", "SCHEMA_LOCATIONS", "GML_FORMATS", "GML32_default", "GML3_default", "GML2_default", "DEFAULT_VERSION", "WFS", "XMLFeature_default", "options", "featureType", "node", "context", "objectStack", "featuresNS", "features", "pushParseAndPop", "source", "doc", "parse", "isDocument", "n", "result", "value", "readNonNegativeIntegerString", "createElementNS", "XML_SCHEMA_INSTANCE_URI", "assert", "filter", "writeGetFeature", "completeFilter", "geometryName", "extent", "srsName", "bboxFilter", "bbox", "and", "inserts", "updates", "deletes", "version", "baseObj", "request", "createTransactionRequest", "serializeTransactionRequest", "get", "featurePrefix", "gmlVersion", "type", "pushSerializeAndPop", "makeSimpleNodeFactory", "OGC_FID_PARSERS", "fidParser", "parseNode", "INSERT_RESULTS_PARSERS", "feature", "featureNS", "child", "writeOgcFidFilter", "fid", "ns", "getTypeName", "prefix", "typeName", "keys", "values", "i", "ii", "name", "pair", "nativeElement", "GETFEATURE_SERIALIZERS", "writeQuery", "writeDuringFilter", "writeLogicalFilter", "writeNotFilter", "writeBboxFilter", "writeSpatialFilter", "writeDWithinFilter", "writeComparisonFilter", "writeIsNullFilter", "writeIsBetweenFilter", "writeIsLikeFilter", "writeResourceIdFilter", "propertyNames", "typeNameAttr", "item", "getFilterNS", "writeFilterCondition", "parent", "format", "writePropertyName", "distance", "writeExpression", "timePeriod", "GMLNS", "begin", "writeTimeInstant", "end", "conditions", "condition", "writeLiteral", "lowerBoundary", "upperBoundary", "tagName", "property", "time", "timeInstant", "timePosition", "writeGetFeature", "node", "featureTypes", "objectStack", "context", "item", "pushSerializeAndPop", "GETFEATURE_SERIALIZERS", "makeSimpleNodeFactory", "getFilterNS", "version", "ns", "FESNS", "OGCNS", "WFS_default", "WFS", "init_Control", "init_asserts", "UNITS_PROP", "LEADING_DIGITS", "DEFAULT_DPI", "ScaleLine", "Control_default", "options", "element", "className", "CLASS_UNSELECTABLE", "units", "dpi", "viewState", "center", "projection", "pointResolutionUnits", "pointResolution", "getPointResolution", "minWidth", "maxWidth", "nominalCount", "suffix", "metersPerDegree", "METERS_PER_UNIT", "assert", "i", "count", "width", "decimalCount", "previousCount", "previousWidth", "previousDecimalCount", "decimal", "html", "scale", "resolutionScale", "mapScale", "steps", "stepWidth", "scaleSteps", "cls", "position", "isLast", "lengthString", "margin", "resolution", "inchesPerMeter", "mapEvent", "frameState", "ScaleLine_default", "register", "proj4", "projCodes", "len", "i", "j", "code", "get", "def", "units", "addProjection", "Projection_default", "code1", "proj1", "code2", "proj2", "addEquivalentProjections", "transform", "addCoordinateTransforms", "createSafeCoordinateTransform", "global_default", "defs", "PJD_3PARAM", "PJD_7PARAM", "PJD_GRIDSHIFT", "PJD_WGS84", "PJD_NODATUM", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_SEMIMINOR", "SRS_WGS84_ESQUARED", "SEC_TO_RAD", "HALF_PI", "SIXTH", "RA4", "RA6", "EPSLN", "D2R", "R2D", "FORTPI", "TWO_PI", "SPI", "exports", "exports", "units_default", "ignoredChar", "match", "obj", "key", "keys", "lkey", "i", "testkey", "processedKey", "projString_default", "defData", "self", "paramObj", "v", "p", "a", "split", "paramName", "paramVal", "paramOutname", "params", "D2R", "unit", "match", "units_default", "pm", "exports", "legalAxis", "parser_default", "parseString", "NEUTRAL", "KEYWORD", "NUMBER", "QUOTED", "AFTERQUOTE", "ENDED", "whitespace", "latin", "keyword", "endThings", "digets", "Parser", "text", "char", "newObjects", "txt", "parser", "mapit", "obj", "key", "value", "thing", "out", "newObj", "item", "sExpr", "v", "i", "D2R", "rename", "obj", "params", "outName", "inName", "d2r", "input", "cleanWKT", "wkt", "axisOrder", "i", "ii", "axis", "geogcs", "toMeter", "ratio", "renamer", "a", "list", "wkt_parser_default", "lisp", "parser_default", "type", "name", "sExpr", "defs", "name", "that", "def", "projString_default", "wkt_parser_default", "v", "global_default", "defs_default", "testObj", "code", "testDef", "defs_default", "codeWords", "testWKT", "word", "codes", "checkMercator", "item", "auth", "match", "checkProjStr", "ext", "testProj", "parse", "out", "wkt_parser_default", "maybeProjStr", "projString_default", "parseCode_default", "extend_default", "destination", "source", "value", "property", "msfnz_default", "eccent", "sinphi", "cosphi", "con", "sign_default", "x", "adjust_lon_default", "x", "SPI", "sign_default", "TWO_PI", "tsfnz_default", "eccent", "phi", "sinphi", "con", "com", "HALF_PI", "phi2z_default", "eccent", "ts", "eccnth", "con", "dphi", "phi", "HALF_PI", "i", "init", "con", "msfnz_default", "forward", "p", "lon", "lat", "R2D", "x", "y", "HALF_PI", "EPSLN", "adjust_lon_default", "FORTPI", "sinphi", "ts", "tsfnz_default", "inverse", "phi2z_default", "names", "merc_default", "init", "identity", "pt", "names", "longlat_default", "init", "identity", "projs", "merc_default", "longlat_default", "names", "projStore", "add", "proj", "i", "len", "get", "name", "n", "names", "projStore", "start", "projs", "add", "projections_default", "exports", "exports", "WGS84", "eccentricity", "a", "b", "rf", "R_A", "a2", "b2", "es", "e", "SIXTH", "RA4", "RA6", "ep2", "sphere", "ellps", "ellipse", "match", "exports", "WGS84", "EPSLN", "exports", "exports", "datum", "datumCode", "datum_params", "a", "b", "es", "ep2", "nadgrids", "out", "PJD_NODATUM", "PJD_WGS84", "PJD_3PARAM", "PJD_7PARAM", "SEC_TO_RAD", "PJD_GRIDSHIFT", "datum_default", "loadedNadgrids", "nadgrid", "key", "data", "view", "isLittleEndian", "detectLittleEndian", "header", "readHeader", "subgrids", "readSubgrids", "getNadgrids", "nadgrids", "grids", "parseNadgridString", "value", "optional", "secondsToRadians", "seconds", "nFields", "decodeString", "start", "end", "gridOffset", "i", "subHeader", "readGridHeader", "nodes", "readGridNodes", "lngColumnCount", "latColumnCount", "mapNodes", "r", "offset", "gridHeader", "nodesOffset", "gridRecordLength", "gridShiftRecords", "record", "Projection", "srsCode", "callback", "error", "json", "parseCode_default", "ourProj", "datumDef", "match", "exports", "sphere_", "sphere", "ecc", "eccentricity", "nadgrids", "getNadgrids", "datumObj", "datum_default", "extend_default", "projections_default", "Proj_default", "compareDatums", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "geodeticToGeocentric", "p", "es", "a", "Longitude", "Latitude", "Height", "Rn", "Sin_Lat", "Sin2_Lat", "Cos_Lat", "HALF_PI", "geocentricToGeodetic", "b", "genau", "genau2", "maxiter", "P", "RR", "CT", "ST", "RX", "RK", "RN", "CPHI0", "SPHI0", "CPHI", "SPHI", "SDPHI", "iter", "X", "Y", "Z", "geocentricToWgs84", "datum_type", "datum_params", "Dx_BF", "Dy_BF", "Dz_BF", "Rx_BF", "Ry_BF", "Rz_BF", "M_BF", "geocentricFromWgs84", "x_tmp", "y_tmp", "z_tmp", "checkParams", "type", "PJD_3PARAM", "PJD_7PARAM", "datum_transform_default", "source", "dest", "point", "compareDatums", "PJD_NODATUM", "source_a", "source_es", "PJD_GRIDSHIFT", "gridShiftCode", "applyGridShift", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_ESQUARED", "dest_a", "dest_b", "dest_es", "SRS_WGS84_SEMIMINOR", "geodeticToGeocentric", "geocentricToWgs84", "geocentricFromWgs84", "geocentricToGeodetic", "destGridShiftResult", "inverse", "input", "output", "onlyMandatoryGrids", "attemptedGrids", "i", "grid", "subgrid", "epsilon", "minX", "minY", "maxX", "maxY", "applySubgridShift", "R2D", "pin", "ct", "val", "tb", "adjust_lon_default", "t", "nadInterpolate", "tol", "dif", "del", "indx", "frct", "inx", "f00", "f10", "f11", "f01", "m11", "m10", "m00", "m01", "adjust_axis_default", "crs", "denorm", "point", "xin", "yin", "zin", "v", "t", "i", "out", "toPoint_default", "array", "out", "checkSanity_default", "point", "checkCoord", "num", "checkNotWGS", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "transform", "point", "enforceAxis", "wgs84", "toPoint_default", "checkSanity_default", "Proj_default", "adjust_axis_default", "D2R", "datum_transform_default", "R2D", "wgs84", "Proj_default", "transformer", "from", "to", "coords", "enforceAxis", "transformedArray", "out", "keys", "transform", "key", "checkProj", "item", "proj4", "fromProj", "toProj", "coord", "single", "obj", "core_default", "NUM_100K_SETS", "SET_ORIGIN_COLUMN_LETTERS", "SET_ORIGIN_ROW_LETTERS", "A", "I", "O", "V", "Z", "mgrs_default", "forward", "inverse", "toPoint", "ll", "accuracy", "encode", "LLtoUTM", "mgrs", "bbox", "UTMtoLL", "decode", "degToRad", "deg", "radToDeg", "rad", "Lat", "Long", "a", "eccSquared", "k0", "LongOrigin", "eccPrimeSquared", "N", "T", "C", "M", "LatRad", "LongRad", "LongOriginRad", "ZoneNumber", "UTMEasting", "UTMNorthing", "getLetterDesignator", "utm", "zoneLetter", "zoneNumber", "e1", "N1", "T1", "C1", "R1", "D", "mu", "phi1Rad", "x", "y", "lat", "lon", "result", "topRight", "LetterDesignator", "seasting", "snorthing", "get100kID", "easting", "northing", "setParm", "get100kSetForZone", "setColumn", "setRow", "getLetter100kID", "column", "row", "parm", "index", "colOrigin", "rowOrigin", "colInt", "rowInt", "rollover", "twoLetter", "mgrsString", "length", "hunK", "sb", "testChar", "i", "set", "east100k", "getEastingFromChar", "north100k", "getNorthingFromChar", "getMinNorthing", "remainder", "sep", "sepEasting", "sepNorthing", "accuracyBonus", "sepEastingString", "sepNorthingString", "e", "curCol", "eastingValue", "rewindMarker", "n", "curRow", "northingValue", "Point", "x", "y", "z", "coords", "mgrsStr", "toPoint", "accuracy", "forward", "Point_default", "C00", "C02", "C04", "C06", "C08", "C22", "C44", "C46", "C48", "C66", "C68", "C88", "pj_enfn_default", "es", "en", "t", "pj_mlfn_default", "phi", "sphi", "cphi", "en", "MAX_ITER", "pj_inv_mlfn_default", "arg", "es", "en", "k", "phi", "i", "s", "t", "pj_mlfn_default", "EPSLN", "init", "pj_enfn_default", "pj_mlfn_default", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "con", "x", "y", "sin_phi", "cos_phi", "al", "als", "c", "cs", "tq", "EPSLN", "t", "ts", "ml", "b", "inverse", "phi", "pj_inv_mlfn_default", "HALF_PI", "tan_phi", "d", "ds", "sign_default", "f", "g", "temp", "h", "names", "tmerc_default", "sinh_default", "x", "r", "hypot_default", "x", "y", "a", "b", "log1py_default", "x", "y", "z", "asinhy_default", "x", "y", "log1py_default", "hypot_default", "gatg_default", "pp", "B", "cos_2B", "i", "h1", "h2", "h", "clens_default", "pp", "arg_r", "r", "i", "hr1", "hr2", "hr", "cosh_default", "x", "r", "clens_cmplx_default", "pp", "arg_r", "arg_i", "sin_arg_r", "cos_arg_r", "sinh_arg_i", "sinh_default", "cosh_arg_i", "cosh_default", "r", "i", "j", "hr", "hi1", "hr1", "hi", "hr2", "hi2", "init", "tmerc_default", "f", "n", "np", "Z", "gatg_default", "clens_default", "forward", "p", "Ce", "adjust_lon_default", "Cn", "sin_Cn", "cos_Cn", "sin_Ce", "cos_Ce", "hypot_default", "asinhy_default", "tmp", "clens_cmplx_default", "x", "y", "inverse", "lon", "lat", "sinh_default", "names", "etmerc_default", "adjust_zone_default", "zone", "lon", "adjust_lon_default", "dependsOn", "init", "zone", "adjust_zone_default", "D2R", "etmerc_default", "names", "utm_default", "srat_default", "esinp", "exp", "MAX_ITER", "init", "sphi", "cphi", "FORTPI", "srat_default", "forward", "p", "lon", "lat", "HALF_PI", "inverse", "DEL_TOL", "num", "i", "names", "gauss_default", "init", "gauss_default", "forward", "p", "sinc", "cosc", "cosl", "k", "adjust_lon_default", "inverse", "lon", "lat", "rho", "c", "names", "sterea_default", "ssfn_", "phit", "sinphi", "eccen", "HALF_PI", "init", "EPSLN", "sign_default", "msfnz_default", "tsfnz_default", "forward", "p", "lon", "lat", "sinlat", "coslat", "A", "X", "sinX", "cosX", "ts", "rh", "dlon", "adjust_lon_default", "inverse", "ce", "Chi", "c", "phi2z_default", "names", "stere_default", "init", "phy0", "sinPhy0", "semiMajorAxis", "invF", "flattening", "e2", "e", "k1", "k2", "k3", "forward", "p", "Sa1", "Sa2", "S", "b", "I", "rotI", "rotB", "inverse", "Y", "X", "lambda", "phy", "prevPhy", "iteration", "names", "somerc_default", "TOL", "isTypeA", "P", "typeAProjections", "projectionName", "init", "con", "com", "cosph0", "D", "F", "H", "L", "sinph0", "p", "J", "gamma", "gamma0", "lamc", "lam1", "lam2", "phi1", "phi2", "alpha_c", "AB", "alp", "gam", "D2R", "HALF_PI", "one_es", "EPSLN", "tsfnz_default", "TWO_PI", "adjust_lon_default", "FORTPI", "forward", "coords", "S", "T", "U", "V", "W", "temp", "u", "v", "inverse", "Qp", "Sp", "Tp", "Vp", "Up", "phi2z_default", "names", "omerc_default", "init", "EPSLN", "temp", "sin1", "cos1", "ms1", "msfnz_default", "ts1", "tsfnz_default", "sin2", "cos2", "ms2", "ts2", "ts0", "forward", "p", "lon", "lat", "sign_default", "HALF_PI", "con", "ts", "rh1", "theta", "adjust_lon_default", "inverse", "x", "y", "phi2z_default", "names", "lcc_default", "init", "forward", "p", "gfi", "u", "deltav", "s", "d", "eps", "ro", "lon", "lat", "delta_lon", "adjust_lon_default", "inverse", "fi1", "ok", "tmp", "iter", "names", "krovak_default", "mlfn_default", "e0", "e1", "e2", "e3", "phi", "e0fn_default", "x", "e1fn_default", "x", "e2fn_default", "x", "e3fn_default", "x", "gN_default", "a", "e", "sinphi", "temp", "adjust_lat_default", "x", "HALF_PI", "sign_default", "imlfn_default", "ml", "e0", "e1", "e2", "e3", "phi", "dphi", "i", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "x", "y", "lam", "phi", "adjust_lon_default", "sinphi", "cosphi", "nl", "gN_default", "tl", "al", "asq", "cl", "ml", "inverse", "dd", "ml1", "phi1", "imlfn_default", "HALF_PI", "EPSLN", "nl1", "rl1", "tl1", "dl", "dsq", "adjust_lat_default", "names", "cass_default", "qsfnz_default", "eccent", "sinphi", "con", "S_POLE", "N_POLE", "EQUIT", "OBLIQ", "init", "t", "HALF_PI", "EPSLN", "sinphi", "qsfnz_default", "authset", "forward", "p", "x", "y", "coslam", "sinlam", "q", "sinb", "cosb", "b", "cosphi", "lam", "phi", "adjust_lon_default", "FORTPI", "inverse", "cCe", "sCe", "rho", "ab", "cosz", "rh", "sinz", "authlat", "P00", "P01", "P02", "P10", "P11", "P20", "es", "APA", "beta", "names", "laea_default", "asinz_default", "x", "init", "EPSLN", "msfnz_default", "qsfnz_default", "forward", "p", "lon", "lat", "qs", "rh1", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "phi1z", "eccent", "sinphi", "cosphi", "com", "dphi", "phi", "asinz_default", "eccnts", "i", "names", "aea_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "sinc", "cosc", "c", "asinz_default", "names", "gnom_default", "iqsfnz_default", "eccent", "q", "temp", "HALF_PI", "phi", "dphi", "sin_phi", "cos_phi", "con", "i", "init", "msfnz_default", "forward", "p", "lon", "lat", "x", "y", "dlon", "adjust_lon_default", "qs", "qsfnz_default", "inverse", "iqsfnz_default", "names", "cea_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "dlat", "adjust_lat_default", "inverse", "x", "y", "names", "eqc_default", "MAX_ITER", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "lon", "lat", "x", "y", "el", "dlon", "adjust_lon_default", "EPSLN", "adjust_lat_default", "nl", "gN_default", "inverse", "i", "al", "bl", "phi", "dphi", "tanphi", "cl", "mln", "mlnp", "ma", "con", "names", "poly_default", "init", "forward", "p", "n", "lon", "lat", "delta_lat", "delta_lon", "d_phi", "SEC_TO_RAD", "d_lambda", "d_phi_n", "d_psi", "th_re", "th_im", "th_n_re", "th_n_im", "th_n_re1", "th_n_im1", "z_re", "z_im", "inverse", "x", "y", "delta_x", "delta_y", "z_n_re", "z_n_im", "z_n_re1", "z_n_im1", "i", "num_re", "num_im", "den_re", "den_im", "den2", "d_psi_n", "names", "nzmg_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "inverse", "names", "mill_default", "MAX_ITER", "init", "pj_enfn_default", "forward", "p", "x", "y", "lon", "lat", "adjust_lon_default", "k", "i", "V", "EPSLN", "s", "c", "pj_mlfn_default", "inverse", "temp", "asinz_default", "adjust_lat_default", "pj_inv_mlfn_default", "HALF_PI", "names", "sinu_default", "init", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "theta", "con", "delta_theta", "EPSLN", "x", "y", "inverse", "arg", "names", "moll_default", "init", "EPSLN", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "msfnz_default", "mlfn_default", "forward", "p", "lon", "lat", "rh1", "ml", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "adjust_lat_default", "imlfn_default", "names", "eqdc_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "EPSLN", "theta", "asinz_default", "HALF_PI", "al", "asq", "sinth", "costh", "g", "gsq", "msq", "con", "q", "inverse", "xx", "yy", "xys", "c1", "c2", "c3", "a1", "m1", "th1", "d", "names", "vandg_default", "init", "forward", "p", "lon", "lat", "sinphi", "cosphi", "dlon", "adjust_lon_default", "e0", "e1", "e2", "e3", "Mlp", "Ml", "tanphi", "Nl1", "Nl", "psi", "Az", "G", "H", "GH", "Hs", "c", "kp", "cos_c", "s", "s2", "s3", "s4", "s5", "EPSLN", "HALF_PI", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "gN_default", "inverse", "rh", "z", "sinz", "cosz", "con", "M", "N1", "cosAz", "tmp", "A", "B", "D", "Ee", "F", "sinpsi", "asinz_default", "imlfn_default", "names", "aeqd_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "z", "sinz", "cosz", "con", "asinz_default", "HALF_PI", "names", "ortho_default", "FACE_ENUM", "AREA_ENUM", "init", "HALF_PI", "FORTPI", "forward", "p", "xy", "lat", "lon", "theta", "phi", "t", "mu", "area", "SPI", "q", "r", "s", "sinlat", "coslat", "sinlon", "coslon", "qsc_shift_lon_origin", "qsc_fwd_equat_face_theta", "inverse", "lp", "nu", "cosmu", "tannu", "tantheta", "cosphi", "invert_sign", "tanphi", "xa", "y", "x", "EPSLN", "offset", "slon", "TWO_PI", "names", "qsc_default", "COEFS_X", "COEFS_Y", "FXC", "FYC", "C1", "R2D", "RC1", "NODES", "poly3_val", "coefs", "x", "poly3_der", "newton_rapshon", "f_df", "start", "max_err", "iters", "upd", "init", "forward", "ll", "lon", "adjust_lon_default", "dphi", "i", "xy", "inverse", "HALF_PI", "t", "EPSLN", "D2R", "names", "robin_default", "init", "forward", "p", "point", "geodeticToGeocentric", "inverse", "geocentricToGeodetic", "names", "geocent_default", "mode", "params", "init", "p", "D2R", "HALF_PI", "EPSLN", "omega", "gamma", "forward", "sinphi", "cosphi", "coslam", "x", "y", "yt", "ba", "inverse", "r", "bm", "bq", "rh", "hypot_default", "cosz", "sinz", "names", "tpers_default", "init", "one_es", "rone_es", "forward", "p", "lon", "lat", "tmp", "v_x", "v_y", "v_z", "r", "hypot_default", "inverse", "a", "b", "det", "k", "v_zp", "names", "geos_default", "projs_default", "proj4", "tmerc_default", "etmerc_default", "utm_default", "sterea_default", "stere_default", "somerc_default", "omerc_default", "lcc_default", "krovak_default", "cass_default", "laea_default", "aea_default", "gnom_default", "cea_default", "eqc_default", "poly_default", "nzmg_default", "mill_default", "sinu_default", "moll_default", "eqdc_default", "vandg_default", "aeqd_default", "ortho_default", "qsc_default", "robin_default", "geocent_default", "tpers_default", "geos_default", "core_default", "Proj_default", "Point_default", "toPoint_default", "defs_default", "nadgrid", "transform", "mgrs_default", "projs_default", "lib_default", "import_ol_layerswitcher"]
}
