{
  "version": 3,
  "sources": ["../../../saul/node_modules/proj4/lib/global.js", "../../../saul/node_modules/proj4/lib/constants/values.js", "../../../saul/node_modules/proj4/lib/constants/PrimeMeridian.js", "../../../saul/node_modules/proj4/lib/constants/units.js", "../../../saul/node_modules/proj4/lib/match.js", "../../../saul/node_modules/proj4/lib/projString.js", "../../../saul/node_modules/wkt-parser/parser.js", "../../../saul/node_modules/wkt-parser/process.js", "../../../saul/node_modules/wkt-parser/index.js", "../../../saul/node_modules/proj4/lib/defs.js", "../../../saul/node_modules/proj4/lib/parseCode.js", "../../../saul/node_modules/proj4/lib/extend.js", "../../../saul/node_modules/proj4/lib/common/msfnz.js", "../../../saul/node_modules/proj4/lib/common/sign.js", "../../../saul/node_modules/proj4/lib/common/adjust_lon.js", "../../../saul/node_modules/proj4/lib/common/tsfnz.js", "../../../saul/node_modules/proj4/lib/common/phi2z.js", "../../../saul/node_modules/proj4/lib/projections/merc.js", "../../../saul/node_modules/proj4/lib/projections/longlat.js", "../../../saul/node_modules/proj4/lib/projections.js", "../../../saul/node_modules/proj4/lib/constants/Ellipsoid.js", "../../../saul/node_modules/proj4/lib/deriveConstants.js", "../../../saul/node_modules/proj4/lib/constants/Datum.js", "../../../saul/node_modules/proj4/lib/datum.js", "../../../saul/node_modules/proj4/lib/nadgrid.js", "../../../saul/node_modules/proj4/lib/Proj.js", "../../../saul/node_modules/proj4/lib/datumUtils.js", "../../../saul/node_modules/proj4/lib/datum_transform.js", "../../../saul/node_modules/proj4/lib/adjust_axis.js", "../../../saul/node_modules/proj4/lib/common/toPoint.js", "../../../saul/node_modules/proj4/lib/checkSanity.js", "../../../saul/node_modules/proj4/lib/transform.js", "../../../saul/node_modules/proj4/lib/core.js", "../../../saul/node_modules/mgrs/mgrs.js", "../../../saul/node_modules/proj4/lib/Point.js", "../../../saul/node_modules/proj4/lib/common/pj_enfn.js", "../../../saul/node_modules/proj4/lib/common/pj_mlfn.js", "../../../saul/node_modules/proj4/lib/common/pj_inv_mlfn.js", "../../../saul/node_modules/proj4/lib/projections/tmerc.js", "../../../saul/node_modules/proj4/lib/common/sinh.js", "../../../saul/node_modules/proj4/lib/common/hypot.js", "../../../saul/node_modules/proj4/lib/common/log1py.js", "../../../saul/node_modules/proj4/lib/common/asinhy.js", "../../../saul/node_modules/proj4/lib/common/gatg.js", "../../../saul/node_modules/proj4/lib/common/clens.js", "../../../saul/node_modules/proj4/lib/common/cosh.js", "../../../saul/node_modules/proj4/lib/common/clens_cmplx.js", "../../../saul/node_modules/proj4/lib/projections/etmerc.js", "../../../saul/node_modules/proj4/lib/common/adjust_zone.js", "../../../saul/node_modules/proj4/lib/projections/utm.js", "../../../saul/node_modules/proj4/lib/common/srat.js", "../../../saul/node_modules/proj4/lib/projections/gauss.js", "../../../saul/node_modules/proj4/lib/projections/sterea.js", "../../../saul/node_modules/proj4/lib/projections/stere.js", "../../../saul/node_modules/proj4/lib/projections/somerc.js", "../../../saul/node_modules/proj4/lib/projections/omerc.js", "../../../saul/node_modules/proj4/lib/projections/lcc.js", "../../../saul/node_modules/proj4/lib/projections/krovak.js", "../../../saul/node_modules/proj4/lib/common/mlfn.js", "../../../saul/node_modules/proj4/lib/common/e0fn.js", "../../../saul/node_modules/proj4/lib/common/e1fn.js", "../../../saul/node_modules/proj4/lib/common/e2fn.js", "../../../saul/node_modules/proj4/lib/common/e3fn.js", "../../../saul/node_modules/proj4/lib/common/gN.js", "../../../saul/node_modules/proj4/lib/common/adjust_lat.js", "../../../saul/node_modules/proj4/lib/common/imlfn.js", "../../../saul/node_modules/proj4/lib/projections/cass.js", "../../../saul/node_modules/proj4/lib/common/qsfnz.js", "../../../saul/node_modules/proj4/lib/projections/laea.js", "../../../saul/node_modules/proj4/lib/common/asinz.js", "../../../saul/node_modules/proj4/lib/projections/aea.js", "../../../saul/node_modules/proj4/lib/projections/gnom.js", "../../../saul/node_modules/proj4/lib/common/iqsfnz.js", "../../../saul/node_modules/proj4/lib/projections/cea.js", "../../../saul/node_modules/proj4/lib/projections/eqc.js", "../../../saul/node_modules/proj4/lib/projections/poly.js", "../../../saul/node_modules/proj4/lib/projections/nzmg.js", "../../../saul/node_modules/proj4/lib/projections/mill.js", "../../../saul/node_modules/proj4/lib/projections/sinu.js", "../../../saul/node_modules/proj4/lib/projections/moll.js", "../../../saul/node_modules/proj4/lib/projections/eqdc.js", "../../../saul/node_modules/proj4/lib/projections/vandg.js", "../../../saul/node_modules/proj4/lib/projections/aeqd.js", "../../../saul/node_modules/proj4/lib/projections/ortho.js", "../../../saul/node_modules/proj4/lib/projections/qsc.js", "../../../saul/node_modules/proj4/lib/projections/robin.js", "../../../saul/node_modules/proj4/lib/projections/geocent.js", "../../../saul/node_modules/proj4/lib/projections/tpers.js", "../../../saul/node_modules/proj4/lib/projections/geos.js", "../../../saul/node_modules/proj4/projs.js", "../../../saul/node_modules/proj4/lib/index.js", "../../../saul/modules/saul-projection.js", "../../node_modules/proj4/lib/global.js", "../../node_modules/proj4/lib/constants/values.js", "../../node_modules/proj4/lib/constants/PrimeMeridian.js", "../../node_modules/proj4/lib/constants/units.js", "../../node_modules/proj4/lib/match.js", "../../node_modules/proj4/lib/projString.js", "../../node_modules/wkt-parser/parser.js", "../../node_modules/wkt-parser/process.js", "../../node_modules/wkt-parser/index.js", "../../node_modules/proj4/lib/defs.js", "../../node_modules/proj4/lib/parseCode.js", "../../node_modules/proj4/lib/extend.js", "../../node_modules/proj4/lib/common/msfnz.js", "../../node_modules/proj4/lib/common/sign.js", "../../node_modules/proj4/lib/common/adjust_lon.js", "../../node_modules/proj4/lib/common/tsfnz.js", "../../node_modules/proj4/lib/common/phi2z.js", "../../node_modules/proj4/lib/projections/merc.js", "../../node_modules/proj4/lib/projections/longlat.js", "../../node_modules/proj4/lib/projections.js", "../../node_modules/proj4/lib/constants/Ellipsoid.js", "../../node_modules/proj4/lib/deriveConstants.js", "../../node_modules/proj4/lib/constants/Datum.js", "../../node_modules/proj4/lib/datum.js", "../../node_modules/proj4/lib/nadgrid.js", "../../node_modules/proj4/lib/Proj.js", "../../node_modules/proj4/lib/datumUtils.js", "../../node_modules/proj4/lib/datum_transform.js", "../../node_modules/proj4/lib/adjust_axis.js", "../../node_modules/proj4/lib/common/toPoint.js", "../../node_modules/proj4/lib/checkSanity.js", "../../node_modules/proj4/lib/transform.js", "../../node_modules/proj4/lib/core.js", "../../node_modules/mgrs/mgrs.js", "../../node_modules/proj4/lib/Point.js", "../../node_modules/proj4/lib/common/pj_enfn.js", "../../node_modules/proj4/lib/common/pj_mlfn.js", "../../node_modules/proj4/lib/common/pj_inv_mlfn.js", "../../node_modules/proj4/lib/projections/tmerc.js", "../../node_modules/proj4/lib/common/sinh.js", "../../node_modules/proj4/lib/common/hypot.js", "../../node_modules/proj4/lib/common/log1py.js", "../../node_modules/proj4/lib/common/asinhy.js", "../../node_modules/proj4/lib/common/gatg.js", "../../node_modules/proj4/lib/common/clens.js", "../../node_modules/proj4/lib/common/cosh.js", "../../node_modules/proj4/lib/common/clens_cmplx.js", "../../node_modules/proj4/lib/projections/etmerc.js", "../../node_modules/proj4/lib/common/adjust_zone.js", "../../node_modules/proj4/lib/projections/utm.js", "../../node_modules/proj4/lib/common/srat.js", "../../node_modules/proj4/lib/projections/gauss.js", "../../node_modules/proj4/lib/projections/sterea.js", "../../node_modules/proj4/lib/projections/stere.js", "../../node_modules/proj4/lib/projections/somerc.js", "../../node_modules/proj4/lib/projections/omerc.js", "../../node_modules/proj4/lib/projections/lcc.js", "../../node_modules/proj4/lib/projections/krovak.js", "../../node_modules/proj4/lib/common/mlfn.js", "../../node_modules/proj4/lib/common/e0fn.js", "../../node_modules/proj4/lib/common/e1fn.js", "../../node_modules/proj4/lib/common/e2fn.js", "../../node_modules/proj4/lib/common/e3fn.js", "../../node_modules/proj4/lib/common/gN.js", "../../node_modules/proj4/lib/common/adjust_lat.js", "../../node_modules/proj4/lib/common/imlfn.js", "../../node_modules/proj4/lib/projections/cass.js", "../../node_modules/proj4/lib/common/qsfnz.js", "../../node_modules/proj4/lib/projections/laea.js", "../../node_modules/proj4/lib/common/asinz.js", "../../node_modules/proj4/lib/projections/aea.js", "../../node_modules/proj4/lib/projections/gnom.js", "../../node_modules/proj4/lib/common/iqsfnz.js", "../../node_modules/proj4/lib/projections/cea.js", "../../node_modules/proj4/lib/projections/eqc.js", "../../node_modules/proj4/lib/projections/poly.js", "../../node_modules/proj4/lib/projections/nzmg.js", "../../node_modules/proj4/lib/projections/mill.js", "../../node_modules/proj4/lib/projections/sinu.js", "../../node_modules/proj4/lib/projections/moll.js", "../../node_modules/proj4/lib/projections/eqdc.js", "../../node_modules/proj4/lib/projections/vandg.js", "../../node_modules/proj4/lib/projections/aeqd.js", "../../node_modules/proj4/lib/projections/ortho.js", "../../node_modules/proj4/lib/projections/qsc.js", "../../node_modules/proj4/lib/projections/robin.js", "../../node_modules/proj4/lib/projections/geocent.js", "../../node_modules/proj4/lib/projections/tpers.js", "../../node_modules/proj4/lib/projections/geos.js", "../../node_modules/proj4/projs.js", "../../node_modules/proj4/lib/index.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/components/input.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/components/result-box.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/components/no-result-box.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/components/results.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/modules/api.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/modules/type-label.js", "../../node_modules/@dataforsyningen/gsearch-ui/src/components/search.js", "../../src/leaflet.js"],
  "sourcesContent": ["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n", "export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n", "var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n", "export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n", "var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n", "import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n", "export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n", "\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n", "var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n", "import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n", "import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n", "export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n", "export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}", "export default function(x) {\n  return x<0 ? -1 : 1;\n}", "\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n", "import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n", "import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n", "var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n", "import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n", "var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n", "import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n", "/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n", "import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n", "'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n", "import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n", "export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n", "export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}", "export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n", "import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n", "import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;", "\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100\u00B4k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n", "import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n", "var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}", "export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}", "import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n", "// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}", "export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n", "export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n", "import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n", "export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n", "export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}", "import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n", "// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n", "import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n", "export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}", "import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n", "/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme \u00E0 axe oblique et pour la transformation entre\n    des syst\u00E8mes de r\u00E9f\u00E9rence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}", "export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}", "export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}", "export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}", "export default function(x) {\n  return (x * x * x * (35 / 3072));\n}", "export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}", "import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n", "export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}", "import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}", "\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n", "export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}", "import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n", "// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};", "\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n", "import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}", "import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n", "/**\n * SAUL map projection and transformation utilities \n */\n\nimport proj4 from 'proj4'\n\n/** Defines an EPSG:25832 projection using proj4.\n * Learn about EPSG:25832 at https://epsg.io/25832 and proj4 at http://proj4js.org/\n * EPSG:25832 definition can be requested at Definition can be requested from https://epsg.io/?format=json&q=25832\n * @param {object} proj4object - a proj4 instance\n * @returns {object} Returns same proj4 instance with an added EPSG:25832 projection definition\n */\nfunction epsg25832proj(proj4object) {\n  proj4object.defs('EPSG:25832', \"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\")\n  return proj4object\n}\n\n/** Creates an object with methods for translating coordinates from one projection to the other\n * @param {string} [projection1] - from Projection\n * @param {string} [projection2] - to projection\n * @returns {object} An object with two methods is returned, its methods are `forward` which projects from the first projection to the second and `inverse` which projects from the second to the first.\n */\nfunction createTranslator(projection1 = 'WGS84', projection2 = 'EPSG:25832') {\n  if (!proj4.defs['EPSG:25832']) {\n    epsg25832proj(proj4) // Define EPSG:25832 projection if missing\n  }\n  return proj4(projection1, projection2)\n}\n\nexport {\n  epsg25832proj,\n  createTranslator\n}", "export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n", "export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n", "var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n", "export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n", "var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n", "import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n", "export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n", "\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n", "var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n", "import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n", "import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n", "export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n", "export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}", "export default function(x) {\n  return x<0 ? -1 : 1;\n}", "\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n", "import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n", "import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n", "var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n", "import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n", "var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n", "import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n", "/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n", "import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n", "'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n", "import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n", "export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n", "export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}", "export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n", "import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n", "import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;", "\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100\u00B4k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n", "import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n", "var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}", "export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}", "import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n", "// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}", "export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n", "export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n", "import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n", "export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n", "export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n", "export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}", "import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n", "// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n", "import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n", "export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}", "import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n", "/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme \u00E0 axe oblique et pour la transformation entre\n    des syst\u00E8mes de r\u00E9f\u00E9rence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}", "export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}", "export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}", "export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}", "export default function(x) {\n  return (x * x * x * (35 / 3072));\n}", "export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}", "import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n", "export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}", "import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}", "\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n", "export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}", "import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n", "// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};", "\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n", "import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}", "import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n", "export class GSearchInput extends HTMLElement {\n\n  // public properties\n  placeholder_text = 's\u00F8g...'\n  styles = /* css */`\n    input {\n      width: calc(100% - 1rem - 2px);\n      padding: 0.5rem;\n      border: 1px solid black;\n    }\n  `\n  template = /* html */`\n    <style>\n      ${this.styles}\n    </style>\n    <input type=\"text\" placeholder=\"${ this.placeholder_text }\">\n  `\n\n  // getters\n\n  // setters\n\n  /**\n   * @param {string} searchString\n   */\n  set searchString(searchString) {\n    const input = this.shadowRoot.querySelector('input').value = searchString\n  }\n\n  constructor() {\n    super()\n    this.createShadowDOM()\n  }\n\n  createShadowDOM() {\n    // Create a shadow root\n    this.attachShadow({mode: 'open'}) // sets and returns 'this.shadowRoot'\n    const container = document.createElement('article')\n    container.innerHTML = this.template\n    // Attach the elements to the shadow DOM\n    this.shadowRoot.append(container)\n  }\n\n  connectedCallback() {\n    const input = this.shadowRoot.querySelector('input')\n    input.addEventListener('input', (event) => {\n      this.dispatchEvent(new CustomEvent('input-change', { detail: input.value, bubbles: true, composed: true }))\n    })\n  }\n}\n", "export class GSearchResultBox extends HTMLElement {\n\n  // public properties\n  data = {}\n  styles = /* css */`\n    p {\n      margin: 0.5rem 0;\n    }\n    .result {\n      display: flex;\n      flex-direction: row;\n      border: 1px solid black;\n      border-top: none;\n      padding: 0.5rem 1rem;\n      cursor: pointer;\n    }\n    .result:hover {\n      background-color: #F3F3F3;\n    }\n    .icon, .title {\n      display: inline-block;\n    }\n  `\n\n  // getters\n\n  // setters\n\n  /**\n   * @param {any} data\n   */\n  set result(data) {\n    this.data = data\n    // husnummer uses `adgangsadressebetegnelse`, adresse uses `adressebetegnelse`. Rest has `praesentation`.\n    let title = data.praesentation || data.adgangsadressebetegnelse || data.adressebetegnelse\n    /* Commented out for testing purposes to show the clean data.\n    if (data.type === 'navngivenvej') { // add postnummer and postdistrikter to name\n      title += ' ' + data.postnummer + ' ' + data.postdistrikter\n    } else if (data.type === 'matrikelnummer') { // add postnummer and postdistrikter to name\n      title += ' (Matrikel)'\n    }\n    */\n    this.updateResult(title)\n  }\n\n  constructor() {\n    super()\n    this.createShadowDOM()\n  }\n\n  createShadowDOM() {\n    // Create a shadow root\n    this.attachShadow({mode: 'open'}) // sets and returns 'this.shadowRoot'\n    this.container = document.createElement('li')\n    // this.container.innerHTML = this.template\n    // Attach the elements to the shadow DOM\n    this.shadowRoot.append(this.container)\n  }\n\n  onClick(data) {\n    if (this.data.type === 'navngivenvej') {\n      this.dispatchEvent(new CustomEvent('search-road', { detail: data, bubbles: true, composed: true }))\n    }\n    this.dispatchEvent(new CustomEvent('gsearch:select', { detail: data, bubbles: true, composed: true }))\n  }\n\n  updateResult(title) {\n    const template = /* html */`\n      <style>\n        ${this.styles}\n      </style>\n      <div class=\"result\">\n        <div class=\"title\">\n          <p class=\"title-text\">${ title }</p>\n        </div>\n        <div class=\"arrow\"></div>\n      </div>\n    `\n    this.container.innerHTML = template\n    this.container.querySelector('.result').addEventListener(\"click\", () => {\n      this.onClick(this.data)\n    })\n  }\n}", "export class GSearchNoResultBox extends HTMLElement {\n\n  // public properties\n  data = {}\n  styles = /* css */`\n    p {\n      margin: 0.5rem 0;\n    }\n    .result {\n      display: flex;\n      flex-direction: row;\n      border: 1px solid black;\n      border-top: none;\n      padding: 0.5rem 1rem;\n      cursor: pointer;\n    }\n    .result:hover {\n      background-color: #F3F3F3;\n    }\n    .icon, .title {\n      display: inline-block;\n    }\n  `\n  template = /* html */`\n    <style>\n      ${this.styles}\n    </style>\n    <div class=\"result\">\n      <div class=\"title\">\n        <p class=\"title-text\">Der er ingen resultater der matchede din s\u00F8gning.</p>\n      </div>\n    </div>\n  `\n\n  // getters\n\n  // setters\n\n  constructor() {\n    super()\n    this.createShadowDOM()\n  }\n\n  createShadowDOM() {\n    // Create a shadow root\n    this.attachShadow({mode: 'open'}) // sets and returns 'this.shadowRoot'\n    this.container = document.createElement('li')\n    this.container.innerHTML = this.template\n    // Attach the elements to the shadow DOM\n    this.shadowRoot.append(this.container)\n  }\n}", "import { GSearchResultBox } from './result-box.js'\nimport { GSearchNoResultBox } from './no-result-box.js'\n\ncustomElements.define('g-search-result-box', GSearchResultBox)\ncustomElements.define('g-search-no-result-box', GSearchNoResultBox)\n\nexport class GSearchResults extends HTMLElement {\n\n  // public properties\n  styles = /* css */`\n    ul {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n  `\n  template = /* html */`\n    <style>\n      ${this.styles}\n    </style>\n  `\n\n  // getters\n\n  // setters\n\n  /**\n   * @param {any[]} data\n   */\n  set results(data) {\n    this.updateResults(data)\n  }\n\n  constructor() {\n    super()\n    this.createShadowDOM()\n  }\n\n  createShadowDOM() {\n    // Create a shadow root\n    this.attachShadow({mode: 'open'}) // sets and returns 'this.shadowRoot'\n    const container = document.createElement('ul')\n    container.innerHTML = this.template\n    // Attach the elements to the shadow DOM\n    this.shadowRoot.append(container)\n  }\n\n  updateResults(data) {\n    const list = document.createElement('ul')\n    // If no results, show a message for that\n    if (!data[0]) {\n      const listItem = document.createElement('g-search-no-result-box')\n      list.append(listItem)\n    \n    /* Commented out for testing purposes to show the clean data.\n    // find any roadnames so we can hide any adresse/husnummer that matches\n    const roads = []\n    data.forEach((el) => {\n      if (el.type === 'navngivenvej') {\n        roads.push(el)\n      }\n    }) */\n    } else {\n      data.forEach((el) => {\n        /* Commented out for testing purposes to show the clean data.\n        if (el.type === 'husnummer' || el.type === 'adresse') {\n          if (roads.length > 1 && roads.find((road) => {\n            return road.vejnavn === el.vejnavn && road.postnummer === el.postnummer\n          })) {\n            return\n          }\n        } */\n        // if the result boxes end up with enough significant differences to justify a class for each, use this:\n        // const listItem = document.createElement('g-search-result-box-' + el.type)\n        const listItem = document.createElement('g-search-result-box')\n        listItem.result = el\n        list.append(listItem)\n      })\n    }\n    this.shadowRoot.innerHTML = this.template\n    this.shadowRoot.append(list)\n  }\n\n  /** Clears the result list\n   */\n  clear() {\n    this.shadowRoot.innerHTML = this.template\n  }\n\n}", "const gsearchUrl = 'https://api.dataforsyningen.dk/gsearch_test/v1.0/search?'\nconst defaultResources = 'navngivenvej,husnummer,adresse,stednavn,kommune,region,retskreds,postdistrikt,opstillingskreds,sogn,politikreds,matrikelnummer'\n\nlet error_msg\n\n/** Getter for error messages */\nfunction getErrorMsg() {\n  return error_msg\n}\n\n/** Returns response data */\nfunction HttpResponseHandler(response, is_json) {\n  if (!response.ok) {\n    error_msg = response.status\n    // interruptLoading()\n    throw new Error(`HTTP error! ${ response.status }`)\n  }\n  if (is_json) {\n    // We assume the returned data is JSON\n    return response.json()\n  } else {\n    // Return whatever and let someone else worry about parsing it\n    return response\n  }\n  \n}\n\n/** \n * GET HTTP responsee from API\n * @param {string} url - API service URL, including endpoint paths and query parameters.\n * @param {object} [config] - Custom request configs. See https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @param {boolean} [is_json] - `true` if requested output is JSON\n * @returns {object} response object\n */\n function get(url, config = {}, is_json = true) {\n  if (!url) {\n    console.error('Could not fetch data. Missing API URL')\n  } else {\n    // startLoading()\n    return fetch( url, {\n      ...config,\n      method: 'GET'\n    })\n    .then((response) => {\n      return HttpResponseHandler(response, is_json)\n    })\n    .then((response) => {\n      // Finally, return the parsed JSON response\n      // endLoading()\n      return response\n    })\n    .catch((error) => {\n      // ... unless something goes wrong\n      console.error(`Fetch error: ${error}`)\n      // endLoading()\n      return error\n    })\n  }\n}\n\n/** \n * POST HTTP request to API\n * @param {string} url - API service URL, including endpoint paths and query parameters.\n * @param {object} requestbody - Request data\n * @param {string} token - Authentication token from Dataforsyningen\n * @returns {object} response object\n */\n function post(url, requestbody, token) {\n  if (!url || !token || !requestbody) {\n    console.error('Could not fetch data. Missing API token, request body, or URL')\n  } else {\n    // startLoading()\n    return fetch( url, {\n      method: 'POST',\n      headers: {\n        'token': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestbody)\n    })\n    .then((response) => {\n      return HttpResponseHandler(response)\n    })\n    .then((response) => {\n      // Finally, return the parsed JSON response\n      // endLoading()\n      return response\n    })\n    .catch((error) => {\n      // ... unless something goes wrong\n      console.error(`Fetch error: ${error}`)\n      // endLoading()\n      return error\n    })\n  }\n}\n\nfunction search(searchString, token, resources, limit) {\n  if (!resources) {\n    resources = defaultResources\n  }\n  const url = gsearchUrl + 'token=' + token + '&q=' + searchString + '&resources=' + resources + '&limit=' + limit\n  return get(url)\n}\n\nexport {\n  getErrorMsg,\n  search\n}\n", "function getLabel(obj) {\n  return obj.praesentation || obj.adgangsadressebetegnelse || obj.adressebetegnelse\n}\n\nexport {\n  getLabel\n}\n", "import { GSearchInput } from './input.js'\nimport { GSearchResults } from './results.js'\nimport { search } from '../modules/api.js'\nimport { getLabel } from '../modules/type-label.js'\n\ncustomElements.define('g-search-input', GSearchInput)\ncustomElements.define('g-search-results', GSearchResults)\n\nclass GSearchUI extends HTMLElement {\n\n  // public properties\n  timerId\n  styles = /* css */`\n    g-search-results {\n      position: relative;\n      width: 100%;\n      display: block;\n    }\n  `\n  template = /* html */`\n    <style>\n      ${ this.styles }\n    </style>\n    <div class=\"gsearch\">\n      <g-search-input></g-search-input>\n      <g-search-results></g-search-results>\n    </div>\n  `\n\n  // getters\n\n  constructor() {\n    super()\n    this.createShadowDOM()\n  }\n\n  createShadowDOM() {\n    // Create a shadow root\n    this.attachShadow({mode: 'open'}) // sets and returns 'this.shadowRoot'\n    const container = document.createElement('article')\n    container.innerHTML = this.template\n    // Attach the elements to the shadow DOM\n    this.shadowRoot.append(container)\n  }\n\n  connectedCallback() {\n    this.shadowRoot.addEventListener('input-change', (event) => {\n      this.debounce(() => {\n        if (!event.detail) {\n          return\n        }\n        this.runSearch(event.detail)\n      })\n    })\n    this.shadowRoot.addEventListener('search-road', (event) => {\n      // set input text to road + postnr + city\n      this.shadowRoot.querySelector('g-search-input').searchString = event.detail.vejnavn\n      clearTimeout(this.timerId)\n      this.runSearch(event.detail.vejnavn)\n    })\n\n    // Clears result list when a result was selected\n    this.shadowRoot.addEventListener('gsearch:select', (event) => {\n      this.shadowRoot.querySelector('g-search-input').searchString = getLabel(event.detail)\n      this.shadowRoot.querySelector('g-search-results').clear()\n    })\n  }\n\n  runSearch(searchString) {\n    search(searchString, this.dataset.token, this.dataset.resources, this.dataset.limit).then((response) => {\n      this.shadowRoot.querySelector('g-search-results').results = response\n    })\n  }\n\n  debounce(func, wait = 500) {\n    clearTimeout(this.timerId)\n    this.timerId = setTimeout(func, wait)\n  }\n}\n\nexport {\n  GSearchUI\n}", "import { createTranslator } from '../../saul/modules/saul-projection';\n\nconst translator = createTranslator('EPSG:25832', 'WGS84')\n\nexport { default as proj4 } from 'proj4';\nexport { GSearchUI } from '@dataforsyningen/gsearch-ui';\nexport { translator } \n"],
  "mappings": "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",
  "names": ["global_default", "defs", "PJD_3PARAM", "PJD_7PARAM", "PJD_GRIDSHIFT", "PJD_WGS84", "PJD_NODATUM", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_SEMIMINOR", "SRS_WGS84_ESQUARED", "SEC_TO_RAD", "HALF_PI", "SIXTH", "RA4", "RA6", "EPSLN", "D2R", "R2D", "FORTPI", "TWO_PI", "SPI", "exports", "exports", "units_default", "ignoredChar", "match", "obj", "key", "keys", "lkey", "i", "testkey", "processedKey", "projString_default", "defData", "self", "paramObj", "v", "a", "p", "split", "paramName", "paramVal", "paramOutname", "params", "D2R", "unit", "match", "units_default", "pm", "exports", "legalAxis", "parser_default", "parseString", "NEUTRAL", "KEYWORD", "NUMBER", "QUOTED", "AFTERQUOTE", "ENDED", "whitespace", "latin", "keyword", "endThings", "digets", "Parser", "text", "char", "newObjects", "txt", "parser", "mapit", "obj", "key", "value", "thing", "out", "newObj", "item", "sExpr", "v", "i", "D2R", "rename", "obj", "params", "outName", "inName", "d2r", "input", "cleanWKT", "wkt", "axisOrder", "i", "ii", "axis", "geogcs", "toMeter", "ratio", "renamer", "a", "list", "wkt_parser_default", "lisp", "parser_default", "type", "name", "sExpr", "defs", "name", "that", "def", "projString_default", "wkt_parser_default", "v", "global_default", "defs_default", "testObj", "code", "testDef", "defs_default", "codeWords", "testWKT", "word", "codes", "checkMercator", "item", "auth", "match", "checkProjStr", "ext", "testProj", "parse", "out", "wkt_parser_default", "maybeProjStr", "projString_default", "parseCode_default", "extend_default", "destination", "source", "value", "property", "msfnz_default", "eccent", "sinphi", "cosphi", "con", "sign_default", "x", "adjust_lon_default", "x", "SPI", "sign_default", "TWO_PI", "tsfnz_default", "eccent", "phi", "sinphi", "con", "com", "HALF_PI", "phi2z_default", "eccent", "ts", "eccnth", "con", "dphi", "phi", "HALF_PI", "i", "init", "con", "msfnz_default", "forward", "p", "lon", "lat", "R2D", "x", "y", "HALF_PI", "EPSLN", "adjust_lon_default", "FORTPI", "sinphi", "ts", "tsfnz_default", "inverse", "phi2z_default", "names", "merc_default", "init", "identity", "pt", "names", "longlat_default", "init", "identity", "projs", "merc_default", "longlat_default", "names", "projStore", "add", "proj", "len", "n", "get", "name", "n", "names", "projStore", "start", "projs", "add", "projections_default", "exports", "exports", "WGS84", "eccentricity", "a", "b", "rf", "R_A", "a2", "b2", "es", "e", "SIXTH", "RA4", "RA6", "ep2", "sphere", "ellps", "ellipse", "match", "exports", "WGS84", "EPSLN", "exports", "exports", "datum", "datumCode", "datum_params", "b", "es", "ep2", "nadgrids", "out", "PJD_NODATUM", "PJD_WGS84", "PJD_3PARAM", "PJD_7PARAM", "SEC_TO_RAD", "PJD_GRIDSHIFT", "datum_default", "loadedNadgrids", "nadgrid", "key", "data", "view", "isLittleEndian", "detectLittleEndian", "header", "readHeader", "subgrids", "readSubgrids", "getNadgrids", "nadgrids", "grids", "parseNadgridString", "value", "optional", "secondsToRadians", "seconds", "nFields", "decodeString", "start", "end", "gridOffset", "i", "subHeader", "readGridHeader", "nodes", "readGridNodes", "lngColumnCount", "latColumnCount", "mapNodes", "r", "offset", "gridHeader", "nodesOffset", "gridRecordLength", "gridShiftRecords", "record", "Projection", "srsCode", "callback", "error", "json", "parseCode_default", "ourProj", "datumDef", "match", "exports", "sphere_", "sphere", "ecc", "eccentricity", "nadgrids", "getNadgrids", "datumObj", "datum_default", "extend_default", "projections_default", "Proj_default", "compareDatums", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "geodeticToGeocentric", "p", "es", "Longitude", "Latitude", "Height", "Rn", "Sin_Lat", "Sin2_Lat", "Cos_Lat", "HALF_PI", "geocentricToGeodetic", "b", "genau", "genau2", "maxiter", "P", "RR", "CT", "ST", "RX", "RK", "RN", "CPHI0", "SPHI0", "CPHI", "SPHI", "SDPHI", "iter", "X", "Y", "Z", "geocentricToWgs84", "datum_type", "datum_params", "Dx_BF", "Dy_BF", "Dz_BF", "Rx_BF", "Ry_BF", "Rz_BF", "M_BF", "geocentricFromWgs84", "x_tmp", "y_tmp", "z_tmp", "checkParams", "type", "PJD_3PARAM", "PJD_7PARAM", "datum_transform_default", "source", "dest", "point", "compareDatums", "PJD_NODATUM", "source_a", "source_es", "PJD_GRIDSHIFT", "gridShiftCode", "applyGridShift", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_ESQUARED", "dest_a", "dest_b", "dest_es", "SRS_WGS84_SEMIMINOR", "geodeticToGeocentric", "geocentricToWgs84", "geocentricFromWgs84", "geocentricToGeodetic", "destGridShiftResult", "inverse", "input", "output", "onlyMandatoryGrids", "attemptedGrids", "i", "grid", "subgrid", "epsilon", "minX", "minY", "maxX", "maxY", "applySubgridShift", "R2D", "pin", "ct", "val", "tb", "adjust_lon_default", "t", "nadInterpolate", "tol", "dif", "del", "indx", "frct", "inx", "f00", "f10", "f11", "f01", "m11", "m10", "m00", "m01", "adjust_axis_default", "crs", "denorm", "point", "xin", "yin", "zin", "v", "t", "i", "out", "toPoint_default", "array", "out", "checkSanity_default", "point", "checkCoord", "num", "checkNotWGS", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "transform", "point", "enforceAxis", "wgs84", "toPoint_default", "checkSanity_default", "Proj_default", "adjust_axis_default", "D2R", "datum_transform_default", "R2D", "wgs84", "Proj_default", "transformer", "from", "to", "coords", "enforceAxis", "transformedArray", "out", "keys", "transform", "key", "checkProj", "item", "proj4", "fromProj", "toProj", "coord", "single", "obj", "core_default", "NUM_100K_SETS", "SET_ORIGIN_COLUMN_LETTERS", "SET_ORIGIN_ROW_LETTERS", "A", "I", "O", "V", "Z", "mgrs_default", "forward", "inverse", "toPoint", "ll", "accuracy", "encode", "LLtoUTM", "mgrs", "bbox", "UTMtoLL", "decode", "degToRad", "deg", "radToDeg", "rad", "Lat", "Long", "a", "eccSquared", "k0", "LongOrigin", "eccPrimeSquared", "N", "T", "C", "M", "LatRad", "LongRad", "LongOriginRad", "ZoneNumber", "UTMEasting", "UTMNorthing", "getLetterDesignator", "utm", "zoneLetter", "zoneNumber", "e1", "N1", "T1", "C1", "R1", "D", "mu", "phi1Rad", "x", "y", "lat", "lon", "result", "topRight", "LetterDesignator", "seasting", "snorthing", "get100kID", "easting", "northing", "setParm", "get100kSetForZone", "setColumn", "setRow", "getLetter100kID", "i", "column", "row", "parm", "index", "colOrigin", "rowOrigin", "colInt", "rowInt", "rollover", "twoLetter", "mgrsString", "length", "hunK", "sb", "testChar", "set", "east100k", "getEastingFromChar", "north100k", "getNorthingFromChar", "getMinNorthing", "remainder", "sep", "sepEasting", "sepNorthing", "accuracyBonus", "sepEastingString", "sepNorthingString", "e", "curCol", "eastingValue", "rewindMarker", "n", "curRow", "northingValue", "Point", "x", "y", "z", "coords", "mgrsStr", "toPoint", "accuracy", "forward", "Point_default", "C00", "C02", "C04", "C06", "C08", "C22", "C44", "C46", "C48", "C66", "C68", "C88", "pj_enfn_default", "es", "en", "t", "pj_mlfn_default", "phi", "sphi", "cphi", "en", "MAX_ITER", "pj_inv_mlfn_default", "arg", "es", "en", "k", "phi", "i", "s", "t", "pj_mlfn_default", "EPSLN", "init", "pj_enfn_default", "pj_mlfn_default", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "con", "x", "y", "sin_phi", "cos_phi", "al", "als", "c", "cs", "tq", "EPSLN", "t", "ts", "ml", "b", "inverse", "phi", "pj_inv_mlfn_default", "HALF_PI", "tan_phi", "d", "ds", "sign_default", "f", "g", "temp", "h", "names", "tmerc_default", "sinh_default", "x", "r", "hypot_default", "x", "y", "b", "log1py_default", "x", "y", "z", "asinhy_default", "x", "y", "log1py_default", "hypot_default", "gatg_default", "pp", "B", "cos_2B", "i", "h1", "h2", "h", "clens_default", "pp", "arg_r", "r", "i", "hr1", "hr2", "hr", "cosh_default", "x", "r", "clens_cmplx_default", "pp", "arg_r", "arg_i", "sin_arg_r", "cos_arg_r", "sinh_arg_i", "sinh_default", "cosh_arg_i", "cosh_default", "r", "i", "j", "hr", "hi1", "hr1", "hi", "hr2", "hi2", "init", "tmerc_default", "f", "n", "np", "Z", "gatg_default", "clens_default", "forward", "p", "Ce", "adjust_lon_default", "Cn", "sin_Cn", "cos_Cn", "sin_Ce", "cos_Ce", "hypot_default", "asinhy_default", "tmp", "clens_cmplx_default", "x", "y", "inverse", "lon", "lat", "sinh_default", "names", "etmerc_default", "adjust_zone_default", "zone", "lon", "adjust_lon_default", "dependsOn", "init", "zone", "adjust_zone_default", "D2R", "etmerc_default", "names", "utm_default", "srat_default", "esinp", "exp", "MAX_ITER", "init", "sphi", "cphi", "FORTPI", "srat_default", "forward", "p", "lon", "lat", "HALF_PI", "inverse", "DEL_TOL", "num", "i", "names", "gauss_default", "init", "gauss_default", "forward", "p", "sinc", "cosc", "cosl", "k", "adjust_lon_default", "inverse", "lon", "lat", "rho", "c", "names", "sterea_default", "ssfn_", "phit", "sinphi", "eccen", "HALF_PI", "init", "EPSLN", "sign_default", "msfnz_default", "tsfnz_default", "forward", "p", "lon", "lat", "sinlat", "coslat", "A", "X", "sinX", "cosX", "ts", "rh", "dlon", "adjust_lon_default", "inverse", "ce", "Chi", "c", "phi2z_default", "names", "stere_default", "init", "phy0", "sinPhy0", "semiMajorAxis", "invF", "flattening", "e2", "e", "k1", "k2", "k3", "forward", "p", "Sa1", "Sa2", "S", "b", "I", "rotI", "rotB", "inverse", "Y", "X", "lambda", "phy", "prevPhy", "iteration", "names", "somerc_default", "TOL", "isTypeA", "P", "typeAProjections", "projectionName", "init", "con", "com", "cosph0", "D", "F", "H", "L", "sinph0", "p", "J", "gamma", "gamma0", "lamc", "lam1", "lam2", "phi1", "phi2", "alpha_c", "AB", "alp", "gam", "D2R", "HALF_PI", "one_es", "EPSLN", "tsfnz_default", "TWO_PI", "adjust_lon_default", "FORTPI", "forward", "coords", "S", "T", "U", "V", "W", "temp", "u", "v", "inverse", "Qp", "Sp", "Tp", "Vp", "Up", "phi2z_default", "names", "omerc_default", "init", "EPSLN", "temp", "sin1", "cos1", "ms1", "msfnz_default", "ts1", "tsfnz_default", "sin2", "cos2", "ms2", "ts2", "ts0", "forward", "p", "lon", "lat", "sign_default", "HALF_PI", "con", "ts", "rh1", "theta", "adjust_lon_default", "inverse", "x", "y", "phi2z_default", "names", "lcc_default", "init", "forward", "p", "gfi", "u", "deltav", "d", "eps", "ro", "lon", "lat", "delta_lon", "adjust_lon_default", "inverse", "s", "fi1", "ok", "tmp", "iter", "names", "krovak_default", "mlfn_default", "e0", "e1", "e2", "e3", "phi", "e0fn_default", "x", "e1fn_default", "x", "e2fn_default", "x", "e3fn_default", "x", "gN_default", "a", "e", "sinphi", "temp", "adjust_lat_default", "x", "HALF_PI", "sign_default", "imlfn_default", "ml", "e0", "e1", "e2", "e3", "phi", "dphi", "i", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "x", "y", "lam", "phi", "adjust_lon_default", "sinphi", "cosphi", "nl", "gN_default", "tl", "al", "asq", "cl", "ml", "inverse", "dd", "ml1", "phi1", "imlfn_default", "HALF_PI", "EPSLN", "nl1", "rl1", "tl1", "dl", "dsq", "adjust_lat_default", "names", "cass_default", "qsfnz_default", "eccent", "sinphi", "con", "S_POLE", "N_POLE", "EQUIT", "OBLIQ", "init", "HALF_PI", "EPSLN", "sinphi", "qsfnz_default", "authset", "forward", "p", "x", "y", "coslam", "sinlam", "q", "sinb", "cosb", "b", "cosphi", "lam", "phi", "adjust_lon_default", "FORTPI", "inverse", "cCe", "sCe", "rho", "ab", "cosz", "rh", "sinz", "authlat", "P00", "P01", "P02", "P10", "P11", "P20", "es", "t", "APA", "beta", "names", "laea_default", "asinz_default", "x", "init", "EPSLN", "msfnz_default", "qsfnz_default", "forward", "p", "lon", "lat", "qs", "rh1", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "phi1z", "eccent", "sinphi", "cosphi", "com", "dphi", "phi", "asinz_default", "eccnts", "i", "names", "aea_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "sinc", "cosc", "c", "asinz_default", "names", "gnom_default", "iqsfnz_default", "eccent", "q", "temp", "HALF_PI", "phi", "dphi", "sin_phi", "cos_phi", "con", "i", "init", "msfnz_default", "forward", "p", "lon", "lat", "x", "y", "dlon", "adjust_lon_default", "qs", "qsfnz_default", "inverse", "iqsfnz_default", "names", "cea_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "dlat", "adjust_lat_default", "inverse", "x", "y", "names", "eqc_default", "MAX_ITER", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "lon", "lat", "x", "y", "el", "dlon", "adjust_lon_default", "EPSLN", "adjust_lat_default", "nl", "gN_default", "inverse", "i", "al", "bl", "phi", "dphi", "tanphi", "cl", "mln", "mlnp", "ma", "con", "names", "poly_default", "init", "forward", "p", "n", "lon", "lat", "delta_lat", "delta_lon", "d_phi", "SEC_TO_RAD", "d_lambda", "d_phi_n", "d_psi", "th_re", "th_im", "th_n_re", "th_n_im", "th_n_re1", "th_n_im1", "z_re", "z_im", "inverse", "x", "y", "delta_x", "delta_y", "z_n_re", "z_n_im", "z_n_re1", "z_n_im1", "i", "num_re", "num_im", "den_re", "den_im", "den2", "d_psi_n", "names", "nzmg_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "inverse", "names", "mill_default", "MAX_ITER", "init", "pj_enfn_default", "forward", "p", "x", "y", "lon", "lat", "adjust_lon_default", "k", "i", "V", "EPSLN", "s", "c", "pj_mlfn_default", "inverse", "temp", "asinz_default", "adjust_lat_default", "pj_inv_mlfn_default", "HALF_PI", "names", "sinu_default", "init", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "theta", "con", "delta_theta", "EPSLN", "x", "y", "inverse", "arg", "names", "moll_default", "init", "EPSLN", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "msfnz_default", "mlfn_default", "forward", "p", "lon", "lat", "rh1", "ml", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "adjust_lat_default", "imlfn_default", "names", "eqdc_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "EPSLN", "theta", "asinz_default", "HALF_PI", "al", "asq", "sinth", "costh", "g", "gsq", "m", "msq", "con", "q", "inverse", "xx", "yy", "xys", "c1", "c2", "c3", "a1", "m1", "th1", "d", "names", "vandg_default", "init", "forward", "p", "lon", "lat", "sinphi", "cosphi", "dlon", "adjust_lon_default", "e0", "e1", "e2", "e3", "Mlp", "Ml", "tanphi", "Nl1", "Nl", "psi", "Az", "G", "H", "GH", "Hs", "c", "kp", "cos_c", "s", "s2", "s3", "s4", "s5", "EPSLN", "HALF_PI", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "gN_default", "inverse", "rh", "z", "sinz", "cosz", "con", "N1", "cosAz", "tmp", "A", "B", "D", "Ee", "F", "sinpsi", "asinz_default", "imlfn_default", "names", "aeqd_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "z", "sinz", "cosz", "con", "asinz_default", "HALF_PI", "names", "ortho_default", "FACE_ENUM", "AREA_ENUM", "init", "HALF_PI", "FORTPI", "forward", "p", "xy", "lat", "lon", "theta", "phi", "t", "mu", "area", "SPI", "q", "r", "s", "sinlat", "coslat", "sinlon", "coslon", "qsc_shift_lon_origin", "qsc_fwd_equat_face_theta", "inverse", "lp", "nu", "cosmu", "tannu", "tantheta", "cosphi", "invert_sign", "tanphi", "xa", "y", "x", "EPSLN", "offset", "slon", "TWO_PI", "names", "qsc_default", "COEFS_X", "COEFS_Y", "FXC", "FYC", "C1", "R2D", "RC1", "NODES", "poly3_val", "coefs", "x", "poly3_der", "newton_rapshon", "f_df", "start", "max_err", "iters", "upd", "init", "forward", "ll", "lon", "adjust_lon_default", "dphi", "i", "xy", "inverse", "HALF_PI", "t", "EPSLN", "D2R", "names", "robin_default", "init", "forward", "p", "point", "geodeticToGeocentric", "inverse", "geocentricToGeodetic", "names", "geocent_default", "mode", "params", "init", "p", "D2R", "HALF_PI", "EPSLN", "omega", "gamma", "forward", "sinphi", "cosphi", "coslam", "x", "y", "yt", "ba", "inverse", "r", "bm", "bq", "rh", "hypot_default", "cosz", "sinz", "names", "tpers_default", "init", "one_es", "rone_es", "forward", "p", "lon", "lat", "tmp", "v_x", "v_y", "v_z", "r", "hypot_default", "inverse", "a", "b", "det", "k", "v_zp", "names", "geos_default", "projs_default", "proj4", "tmerc_default", "etmerc_default", "utm_default", "sterea_default", "stere_default", "somerc_default", "omerc_default", "lcc_default", "krovak_default", "cass_default", "laea_default", "aea_default", "gnom_default", "cea_default", "eqc_default", "poly_default", "nzmg_default", "mill_default", "sinu_default", "moll_default", "eqdc_default", "vandg_default", "aeqd_default", "ortho_default", "qsc_default", "robin_default", "geocent_default", "tpers_default", "geos_default", "core_default", "Proj_default", "Point_default", "toPoint_default", "defs_default", "nadgrid", "transform", "mgrs_default", "projs_default", "lib_default", "epsg25832proj", "proj4object", "createTranslator", "projection1", "projection2", "lib_default", "global_default", "defs", "PJD_3PARAM", "PJD_7PARAM", "PJD_GRIDSHIFT", "PJD_WGS84", "PJD_NODATUM", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_SEMIMINOR", "SRS_WGS84_ESQUARED", "SEC_TO_RAD", "HALF_PI", "SIXTH", "RA4", "RA6", "EPSLN", "D2R", "R2D", "FORTPI", "TWO_PI", "SPI", "exports", "exports", "units_default", "ignoredChar", "match", "obj", "key", "keys", "lkey", "i", "testkey", "processedKey", "projString_default", "defData", "self", "paramObj", "v", "a", "p", "split", "paramName", "paramVal", "paramOutname", "params", "D2R", "unit", "match", "units_default", "pm", "exports", "legalAxis", "parser_default", "parseString", "NEUTRAL", "KEYWORD", "NUMBER", "QUOTED", "AFTERQUOTE", "ENDED", "whitespace", "latin", "keyword", "endThings", "digets", "Parser", "text", "char", "newObjects", "txt", "parser", "mapit", "obj", "key", "value", "thing", "out", "newObj", "item", "sExpr", "v", "i", "D2R", "rename", "obj", "params", "outName", "inName", "d2r", "input", "cleanWKT", "wkt", "axisOrder", "i", "ii", "axis", "geogcs", "toMeter", "ratio", "renamer", "a", "list", "wkt_parser_default", "lisp", "parser_default", "type", "name", "sExpr", "defs", "name", "that", "def", "projString_default", "wkt_parser_default", "v", "global_default", "defs_default", "testObj", "code", "testDef", "defs_default", "codeWords", "testWKT", "word", "codes", "checkMercator", "item", "auth", "match", "checkProjStr", "ext", "testProj", "parse", "out", "wkt_parser_default", "maybeProjStr", "projString_default", "parseCode_default", "extend_default", "destination", "source", "value", "property", "msfnz_default", "eccent", "sinphi", "cosphi", "con", "sign_default", "x", "adjust_lon_default", "x", "SPI", "sign_default", "TWO_PI", "tsfnz_default", "eccent", "phi", "sinphi", "con", "com", "HALF_PI", "phi2z_default", "eccent", "ts", "eccnth", "con", "dphi", "phi", "HALF_PI", "i", "init", "con", "msfnz_default", "forward", "p", "lon", "lat", "R2D", "x", "y", "HALF_PI", "EPSLN", "adjust_lon_default", "FORTPI", "sinphi", "ts", "tsfnz_default", "inverse", "phi2z_default", "names", "merc_default", "init", "identity", "pt", "names", "longlat_default", "init", "identity", "projs", "merc_default", "longlat_default", "names", "projStore", "add", "proj", "len", "n", "get", "name", "n", "names", "projStore", "start", "projs", "add", "projections_default", "exports", "exports", "WGS84", "eccentricity", "a", "b", "rf", "R_A", "a2", "b2", "es", "e", "SIXTH", "RA4", "RA6", "ep2", "sphere", "ellps", "ellipse", "match", "exports", "WGS84", "EPSLN", "exports", "exports", "datum", "datumCode", "datum_params", "b", "es", "ep2", "nadgrids", "out", "PJD_NODATUM", "PJD_WGS84", "PJD_3PARAM", "PJD_7PARAM", "SEC_TO_RAD", "PJD_GRIDSHIFT", "datum_default", "loadedNadgrids", "nadgrid", "key", "data", "view", "isLittleEndian", "detectLittleEndian", "header", "readHeader", "subgrids", "readSubgrids", "getNadgrids", "nadgrids", "grids", "parseNadgridString", "value", "optional", "secondsToRadians", "seconds", "nFields", "decodeString", "start", "end", "gridOffset", "i", "subHeader", "readGridHeader", "nodes", "readGridNodes", "lngColumnCount", "latColumnCount", "mapNodes", "r", "offset", "gridHeader", "nodesOffset", "gridRecordLength", "gridShiftRecords", "record", "Projection", "srsCode", "callback", "error", "json", "parseCode_default", "ourProj", "datumDef", "match", "exports", "sphere_", "sphere", "ecc", "eccentricity", "nadgrids", "getNadgrids", "datumObj", "datum_default", "extend_default", "projections_default", "Proj_default", "compareDatums", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "geodeticToGeocentric", "p", "es", "Longitude", "Latitude", "Height", "Rn", "Sin_Lat", "Sin2_Lat", "Cos_Lat", "HALF_PI", "geocentricToGeodetic", "b", "genau", "genau2", "maxiter", "P", "RR", "CT", "ST", "RX", "RK", "RN", "CPHI0", "SPHI0", "CPHI", "SPHI", "SDPHI", "iter", "X", "Y", "Z", "geocentricToWgs84", "datum_type", "datum_params", "Dx_BF", "Dy_BF", "Dz_BF", "Rx_BF", "Ry_BF", "Rz_BF", "M_BF", "geocentricFromWgs84", "x_tmp", "y_tmp", "z_tmp", "checkParams", "type", "PJD_3PARAM", "PJD_7PARAM", "datum_transform_default", "source", "dest", "point", "compareDatums", "PJD_NODATUM", "source_a", "source_es", "PJD_GRIDSHIFT", "gridShiftCode", "applyGridShift", "SRS_WGS84_SEMIMAJOR", "SRS_WGS84_ESQUARED", "dest_a", "dest_b", "dest_es", "SRS_WGS84_SEMIMINOR", "geodeticToGeocentric", "geocentricToWgs84", "geocentricFromWgs84", "geocentricToGeodetic", "destGridShiftResult", "inverse", "input", "output", "onlyMandatoryGrids", "attemptedGrids", "i", "grid", "subgrid", "epsilon", "minX", "minY", "maxX", "maxY", "applySubgridShift", "R2D", "pin", "ct", "val", "tb", "adjust_lon_default", "t", "nadInterpolate", "tol", "dif", "del", "indx", "frct", "inx", "f00", "f10", "f11", "f01", "m11", "m10", "m00", "m01", "adjust_axis_default", "crs", "denorm", "point", "xin", "yin", "zin", "v", "t", "i", "out", "toPoint_default", "array", "out", "checkSanity_default", "point", "checkCoord", "num", "checkNotWGS", "source", "dest", "PJD_3PARAM", "PJD_7PARAM", "transform", "point", "enforceAxis", "wgs84", "toPoint_default", "checkSanity_default", "Proj_default", "adjust_axis_default", "D2R", "datum_transform_default", "R2D", "wgs84", "Proj_default", "transformer", "from", "to", "coords", "enforceAxis", "transformedArray", "out", "keys", "transform", "key", "checkProj", "item", "proj4", "fromProj", "toProj", "coord", "single", "obj", "core_default", "NUM_100K_SETS", "SET_ORIGIN_COLUMN_LETTERS", "SET_ORIGIN_ROW_LETTERS", "A", "I", "O", "V", "Z", "mgrs_default", "forward", "inverse", "toPoint", "ll", "accuracy", "encode", "LLtoUTM", "mgrs", "bbox", "UTMtoLL", "decode", "degToRad", "deg", "radToDeg", "rad", "Lat", "Long", "a", "eccSquared", "k0", "LongOrigin", "eccPrimeSquared", "N", "T", "C", "M", "LatRad", "LongRad", "LongOriginRad", "ZoneNumber", "UTMEasting", "UTMNorthing", "getLetterDesignator", "utm", "zoneLetter", "zoneNumber", "e1", "N1", "T1", "C1", "R1", "D", "mu", "phi1Rad", "x", "y", "lat", "lon", "result", "topRight", "LetterDesignator", "seasting", "snorthing", "get100kID", "easting", "northing", "setParm", "get100kSetForZone", "setColumn", "setRow", "getLetter100kID", "i", "column", "row", "parm", "index", "colOrigin", "rowOrigin", "colInt", "rowInt", "rollover", "twoLetter", "mgrsString", "length", "hunK", "sb", "testChar", "set", "east100k", "getEastingFromChar", "north100k", "getNorthingFromChar", "getMinNorthing", "remainder", "sep", "sepEasting", "sepNorthing", "accuracyBonus", "sepEastingString", "sepNorthingString", "e", "curCol", "eastingValue", "rewindMarker", "n", "curRow", "northingValue", "Point", "x", "y", "z", "coords", "mgrsStr", "toPoint", "accuracy", "forward", "Point_default", "C00", "C02", "C04", "C06", "C08", "C22", "C44", "C46", "C48", "C66", "C68", "C88", "pj_enfn_default", "es", "en", "t", "pj_mlfn_default", "phi", "sphi", "cphi", "en", "MAX_ITER", "pj_inv_mlfn_default", "arg", "es", "en", "k", "phi", "i", "s", "t", "pj_mlfn_default", "EPSLN", "init", "pj_enfn_default", "pj_mlfn_default", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "con", "x", "y", "sin_phi", "cos_phi", "al", "als", "c", "cs", "tq", "EPSLN", "t", "ts", "ml", "b", "inverse", "phi", "pj_inv_mlfn_default", "HALF_PI", "tan_phi", "d", "ds", "sign_default", "f", "g", "temp", "h", "names", "tmerc_default", "sinh_default", "x", "r", "hypot_default", "x", "y", "b", "log1py_default", "x", "y", "z", "asinhy_default", "x", "y", "log1py_default", "hypot_default", "gatg_default", "pp", "B", "cos_2B", "i", "h1", "h2", "h", "clens_default", "pp", "arg_r", "r", "i", "hr1", "hr2", "hr", "cosh_default", "x", "r", "clens_cmplx_default", "pp", "arg_r", "arg_i", "sin_arg_r", "cos_arg_r", "sinh_arg_i", "sinh_default", "cosh_arg_i", "cosh_default", "r", "i", "j", "hr", "hi1", "hr1", "hi", "hr2", "hi2", "init", "tmerc_default", "f", "n", "np", "Z", "gatg_default", "clens_default", "forward", "p", "Ce", "adjust_lon_default", "Cn", "sin_Cn", "cos_Cn", "sin_Ce", "cos_Ce", "hypot_default", "asinhy_default", "tmp", "clens_cmplx_default", "x", "y", "inverse", "lon", "lat", "sinh_default", "names", "etmerc_default", "adjust_zone_default", "zone", "lon", "adjust_lon_default", "dependsOn", "init", "zone", "adjust_zone_default", "D2R", "etmerc_default", "names", "utm_default", "srat_default", "esinp", "exp", "MAX_ITER", "init", "sphi", "cphi", "FORTPI", "srat_default", "forward", "p", "lon", "lat", "HALF_PI", "inverse", "DEL_TOL", "num", "i", "names", "gauss_default", "init", "gauss_default", "forward", "p", "sinc", "cosc", "cosl", "k", "adjust_lon_default", "inverse", "lon", "lat", "rho", "c", "names", "sterea_default", "ssfn_", "phit", "sinphi", "eccen", "HALF_PI", "init", "EPSLN", "sign_default", "msfnz_default", "tsfnz_default", "forward", "p", "lon", "lat", "sinlat", "coslat", "A", "X", "sinX", "cosX", "ts", "rh", "dlon", "adjust_lon_default", "inverse", "ce", "Chi", "c", "phi2z_default", "names", "stere_default", "init", "phy0", "sinPhy0", "semiMajorAxis", "invF", "flattening", "e2", "e", "k1", "k2", "k3", "forward", "p", "Sa1", "Sa2", "S", "b", "I", "rotI", "rotB", "inverse", "Y", "X", "lambda", "phy", "prevPhy", "iteration", "names", "somerc_default", "TOL", "isTypeA", "P", "typeAProjections", "projectionName", "init", "con", "com", "cosph0", "D", "F", "H", "L", "sinph0", "p", "J", "gamma", "gamma0", "lamc", "lam1", "lam2", "phi1", "phi2", "alpha_c", "AB", "alp", "gam", "D2R", "HALF_PI", "one_es", "EPSLN", "tsfnz_default", "TWO_PI", "adjust_lon_default", "FORTPI", "forward", "coords", "S", "T", "U", "V", "W", "temp", "u", "v", "inverse", "Qp", "Sp", "Tp", "Vp", "Up", "phi2z_default", "names", "omerc_default", "init", "EPSLN", "temp", "sin1", "cos1", "ms1", "msfnz_default", "ts1", "tsfnz_default", "sin2", "cos2", "ms2", "ts2", "ts0", "forward", "p", "lon", "lat", "sign_default", "HALF_PI", "con", "ts", "rh1", "theta", "adjust_lon_default", "inverse", "x", "y", "phi2z_default", "names", "lcc_default", "init", "forward", "p", "gfi", "u", "deltav", "d", "eps", "ro", "lon", "lat", "delta_lon", "adjust_lon_default", "inverse", "s", "fi1", "ok", "tmp", "iter", "names", "krovak_default", "mlfn_default", "e0", "e1", "e2", "e3", "phi", "e0fn_default", "x", "e1fn_default", "x", "e2fn_default", "x", "e3fn_default", "x", "gN_default", "a", "e", "sinphi", "temp", "adjust_lat_default", "x", "HALF_PI", "sign_default", "imlfn_default", "ml", "e0", "e1", "e2", "e3", "phi", "dphi", "i", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "x", "y", "lam", "phi", "adjust_lon_default", "sinphi", "cosphi", "nl", "gN_default", "tl", "al", "asq", "cl", "ml", "inverse", "dd", "ml1", "phi1", "imlfn_default", "HALF_PI", "EPSLN", "nl1", "rl1", "tl1", "dl", "dsq", "adjust_lat_default", "names", "cass_default", "qsfnz_default", "eccent", "sinphi", "con", "S_POLE", "N_POLE", "EQUIT", "OBLIQ", "init", "HALF_PI", "EPSLN", "sinphi", "qsfnz_default", "authset", "forward", "p", "x", "y", "coslam", "sinlam", "q", "sinb", "cosb", "b", "cosphi", "lam", "phi", "adjust_lon_default", "FORTPI", "inverse", "cCe", "sCe", "rho", "ab", "cosz", "rh", "sinz", "authlat", "P00", "P01", "P02", "P10", "P11", "P20", "es", "t", "APA", "beta", "names", "laea_default", "asinz_default", "x", "init", "EPSLN", "msfnz_default", "qsfnz_default", "forward", "p", "lon", "lat", "qs", "rh1", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "phi1z", "eccent", "sinphi", "cosphi", "com", "dphi", "phi", "asinz_default", "eccnts", "i", "names", "aea_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "sinc", "cosc", "c", "asinz_default", "names", "gnom_default", "iqsfnz_default", "eccent", "q", "temp", "HALF_PI", "phi", "dphi", "sin_phi", "cos_phi", "con", "i", "init", "msfnz_default", "forward", "p", "lon", "lat", "x", "y", "dlon", "adjust_lon_default", "qs", "qsfnz_default", "inverse", "iqsfnz_default", "names", "cea_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "dlat", "adjust_lat_default", "inverse", "x", "y", "names", "eqc_default", "MAX_ITER", "init", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "forward", "p", "lon", "lat", "x", "y", "el", "dlon", "adjust_lon_default", "EPSLN", "adjust_lat_default", "nl", "gN_default", "inverse", "i", "al", "bl", "phi", "dphi", "tanphi", "cl", "mln", "mlnp", "ma", "con", "names", "poly_default", "init", "forward", "p", "n", "lon", "lat", "delta_lat", "delta_lon", "d_phi", "SEC_TO_RAD", "d_lambda", "d_phi_n", "d_psi", "th_re", "th_im", "th_n_re", "th_n_im", "th_n_re1", "th_n_im1", "z_re", "z_im", "inverse", "x", "y", "delta_x", "delta_y", "z_n_re", "z_n_im", "z_n_re1", "z_n_im1", "i", "num_re", "num_im", "den_re", "den_im", "den2", "d_psi_n", "names", "nzmg_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "inverse", "names", "mill_default", "MAX_ITER", "init", "pj_enfn_default", "forward", "p", "x", "y", "lon", "lat", "adjust_lon_default", "k", "i", "V", "EPSLN", "s", "c", "pj_mlfn_default", "inverse", "temp", "asinz_default", "adjust_lat_default", "pj_inv_mlfn_default", "HALF_PI", "names", "sinu_default", "init", "forward", "p", "lon", "lat", "delta_lon", "adjust_lon_default", "theta", "con", "delta_theta", "EPSLN", "x", "y", "inverse", "arg", "names", "moll_default", "init", "EPSLN", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "msfnz_default", "mlfn_default", "forward", "p", "lon", "lat", "rh1", "ml", "theta", "adjust_lon_default", "x", "y", "inverse", "con", "adjust_lat_default", "imlfn_default", "names", "eqdc_default", "init", "forward", "p", "lon", "lat", "dlon", "adjust_lon_default", "x", "y", "EPSLN", "theta", "asinz_default", "HALF_PI", "al", "asq", "sinth", "costh", "g", "gsq", "m", "msq", "con", "q", "inverse", "xx", "yy", "xys", "c1", "c2", "c3", "a1", "m1", "th1", "d", "names", "vandg_default", "init", "forward", "p", "lon", "lat", "sinphi", "cosphi", "dlon", "adjust_lon_default", "e0", "e1", "e2", "e3", "Mlp", "Ml", "tanphi", "Nl1", "Nl", "psi", "Az", "G", "H", "GH", "Hs", "c", "kp", "cos_c", "s", "s2", "s3", "s4", "s5", "EPSLN", "HALF_PI", "e0fn_default", "e1fn_default", "e2fn_default", "e3fn_default", "mlfn_default", "gN_default", "inverse", "rh", "z", "sinz", "cosz", "con", "N1", "cosAz", "tmp", "A", "B", "D", "Ee", "F", "sinpsi", "asinz_default", "imlfn_default", "names", "aeqd_default", "init", "forward", "p", "sinphi", "cosphi", "dlon", "coslon", "ksp", "g", "x", "y", "lon", "lat", "adjust_lon_default", "EPSLN", "inverse", "rh", "z", "sinz", "cosz", "con", "asinz_default", "HALF_PI", "names", "ortho_default", "FACE_ENUM", "AREA_ENUM", "init", "HALF_PI", "FORTPI", "forward", "p", "xy", "lat", "lon", "theta", "phi", "t", "mu", "area", "SPI", "q", "r", "s", "sinlat", "coslat", "sinlon", "coslon", "qsc_shift_lon_origin", "qsc_fwd_equat_face_theta", "inverse", "lp", "nu", "cosmu", "tannu", "tantheta", "cosphi", "invert_sign", "tanphi", "xa", "y", "x", "EPSLN", "offset", "slon", "TWO_PI", "names", "qsc_default", "COEFS_X", "COEFS_Y", "FXC", "FYC", "C1", "R2D", "RC1", "NODES", "poly3_val", "coefs", "x", "poly3_der", "newton_rapshon", "f_df", "start", "max_err", "iters", "upd", "init", "forward", "ll", "lon", "adjust_lon_default", "dphi", "i", "xy", "inverse", "HALF_PI", "t", "EPSLN", "D2R", "names", "robin_default", "init", "forward", "p", "point", "geodeticToGeocentric", "inverse", "geocentricToGeodetic", "names", "geocent_default", "mode", "params", "init", "p", "D2R", "HALF_PI", "EPSLN", "omega", "gamma", "forward", "sinphi", "cosphi", "coslam", "x", "y", "yt", "ba", "inverse", "r", "bm", "bq", "rh", "hypot_default", "cosz", "sinz", "names", "tpers_default", "init", "one_es", "rone_es", "forward", "p", "lon", "lat", "tmp", "v_x", "v_y", "v_z", "r", "hypot_default", "inverse", "a", "b", "det", "k", "v_zp", "names", "geos_default", "projs_default", "proj4", "tmerc_default", "etmerc_default", "utm_default", "sterea_default", "stere_default", "somerc_default", "omerc_default", "lcc_default", "krovak_default", "cass_default", "laea_default", "aea_default", "gnom_default", "cea_default", "eqc_default", "poly_default", "nzmg_default", "mill_default", "sinu_default", "moll_default", "eqdc_default", "vandg_default", "aeqd_default", "ortho_default", "qsc_default", "robin_default", "geocent_default", "tpers_default", "geos_default", "core_default", "Proj_default", "Point_default", "toPoint_default", "defs_default", "nadgrid", "transform", "mgrs_default", "projs_default", "lib_default", "GSearchInput", "searchString", "input", "container", "event", "GSearchResultBox", "data", "title", "template", "GSearchNoResultBox", "GSearchResultBox", "GSearchNoResultBox", "GSearchResults", "data", "container", "list", "el", "listItem", "gsearchUrl", "defaultResources", "error_msg", "HttpResponseHandler", "response", "is_json", "error_msg", "get", "url", "config", "error", "search", "searchString", "token", "resources", "limit", "defaultResources", "url", "gsearchUrl", "get", "getLabel", "obj", "GSearchInput", "GSearchResults", "GSearchUI", "container", "event", "getLabel", "searchString", "search", "response", "func", "wait", "translator", "createTranslator"]
}
